{"version":3,"file":"288.main.bundle.js","mappings":";mIASA,MAAMA,EAAiBC,GAAQA,GAAQA,EAAKC,SAAWD,EAAKE,YACtDC,EAAa,CAACC,EAAKC,IAAUD,GAAOC,EAAMD,EAAM,OAChDE,EAAgB,CAACF,EAAKC,IAAUD,IAAQC,EAAMD,EAAM,OAQ1D,SAASG,EAAiBC,EAAMC,EAAKC,GACnC,YAAaC,IAATH,IAEuB,iBAATA,GACc,IAAvBA,EAAKI,QAAQH,GACK,mBAATD,IACuB,IAAhCA,EAAK,CAACE,UAAQE,QAAQH,GAIjC,CAEA,SAASI,EAAkBL,EAAME,GAI/B,MAHoB,mBAATF,IACTA,EAAOA,EAAK,CAACE,WAEK,iBAATF,EACF,CAACM,GAA0B,IAAvBN,EAAKI,QAAQ,KAAaG,GAA0B,IAAvBP,EAAKI,QAAQ,MAGhD,CAACE,GAAG,EAAOC,GAAG,EACvB,CA4CA,SAASC,EAAwBC,EAASC,EAAOR,GAC/C,MAAM,KAACF,EAAO,KAAI,UAAEW,EAAS,cAAEC,GAAiBH,GAAW,CAAC,EACtDI,EAvBR,UAA4B,EAACP,EAAC,EAAEC,GAAIL,GAClC,MAAMY,EAASZ,EAAMY,OACfC,EAAWC,OAAOC,KAAKH,GAC7B,IAAK,IAAII,EAAI,EAAGA,EAAIH,EAASI,OAAQD,IAAK,CACxC,MAAML,EAAQC,EAAOC,EAASG,IAC9B,GAAIX,GAAKM,EAAMO,KAAOb,GAAKM,EAAMQ,QAAUf,GAAKO,EAAMS,MAAQhB,GAAKO,EAAMU,MACvE,OAAOV,CAEX,CACA,OAAO,IACT,CAagBW,CAAmBd,EAAOR,GAElCT,EAAUY,EAAkBL,EAAME,GAClCuB,EAAepB,EAAkBM,EAAWT,GAGlD,GAAIU,EAAe,CACjB,MAAMc,EAAmBrB,EAAkBO,EAAeV,GAC1D,IAAK,MAAMyB,IAAQ,CAAC,IAAK,KACnBD,EAAiBC,KACnBF,EAAaE,GAAQlC,EAAQkC,GAC7BlC,EAAQkC,IAAQ,EAGtB,CAEA,GAAId,GAASY,EAAaZ,EAAMc,MAC9B,MAAO,CAACd,GAGV,MAAMe,EAAgB,GAMtB,OALA,OAAK1B,EAAMY,QAAQ,SAASe,GACtBpC,EAAQoC,EAAUF,OACpBC,EAAcE,KAAKD,EAEvB,IACOD,CACT,CAEA,MAAMG,EAAc,IAAIC,QAExB,SAASC,EAAS/B,GAChB,IAAIgC,EAAQH,EAAYI,IAAIjC,GAU5B,OATKgC,IACHA,EAAQ,CACNE,oBAAqB,CAAC,EACtBC,mBAAoB,CAAC,EACrBC,SAAU,CAAC,EACXC,SAAU,CAAC,GAEbR,EAAYS,IAAItC,EAAOgC,IAElBA,CACT,CAMA,SAASO,EAAU5B,EAAO6B,EAAMC,GAC9B,MAAMC,EAAQ/B,EAAMgC,IAAMhC,EAAMiC,IAC1BC,EAAWH,GAASF,EAAO,GAE3BM,EAAcnC,EAAMoC,eAAiBN,EAAOrC,EAAIqC,EAAOpC,EAGvD2C,EAAaC,KAAKN,IAAI,EAAGM,KAAKL,IAAI,GACrCjC,EAAMuC,iBAAiBJ,GAAenC,EAAMiC,KAAOF,GAAS,IAK/D,MAAO,CACLE,IAAKC,EAAWG,EAChBL,IAAKE,GAJY,EAAIG,GAMzB,CAEA,SAASG,EAASnB,EAAOrB,EAAOyC,EAAaC,EAAMC,GACjD,IAAIC,EAAQH,EAAYC,GACxB,GAAc,aAAVE,EAAsB,CACxB,MAAMC,EAAWxB,EAAME,oBAAoBvB,EAAM8C,IAAIJ,GACrDE,GAAQ,IAAAG,GAAeF,EAASjD,QAASiD,EAAS7C,MACpD,CACA,OAAO,IAAA+C,GAAeH,EAAOD,EAC/B,CAWA,SAASK,EAAYhD,GAAO,IAACiC,EAAG,IAAED,GAAMiB,EAAQpB,GAAO,GACrD,MAAMR,EAAQD,EAASpB,EAAMX,QACvB,GAACyD,EAAE,KAAEhC,EAAMlB,QAASsD,GAAalD,EAEjCyC,EAAcQ,IAAWA,EAAOH,IAAOG,EAAOnC,KAAU,CAAC,GACzD,SAACqC,EAAW,GAAKV,EACjBW,EAAWZ,EAASnB,EAAOrB,EAAOyC,EAAa,OAAO,KACtDY,EAAWb,EAASnB,EAAOrB,EAAOyC,EAAa,MAAOa,KAEtDvB,EAAQF,EAAOS,KAAKN,IAAIA,EAAMC,EAAKkB,GAAYnD,EAAMgC,IAAMhC,EAAMiC,IACjEsB,GAAUxB,EAAQC,EAAMC,GAAO,EAiBrC,OAfAD,GAAOuB,GADPtB,GAAOsB,GAGGH,GACRnB,EAAMmB,EACNpB,EAAMM,KAAKL,IAAImB,EAAWrB,EAAOsB,IACxBrB,EAAMqB,IACfrB,EAAMqB,EACNpB,EAAMK,KAAKN,IAAIqB,EAAWtB,EAAOqB,IAEnCF,EAAUjB,IAAMA,EAChBiB,EAAUlB,IAAMA,EAEhBX,EAAMG,mBAAmBxB,EAAM8C,IAAM,CAACb,MAAKD,OAGpChC,EAAMwD,MAAMvB,KAASjC,EAAMiC,KAAOjC,EAAMwD,MAAMxB,KAAShC,EAAMgC,GACtE,CAYA,MAAMyB,EAAiBV,GAAY,IAANA,GAAWW,MAAMX,GAAK,EAAIA,EAAI,EAAIT,KAAKL,IAAIK,KAAKqB,MAAMZ,IAAK,GAAKT,KAAKN,IAAIM,KAAKqB,MAAMZ,GAAI,GAkD/Ga,EAAU,CACdC,OAAQ,IACRC,OAAQ,IACRC,KAAM,KACNC,IAAK,MACLC,KAAM,OACNC,MAAO,OACPC,QAAS,OACTC,KAAM,UAGR,SAASC,EAAkBrE,EAAOsE,EAAOrB,EAAQsB,GAAU,GACzD,MAAOtC,IAAKuC,EAAWxC,IAAKyC,EAAO,QAAE7E,GAAWI,EAC1C2D,EAAQ/D,EAAQ8E,MAAQ9E,EAAQ8E,KAAKf,MACrCJ,EAASK,EAAQD,IAAU,EAC3BgB,EAAS3E,EAAMuC,iBAAiBvC,EAAM4E,iBAAiBJ,EAAYjB,GAAUe,GAC7EO,EAAS7E,EAAMuC,iBAAiBvC,EAAM4E,iBAAiBH,EAAUlB,GAAUe,IAC1ErC,IAAKmB,GAAW,IAAWpB,IAAKqB,EAAWC,KAAYiB,GAAWtB,GAAUA,EAAOjD,EAAMc,OAAS,CAAC,EAC1G,SAAI4C,MAAMiB,IAAWjB,MAAMmB,IAAWF,EAASvB,GAAYyB,EAASxB,IAM7DL,EAAYhD,EAAO,CAACiC,IAAK0C,EAAQ3C,IAAK6C,GAAS5B,EAAQsB,EAChE,CAEA,SAASO,EAAkB9E,EAAOsE,EAAOrB,GACvC,OAAOoB,EAAkBrE,EAAOsE,EAAOrB,GAAQ,EACjD,CAEA,MAAM8B,EAAgB,CACpBC,SApEF,SAA2BhF,EAAO6B,EAAMC,EAAQmB,GAC9C,MAAMqB,EAAQ1C,EAAU5B,EAAO6B,EAAMC,GAKrC,OAJI9B,EAAMiC,MAAQjC,EAAMgC,KAAOH,EAAO,GAdxC,SAAkC7B,GAChC,MACMiF,EADSjF,EAAMkF,YACG5E,OAAS,EAE7BN,EAAMiC,IAAM,IACdjC,EAAMiC,KAAO,GAEXjC,EAAMgC,IAAMiD,IACdjF,EAAMgC,KAAO,EAEjB,CAKImD,CAAyBnF,GAGpBgD,EAAYhD,EADF,CAACiC,IAAKjC,EAAMiC,IAAMwB,EAAca,EAAMrC,KAAMD,IAAKhC,EAAMgC,IAAMyB,EAAca,EAAMtC,MAC9DiB,GAAQ,EAC9C,EA8DEmC,QA7FF,SAA4BpF,EAAO6B,EAAMC,EAAQmB,GAC/C,MAAMqB,EAAQ1C,EAAU5B,EAAO6B,EAAMC,GAErC,OAAOkB,EAAYhD,EADF,CAACiC,IAAKjC,EAAMiC,IAAMqC,EAAMrC,IAAKD,IAAKhC,EAAMgC,IAAMsC,EAAMtC,KACjCiB,GAAQ,EAC9C,GA4FMoC,EAAoB,CACxBD,QA3FF,SAAgCpF,EAAOsF,EAAMC,EAAItC,GAC/CD,EAAYhD,EA9Cd,SAAkBA,EAAOwF,EAAQC,GAC/B,MAAMC,EAAK1F,EAAMuC,iBAAiBiD,GAC5BG,EAAK3F,EAAMuC,iBAAiBkD,GAClC,MAAO,CACLxD,IAAKK,KAAKL,IAAIyD,EAAIC,GAClB3D,IAAKM,KAAKN,IAAI0D,EAAIC,GAEtB,CAuCqBC,CAAS5F,EAAOsF,EAAMC,GAAKtC,GAAQ,EACxD,GA4FM4C,EAAe,CACnBb,SAhEF,SAA0BhF,EAAOsE,EAAOrB,GACtC,MACM6C,EADS9F,EAAMkF,YACS5E,OAAS,EACvC,IAAI,IAAC2B,EAAG,IAAED,GAAOhC,EAEjB,MAAM+B,EAAQO,KAAKN,IAAIA,EAAMC,EAAK,GAE5B8D,EAAYzD,KAAKqB,MAXzB,SAAqB3D,GACnB,OAAOA,EAAMoC,eAAiBpC,EAAMgG,MAAQhG,EAAMiG,MACpD,CAS+BC,CAAYlG,GAASsC,KAAKN,IAAID,EAAO,KAC5DoE,EAAW7D,KAAKqB,MAAMrB,KAAK8D,IAAI9B,EAAQyB,IAC7C,IAAIM,EAWJ,OAVI/B,GAASyB,GACX/D,EAAMM,KAAKL,IAAID,EAAMmE,EAAUL,GAC/B7D,EAAgB,IAAVF,EAAcC,EAAMA,EAAMD,EAChCsE,EAAUrE,IAAQ8D,GACTxB,EAAQyB,IACjB9D,EAAMK,KAAKN,IAAI,EAAGC,EAAMkE,GACxBnE,EAAgB,IAAVD,EAAcE,EAAMA,EAAMF,EAChCsE,EAAkB,IAARpE,GAGLe,EAAYhD,EAAO,CAACiC,MAAKD,OAAMiB,IAAWoD,CACnD,EA4CEjB,QAASf,EACTiC,YAAaxB,EACbyB,WAAYzB,GAYd,SAAS0B,EAAoBvD,EAAQhD,IACnC,OAAKgD,GAAQ,CAACwD,EAAK1H,KACZkB,EAAOlB,WACHkE,EAAOlE,EAChB,GAEJ,CAEA,SAAS2H,EAAyBrH,EAAOgC,GACvC,MAAM,OAACpB,GAAUZ,GACX,oBAACkC,EAAmB,mBAAEC,GAAsBH,EAalD,OAXA,OAAKpB,GAAQ,SAASD,IArBxB,SAAiCA,EAAOuB,EAAqBC,GAC3D,MAAM,GAACsB,EAAIlD,SAAS,IAACqC,EAAG,IAAED,IAAQhC,EAClC,IAAKuB,EAAoBuB,KAAQtB,EAAmBsB,GAClD,OAAO,EAET,MAAM6D,EAAWnF,EAAmBsB,GACpC,OAAO6D,EAAS1E,MAAQA,GAAO0E,EAAS3E,MAAQA,CAClD,EAeQ4E,CAAwB5G,EAAOuB,EAAqBC,KACtDD,EAAoBvB,EAAM8C,IAAM,CAC9Bb,IAAK,CAACjC,MAAOA,EAAMiC,IAAKrC,QAASI,EAAMJ,QAAQqC,KAC/CD,IAAK,CAAChC,MAAOA,EAAMgC,IAAKpC,QAASI,EAAMJ,QAAQoC,MAGrD,IAEAwE,EAAoBjF,EAAqBtB,GACzCuG,EAAoBhF,EAAoBvB,GACjCsB,CACT,CAEA,SAASsF,EAAO7G,EAAO8G,EAAQhF,EAAQmB,GACrC,MAAM8D,EAAKhC,EAAc/E,EAAMgH,OAASjC,EAAcK,SACtD,OAAS2B,EAAI,CAAC/G,EAAO8G,EAAQhF,EAAQmB,GACvC,CAEA,SAASgE,EAAWjH,EAAO8G,EAAQxB,EAAMC,EAAItC,GAC3C,MAAM8D,EAAK1B,EAAkBrF,EAAMgH,OAAS3B,EAAkBD,SAC9D,OAAS2B,EAAI,CAAC/G,EAAO8G,EAAQxB,EAAMC,EAAItC,GACzC,CAEA,SAASiE,EAAU7H,GACjB,MAAM8H,EAAK9H,EAAM+H,UACjB,MAAO,CACL3H,GAAI0H,EAAG1G,KAAO0G,EAAGzG,OAAS,EAC1BhB,GAAIyH,EAAG5G,IAAM4G,EAAG3G,QAAU,EAE9B,CAOA,SAASqB,EAAKxC,EAAOyH,EAAQO,EAAa,QACxC,MAAM,EAAC5H,EAAI,EAAC,EAAEC,EAAI,EAAC,WAAE4H,EAAaJ,EAAU7H,IAA4B,iBAAXyH,EAAsB,CAACrH,EAAGqH,EAAQpH,EAAGoH,GAAUA,EACtGzF,EAAQD,EAAS/B,IAChBO,SAAS,OAACqD,EAAQpB,KAAM0F,IAAgBlG,EAE/CqF,EAAyBrH,EAAOgC,GAEhC,MAAMmG,EAAiB,IAAN/H,EACXgI,EAAiB,IAAN/H,EACXqB,EAAgBpB,EAAwB4H,EAAaD,EAAYjI,IAEvE,OAAK0B,GAAiB1B,EAAMY,QAAQ,SAASD,GACvCA,EAAMoC,gBAAkBoF,EAC1BX,EAAO7G,EAAOP,EAAG6H,EAAYrE,IACnBjD,EAAMoC,gBAAkBqF,GAClCZ,EAAO7G,EAAON,EAAG4H,EAAYrE,EAEjC,IAEA5D,EAAMqI,OAAOL,IAEb,OAASE,EAAYI,OAAQ,CAAC,CAACtI,UACjC,CAEA,SAASuI,EAASvI,EAAOwI,EAAIC,EAAIT,EAAa,QAC5C,MAAMhG,EAAQD,EAAS/B,IAChBO,SAAS,OAACqD,EAAQpB,KAAM0F,IAAgBlG,GACzC,KAAClC,EAAO,MAAQoI,EAEtBb,EAAyBrH,EAAOgC,GAChC,MAAMmG,EAAWtI,EAAiBC,EAAM,IAAKE,GACvCoI,EAAWvI,EAAiBC,EAAM,IAAKE,IAE7C,OAAKA,EAAMY,QAAQ,SAASD,GACtBA,EAAMoC,gBAAkBoF,EAC1BP,EAAWjH,EAAO6H,EAAGpI,EAAGqI,EAAGrI,EAAGwD,IACpBjD,EAAMoC,gBAAkBqF,GAClCR,EAAWjH,EAAO6H,EAAGnI,EAAGoI,EAAGpI,EAAGuD,EAElC,IAEA5D,EAAMqI,OAAOL,IAEb,OAASE,EAAYI,OAAQ,CAAC,CAACtI,UACjC,CAmDA,SAAS0I,EAAS/H,EAAOsE,EAAOrB,EAAQ5B,GACtC,MAAM,SAACK,GAAYL,EAEb2G,EAActG,EAAS1B,EAAM8C,KAAO,GACtC,IAAAmF,GAAKD,MAAiB,IAAAC,GAAK3D,KAC7BA,GAAS0D,GAEX,MAAMjB,EAAKlB,EAAa7F,EAAMgH,OAASnB,EAAaT,SAChD,OAAS2B,EAAI,CAAC/G,EAAOsE,EAAOrB,IAE9BvB,EAAS1B,EAAM8C,IAAM,EAGrBpB,EAAS1B,EAAM8C,IAAMwB,CAEzB,CAEA,SAAS4D,EAAI7I,EAAOiF,EAAOvD,EAAesG,EAAa,QACrD,MAAM,EAAC5H,EAAI,EAAC,EAAEC,EAAI,GAAsB,iBAAV4E,EAAqB,CAAC7E,EAAG6E,EAAO5E,EAAG4E,GAASA,EACpEjD,EAAQD,EAAS/B,IAChBO,SAAUsI,IAAKC,EAAU,OAAElF,IAAW5B,GACvC,MAAC+G,GAASD,GAAc,CAAC,EAE/BzB,EAAyBrH,EAAOgC,GAEhC,MAAMmG,EAAiB,IAAN/H,EACXgI,EAAiB,IAAN/H,GAEjB,OAAKqB,GAAiB1B,EAAMY,QAAQ,SAASD,GACvCA,EAAMoC,gBAAkBoF,EAC1BO,EAAS/H,EAAOP,EAAGwD,EAAQ5B,IACjBrB,EAAMoC,gBAAkBqF,GAClCM,EAAS/H,EAAON,EAAGuD,EAAQ5B,EAE/B,IAEAhC,EAAMqI,OAAOL,IAEb,OAASe,EAAO,CAAC,CAAC/I,UACpB,CAEA,SAASgJ,EAAsBhJ,GAC7B,MAAMgC,EAAQD,EAAS/B,GACvBqH,EAAyBrH,EAAOgC,GAChC,MAAMiH,EAAc,CAAC,EACrB,IAAK,MAAMC,KAAWpI,OAAOC,KAAKf,EAAMY,QAAS,CAC/C,MAAM,IAACgC,EAAG,IAAED,GAAOX,EAAME,oBAAoBgH,IAAY,CAACtG,IAAK,CAAC,EAAGD,IAAK,CAAC,GACzEsG,EAAYC,GAAW,CAACtG,IAAKA,EAAIjC,MAAOgC,IAAKA,EAAIhC,MACnD,CAEA,OAAOsI,CACT,CAmBA,SAASE,EAAcnJ,EAAO2H,GAC5B,MAAM,SAACvF,GAAYL,EAAS/B,GACtBoJ,EAAUhH,EAASuF,GACrByB,GAAWA,EAAQC,SACrBD,EAAQC,OAAOC,oBAAoB3B,EAAMyB,UAClChH,EAASuF,GAEpB,CAEA,SAAS4B,EAAWvJ,EAAOqJ,EAAQ1B,EAAMyB,GACvC,MAAM,SAAChH,EAAQ,QAAE7B,GAAWwB,EAAS/B,GAC/BwJ,EAAapH,EAASuF,GACxB6B,GAAcA,EAAWH,SAAWA,IAIxCF,EAAcnJ,EAAO2H,GACrBvF,EAASuF,GAAShI,GAAUyJ,EAAQpJ,EAAOL,EAAOY,GAClD6B,EAASuF,GAAM0B,OAASA,EACxBA,EAAOI,iBAAiB9B,EAAMvF,EAASuF,IACzC,CAEA,SAAS+B,EAAU1J,EAAOL,GACxB,MAAMqC,EAAQD,EAAS/B,GACnBgC,EAAM2H,YACR3H,EAAM4H,UAAW,EACjB5H,EAAM6H,QAAUlK,EAChBK,EAAMqI,OAAO,QAEjB,CAEA,SAASyB,EAAQ9J,EAAOL,GACtB,MAAMqC,EAAQD,EAAS/B,GAClBgC,EAAM2H,WAA2B,WAAdhK,EAAMD,MAI9ByJ,EAAcnJ,EAAO,WACrBgC,EAAM4H,UAAW,EACjB5H,EAAM2H,UAAY3H,EAAM6H,QAAU,KAClC7J,EAAMqI,OAAO,QACf,CAEA,SAAS0B,EAAU/J,EAAOL,EAAOuI,GAC/B,MAAM,YAAC8B,EAAW,eAAEC,GAAkB/B,EACtC,GAAI8B,EAAa,CACf,MAAMxJ,GAAQ,OAAoBb,EAAOK,GACzC,IAAuD,KAAnD,OAASgK,EAAa,CAAC,CAAChK,QAAOL,QAAOa,WAExC,OADA,OAASyJ,EAAgB,CAAC,CAACjK,QAAOL,YAC3B,CAEX,CACF,CAEA,SAASuK,EAAUlK,EAAOL,GACxB,MAAMqC,EAAQD,EAAS/B,IAChB6I,IAAKC,EAAYtG,KAAM0F,EAAc,CAAC,GAAKlG,EAAMzB,QACxD,GACmB,IAAjBZ,EAAMwK,QACN1K,EAAWJ,EAAeyJ,GAAanJ,IACvCC,EAAcP,EAAe6I,EAAYkC,MAAOzK,GAEhD,OAAO,OAASuI,EAAY+B,eAAgB,CAAC,CAACjK,QAAOL,YAGV,IAAzCoK,EAAU/J,EAAOL,EAAOuI,KAG5BlG,EAAM2H,UAAYhK,EAElB4J,EAAWvJ,EAAOA,EAAMqK,OAAQ,YAAaX,GAC7CH,EAAWvJ,EAAOsK,OAAOC,SAAU,UAAWT,GAChD,CAEA,SAASU,EAAgBxK,EAAOF,EAAM2K,EAAiBC,GACrD,MAAMvC,EAAWtI,EAAiBC,EAAM,IAAKE,GACvCoI,EAAWvI,EAAiBC,EAAM,IAAKE,GAC7C,IAAI,IAACkB,EAAG,KAAEE,EAAI,MAAEC,EAAK,OAAEF,EAAQwF,MAAOgE,EAAY/D,OAAQgE,GAAe5K,EAAM+H,UAE/E,MAAM8C,GAAa,OAAoBJ,EAAiBzK,GAClD8K,GAAW,OAAoBJ,EAAe1K,GAEhDmI,IACF/G,EAAO6B,KAAKL,IAAIiI,EAAWzK,EAAG0K,EAAS1K,GACvCiB,EAAQ4B,KAAKN,IAAIkI,EAAWzK,EAAG0K,EAAS1K,IAGtCgI,IACFlH,EAAM+B,KAAKL,IAAIiI,EAAWxK,EAAGyK,EAASzK,GACtCc,EAAS8B,KAAKN,IAAIkI,EAAWxK,EAAGyK,EAASzK,IAE3C,MAAMsG,EAAQtF,EAAQD,EAChBwF,EAASzF,EAASD,EAExB,MAAO,CACLE,OACAF,MACAG,QACAF,SACAwF,QACAC,SACAmE,MAAO5C,GAAYxB,EAAQ,GAAMgE,EAAahE,GAASgE,EAAc,EACrEK,MAAO5C,GAAYxB,EAAS,GAAMgE,EAAchE,GAAUgE,EAAe,EAE7E,CAEA,SAASK,EAAQjL,EAAOL,GACtB,MAAMqC,EAAQD,EAAS/B,GACvB,IAAKgC,EAAM2H,UACT,OAGFR,EAAcnJ,EAAO,aACrB,MAAM,KAACF,EAAI,eAAEoL,EAAgBd,MAAM,UAACe,EAAY,IAAMnJ,EAAMzB,QAAQiC,KAC9D4I,EAAOZ,EAAgBxK,EAAOF,EAAMkC,EAAM2H,UAAWhK,GACrD0L,EAAYxL,EAAiBC,EAAM,IAAKE,GAASoL,EAAKzE,MAAQ,EAC9D2E,EAAYzL,EAAiBC,EAAM,IAAKE,GAASoL,EAAKxE,OAAS,EAC/D2E,EAAWtI,KAAKuI,KAAKH,EAAYA,EAAYC,EAAYA,GAK/D,GAFAtJ,EAAM2H,UAAY3H,EAAM6H,QAAU,KAE9B0B,GAAYJ,EAGd,OAFAnJ,EAAM4H,UAAW,OACjB5J,EAAMqI,OAAO,QAIfE,EAASvI,EAAO,CAACI,EAAGgL,EAAKhK,KAAMf,EAAG+K,EAAKlK,KAAM,CAACd,EAAGgL,EAAK/J,MAAOhB,EAAG+K,EAAKjK,QAAS,QAE9EsK,YAAW,IAAOzJ,EAAM4H,UAAW,GAAQ,MAC3C,OAASsB,EAAgB,CAAC,CAAClL,UAC7B,CA0BA,SAAS0L,EAAM1L,EAAOL,GACpB,MAAOyC,UAAU,eAAC8I,GAAiB3K,SAAUiC,KAAM0F,IAAgBnG,EAAS/B,GAE5E,IA3BF,SAA4BA,EAAOL,EAAOuI,GAExC,GAAItI,EAAcP,EAAe6I,EAAYwD,OAAQ/L,IACnD,OAASuI,EAAY+B,eAAgB,CAAC,CAACjK,QAAOL,gBAIhD,IAA6C,IAAzCoK,EAAU/J,EAAOL,EAAOuI,KAKxBvI,EAAMgM,YACRhM,EAAMiM,sBAKa3L,IAAjBN,EAAMkM,QAGV,OAAO,CACT,CAKOC,CAAmB9L,EAAOL,EAAOuI,GACpC,OAGF,MAAMkD,EAAOzL,EAAM0J,OAAO0C,wBACpBC,EAAQ,GAAKrM,EAAMkM,QAAU,GAAK3D,EAAYwD,MAAMM,MAAQ9D,EAAYwD,MAAMM,OAUpFxJ,EAAKxC,EATU,CACbI,EAAG4L,EACH3L,EAAG2L,EACH/D,WAAY,CACV7H,EAAGT,EAAMsM,QAAUb,EAAKhK,KACxBf,EAAGV,EAAMuM,QAAUd,EAAKlK,OAMxBgK,GACFA,GAEJ,CAyCA,SAASiB,EAAcnM,EAAOgC,GAC5B,OAAO,SAASoK,EAAYzM,GAC1B,MAAOkJ,IAAKC,EAAYtG,KAAM0F,EAAc,CAAC,GAAKlG,EAAMzB,QACxD,IAAKuI,IAAeA,EAAWvJ,QAC7B,OAAO,EAET,MAAM8M,EAAW1M,GAASA,EAAM0M,SAChC,QAAKA,IAGArK,EAAMsK,SAAiC,UAAtB3M,EAAM4M,cAC1B3M,EAAcP,EAAeyJ,GAAauD,IAAa5M,EAAWJ,EAAe6I,EAAYkC,MAAOiC,OAEpG,OAASvD,EAAW0D,cAAe,CAAC,CAACxM,QAAOL,WACrC,GAGX,CACF,CAoBA,SAAS8M,EAAYzM,EAAOgC,EAAO0K,GACjC,GAAI1K,EAAMrB,MAAO,CACf,MAAM,OAAC8B,EAAM,SAAEkK,GAAYD,EAErBE,EAAc,EAAI5K,EAAMrB,MAAQ+L,EAAE/L,MAClCyK,EAAOsB,EAAErD,OAAO0C,wBAChBc,EAxBV,SAAmBrE,EAAIC,GAErB,MAAMqE,EAAS7J,KAAK8D,IAAIyB,EAAGyD,QAAUxD,EAAGwD,SAClCc,EAAS9J,KAAK8D,IAAIyB,EAAG0D,QAAUzD,EAAGyD,SAGlCc,EAAIF,EAASC,EACnB,IAAI3M,EAAGC,EAQP,OAPI2M,EAAI,IAAOA,EAAI,IACjB5M,EAAIC,GAAI,EACCyM,EAASC,EAClB3M,GAAI,EAEJC,GAAI,EAEC,CAACD,IAAGC,IACb,CAQkB4M,CAAUN,EAAS,GAAIA,EAAS,IACxC7M,EAAOkC,EAAMzB,QAAQiC,KAAK1C,KAUhC0C,EAAKxC,EATU,CACbI,EAAGyM,EAAMzM,GAAKP,EAAiBC,EAAM,IAAKE,GAAS4M,EAAc,EACjEvM,EAAGwM,EAAMxM,GAAKR,EAAiBC,EAAM,IAAKE,GAAS4M,EAAc,EACjE3E,WAAY,CACV7H,EAAGqC,EAAOrC,EAAIgL,EAAKhK,KACnBf,EAAGoC,EAAOpC,EAAI+K,EAAKlK,OAOvBc,EAAMrB,MAAQ+L,EAAE/L,KAClB,CACF,CAgBA,SAASuM,EAAUlN,EAAOgC,EAAO0K,GAC/B,MAAMzH,EAAQjD,EAAMiD,MAChBA,IACFjD,EAAMsK,SAAU,EAChBzD,EAAI7I,EAAO,CAACI,EAAGsM,EAAES,OAASlI,EAAM7E,EAAGC,EAAGqM,EAAEb,OAAS5G,EAAM5E,GAAI2B,EAAMoL,WACjEpL,EAAMiD,MAAQ,CAAC7E,EAAGsM,EAAES,OAAQ9M,EAAGqM,EAAEb,QAErC,CA+BA,MAAMwB,EAAU,IAAIvL,QA2CpB,SAASwL,EAAKtN,EAAOuN,EAAQhN,GAC3B,MAAMiN,EAAcjN,EAAQiC,KAAK4H,MAC3B,UAACT,EAAS,QAAEE,GAAW9H,EAAS/B,GAEtC,GAAIwN,EAAYC,WAAaF,IAAW1D,EACtC,OAEF,MAAM,KAACzI,EAAI,IAAEF,EAAG,MAAEyF,EAAK,OAAEC,GAAU4D,EAAgBxK,EAAOO,EAAQiC,KAAK1C,KAAM6J,EAAWE,GAClF6D,EAAM1N,EAAM0N,IAElBA,EAAIC,OACJD,EAAIE,YACJF,EAAIG,UAAYL,EAAYM,iBAAmB,wBAC/CJ,EAAIK,SAAS3M,EAAMF,EAAKyF,EAAOC,GAE3B4G,EAAYQ,YAAc,IAC5BN,EAAIO,UAAYT,EAAYQ,YAC5BN,EAAIQ,YAAcV,EAAYW,aAAe,oBAC7CT,EAAIU,WAAWhN,EAAMF,EAAKyF,EAAOC,IAEnC8G,EAAIW,SACN,CAEA,IAAIC,EAAS,CACX7K,GAAI,OAEJ8K,QA5BY,QA8BZC,SAAU,CACR3F,IAAK,CACHtJ,SAAS,EACTO,KAAM,KACNqL,UAAW,GACX3L,YAAa,MAEfgD,KAAM,CACJkJ,MAAO,CACLnM,SAAS,EACTyM,MAAO,GACPxM,YAAa,MAEf4K,KAAM,CACJ7K,SAAS,EACTkO,SAAU,qBACVjO,YAAa,MAEfqN,MAAO,CACLtN,SAAS,GAEXO,KAAM,OAIV2O,MAAO,SAASzO,EAAO0O,EAAOnO,GACdwB,EAAS/B,GACjBO,QAAUA,EAEZO,OAAO6N,UAAUC,eAAeC,KAAKtO,EAAQiC,KAAM,YACrDsM,QAAQC,KAAK,qIAEXjO,OAAO6N,UAAUC,eAAeC,KAAKtO,EAAQiC,KAAM,kBAClD1B,OAAO6N,UAAUC,eAAeC,KAAKtO,EAAQsI,IAAK,mBACrDiG,QAAQC,KAAK,4GAGX,KA3GR,SAAqB/O,EAAOO,GAC1B,MAAMyB,EAAQD,EAAS/B,GACjBqK,EAASrK,EAAMqK,QACdxB,IAAKC,EAAYtG,KAAM0F,GAAe3H,EAEvCyO,EAAK,IAAI,aAAe3E,GAC1BnC,GAAeA,EAAY2E,MAAMtN,UACnCyP,EAAGC,IAAI,IAAI,YACXD,EAAGE,GAAG,cAAc,IA7DxB,SAAoBlP,EAAOgC,GACrBA,EAAMzB,QAAQiC,KAAKqK,MAAMtN,UAC3ByC,EAAMrB,MAAQ,EAElB,CAyD8BwO,CAAWnP,EAAOgC,KAC5CgN,EAAGE,GAAG,SAAUxC,GAAMD,EAAYzM,EAAOgC,EAAO0K,KAChDsC,EAAGE,GAAG,YAAaxC,GAzDvB,SAAkB1M,EAAOgC,EAAO0K,GAC1B1K,EAAMrB,QACR8L,EAAYzM,EAAOgC,EAAO0K,GAC1B1K,EAAMrB,MAAQ,MACd,OAASqB,EAAMzB,QAAQiC,KAAK0I,eAAgB,CAAC,CAAClL,WAElD,CAmD6BoP,CAASpP,EAAOgC,EAAO0K,MAG9C5D,GAAcA,EAAWvJ,UAC3ByP,EAAGC,IAAI,IAAI,SAAW,CACpB9D,UAAWrC,EAAWqC,UACtBkE,OAAQlD,EAAcnM,EAAOgC,MAE/BgN,EAAGE,GAAG,YAAaxC,GAhDvB,SAAkB1M,EAAOgC,EAAOrC,GAC9B,MAAM,QAACJ,EAAO,WAAE+P,EAAU,cAAE9C,GAAiBxK,EAAMzB,QAAQsI,IAC3D,IAAKtJ,EACH,OAEF,MAAM6L,EAAOzL,EAAM0J,OAAO0C,wBACpBvL,EAAQ,CACZJ,EAAGT,EAAM8C,OAAOrC,EAAIgL,EAAKhK,KACzBf,EAAGV,EAAM8C,OAAOpC,EAAI+K,EAAKlK,KAG3B,IAAsD,KAAlD,OAASoO,EAAY,CAAC,CAACtP,QAAOL,QAAOa,WACvC,OAAO,OAASgM,EAAe,CAAC,CAACxM,QAAOL,WAG1CqC,EAAMoL,UAAY9M,EAAwB0B,EAAMzB,QAAQsI,IAAKrI,EAAOR,GACpEgC,EAAMiD,MAAQ,CAAC7E,EAAG,EAAGC,EAAG,GACxBkP,aAAavN,EAAMwN,eACnBtC,EAAUlN,EAAOgC,EAAOrC,EAC1B,CA6B6B8P,CAASzP,EAAOgC,EAAO0K,KAChDsC,EAAGE,GAAG,WAAYxC,GAAMQ,EAAUlN,EAAOgC,EAAO0K,KAChDsC,EAAGE,GAAG,UAAU,IA7BpB,SAAgBlP,EAAOgC,GACrBA,EAAMiD,MAAQ,KACVjD,EAAMsK,UACRtK,EAAMwN,cAAgB/D,YAAW,IAAOzJ,EAAMsK,SAAU,GAAQ,MAChE,OAAStK,EAAMzB,QAAQsI,IAAI6G,cAAe,CAAC,CAAC1P,WAEhD,CAuB0B2P,CAAO3P,EAAOgC,MAGtCqL,EAAQ/K,IAAItC,EAAOgP,EACrB,CAoFMY,CAAY5P,EAAOO,GAGrBP,EAAM6I,IAAM,CAAC5D,EAAOmI,EAAWpF,IAAea,EAAI7I,EAAOiF,EAAOmI,EAAWpF,GAC3EhI,EAAMwC,KAAO,CAACqN,EAAM7H,IAAexF,EAAKxC,EAAO6P,EAAM7H,GACrDhI,EAAMuI,SAAW,CAACC,EAAIC,EAAIT,IAAeO,EAASvI,EAAOwI,EAAIC,EAAIT,GACjEhI,EAAM8P,UAAY,CAACrM,EAAIf,EAAOsF,IA1jBlC,SAAmBhI,EAAOkJ,EAASxG,EAAOsF,EAAa,QACrDX,EAAyBrH,EAAO+B,EAAS/B,IAEzC2D,EADc3D,EAAMY,OAAOsI,GACRxG,OAAOzC,GAAW,GACrCD,EAAMqI,OAAOL,EACf,CAqjBiD8H,CAAU9P,EAAOyD,EAAIf,EAAOsF,GACzEhI,EAAM+P,UAAa/H,GApjBvB,SAAmBhI,EAAOgI,EAAa,WACrC,MAAMhG,EAAQD,EAAS/B,GACjBkC,EAAsBmF,EAAyBrH,EAAOgC,IAE5D,OAAKhC,EAAMY,QAAQ,SAASD,GAC1B,MAAMqP,EAAerP,EAAMJ,QACvB2B,EAAoBvB,EAAM8C,KAC5BuM,EAAapN,IAAMV,EAAoBvB,EAAM8C,IAAIb,IAAIrC,QACrDyP,EAAarN,IAAMT,EAAoBvB,EAAM8C,IAAId,IAAIpC,iBAE9CyP,EAAapN,WACboN,EAAarN,IAExB,IACA3C,EAAMqI,OAAOL,IACb,OAAShG,EAAMzB,QAAQiC,KAAK0I,eAAgB,CAAC,CAAClL,UAChD,CAoiBsC+P,CAAU/P,EAAOgI,GACnDhI,EAAMiQ,aAAe,IA1hBzB,SAAsBjQ,GACpB,MAAMgC,EAAQD,EAAS/B,GACvB,IAAI4C,EAAM,EACND,EAAM,EASV,OARA,OAAK3C,EAAMY,QAAQ,SAASD,GAC1B,MAAMuP,EAdV,SAA0BlO,EAAOkH,GAC/B,MAAM1F,EAAWxB,EAAME,oBAAoBgH,GAC3C,IAAK1F,EACH,OAEF,MAAM,IAACZ,EAAG,IAAED,GAAOa,EACnB,OAAO,IAAAE,GAAef,EAAIpC,QAASoC,EAAIhC,QAAS,IAAA+C,GAAed,EAAIrC,QAASqC,EAAIjC,MAClF,CAOsBwP,CAAiBnO,EAAOrB,EAAM8C,IAChD,GAAIyM,EAAW,CACb,MAAME,EAAQnN,KAAKqB,MAAM4L,GAAavP,EAAMgC,IAAMhC,EAAMiC,KAAO,KAAO,IACtEA,EAAMK,KAAKL,IAAIA,EAAKwN,GACpBzN,EAAMM,KAAKN,IAAIA,EAAKyN,EACtB,CACF,IACOxN,EAAM,EAAIA,EAAMD,CACzB,CA6gB+BsN,CAAajQ,GACxCA,EAAMgJ,sBAAwB,IAAMA,EAAsBhJ,GAC1DA,EAAMqQ,iBAAmB,IAxd7B,SAA0BrQ,GACxB,MAAMiJ,EAAcD,EAAsBhJ,GAC1C,IAAK,MAAMkJ,KAAWpI,OAAOC,KAAKf,EAAMY,QAAS,CAC/C,MAAOgC,IAAK0N,EAAa3N,IAAK4N,GAAetH,EAAYC,GAEzD,QAAoBjJ,IAAhBqQ,GAA6BtQ,EAAMY,OAAOsI,GAAStG,MAAQ0N,EAC7D,OAAO,EAGT,QAAoBrQ,IAAhBsQ,GAA6BvQ,EAAMY,OAAOsI,GAASvG,MAAQ4N,EAC7D,OAAO,CAEX,CAEA,OAAO,CACT,CAycmCF,CAAiBrQ,EAClD,EAEAwQ,YAAYxQ,GACV,MAAMgC,EAAQD,EAAS/B,GACvB,GAAIgC,EAAMsK,SAAWtK,EAAM4H,SAEzB,OAAO,CAEX,EAEA6G,aAAc,SAASzQ,EAAO6P,EAAMtP,GACpBwB,EAAS/B,GACjBO,QAAUA,EAvRpB,SAAsBP,EAAOO,GAC3B,MAAM8J,EAASrK,EAAMqK,QACdqB,MAAOgF,EAActG,KAAMoD,EAAW,eAAEtC,GAAkB3K,EAAQiC,KAKrEkO,EAAanR,SACfgK,EAAWvJ,EAAOqK,EAAQ,QAASqB,GAdvC,SAA6B1L,EAAO2Q,EAAMvH,EAASwH,GAC7CxH,IACFrH,EAAS/B,GAAOoC,SAASuO,GA7pB7B,SAAkBjJ,EAAIkJ,GACpB,IAAIC,EACJ,OAAO,WAGL,OAFAtB,aAAasB,GACbA,EAAUpF,WAAW/D,EAAIkJ,GAClBA,CACT,CACF,CAspBqCE,EAAS,KAAM,OAAS1H,EAAS,CAAC,CAACpJ,YAAU4Q,GAElF,CAWIG,CAAoB/Q,EAAO,iBAAkBkL,EAAgB,MAE7D/B,EAAcnJ,EAAO,SAEnBwN,EAAYjO,SACdgK,EAAWvJ,EAAOqK,EAAQ,YAAaH,GACvCX,EAAWvJ,EAAOqK,EAAO2G,cAAe,UAAW/F,KAEnD9B,EAAcnJ,EAAO,aACrBmJ,EAAcnJ,EAAO,aACrBmJ,EAAcnJ,EAAO,WACrBmJ,EAAcnJ,EAAO,WAEzB,CAkQIiR,CAAajR,EAAOO,EACtB,EAEA2Q,mBAAmBlR,EAAO0O,EAAOnO,GAC/B+M,EAAKtN,EAAO,qBAAsBO,EACpC,EAEA4Q,kBAAkBnR,EAAO0O,EAAOnO,GAC9B+M,EAAKtN,EAAO,oBAAqBO,EACnC,EAEA6Q,WAAWpR,EAAO0O,EAAOnO,GACvB+M,EAAKtN,EAAO,aAAcO,EAC5B,EAEA8Q,UAAUrR,EAAO0O,EAAOnO,GACtB+M,EAAKtN,EAAO,YAAaO,EAC3B,EAEA+Q,KAAM,SAAStR,IAnRjB,SAAyBA,GACvBmJ,EAAcnJ,EAAO,aACrBmJ,EAAcnJ,EAAO,aACrBmJ,EAAcnJ,EAAO,WACrBmJ,EAAcnJ,EAAO,SACrBmJ,EAAcnJ,EAAO,SACrBmJ,EAAcnJ,EAAO,UACvB,CA6QIuR,CAAgBvR,GAEZ,KAhIR,SAAoBA,GAClB,MAAMgP,EAAK3B,EAAQpL,IAAIjC,GACnBgP,IACFA,EAAGwC,OAAO,cACVxC,EAAGwC,OAAO,SACVxC,EAAGwC,OAAO,YACVxC,EAAGwC,OAAO,YACVxC,EAAGwC,OAAO,OACVxC,EAAGwC,OAAO,UACVxC,EAAGyC,UACHpE,EAAQqE,OAAO1R,GAEnB,CAqHM2R,CAAW3R,GA73BjB,SAAqBA,GACnB6B,EAAY6P,OAAO1R,EACrB,CA63BI4R,CAAY5R,EACd,EAEAwG,eACAd,gBACAM,oCCvgCF,OAKA,SAAUsE,EAAQC,EAAUsH,EAAY5R,GACtC,aAEF,IA+FI6R,EA/FAC,EAAkB,CAAC,GAAI,SAAU,MAAO,KAAM,KAAM,KACpDC,EAAezH,EAAS0H,cAAc,OAEtCC,EAAgB,WAEhB5N,EAAQrB,KAAKqB,MACbyC,EAAM9D,KAAK8D,IACXoL,EAAMC,KAAKD,IASf,SAASE,EAAkB3K,EAAImJ,EAASyB,GACpC,OAAO7G,WAAW8G,EAAO7K,EAAI4K,GAAUzB,EAC3C,CAWA,SAAS2B,EAAeC,EAAK/K,EAAI4K,GAC7B,QAAII,MAAMC,QAAQF,KACdG,EAAKH,EAAKH,EAAQ5K,GAAK4K,IAChB,EAGf,CAQA,SAASM,EAAKC,EAAKC,EAAUR,GACzB,IAAItR,EAEJ,GAAK6R,EAIL,GAAIA,EAAIE,QACJF,EAAIE,QAAQD,EAAUR,QACnB,GAAIO,EAAI5R,SAAWhB,EAEtB,IADAe,EAAI,EACGA,EAAI6R,EAAI5R,QACX6R,EAASjE,KAAKyD,EAASO,EAAI7R,GAAIA,EAAG6R,GAClC7R,SAGJ,IAAKA,KAAK6R,EACNA,EAAIjE,eAAe5N,IAAM8R,EAASjE,KAAKyD,EAASO,EAAI7R,GAAIA,EAAG6R,EAGvE,CASA,SAASG,EAAUC,EAAQtC,EAAMuC,GAC7B,IAAIC,EAAqB,sBAAwBxC,EAAO,KAAOuC,EAAU,SACzE,OAAO,WACH,IAAIxG,EAAI,IAAI0G,MAAM,mBACdC,EAAQ3G,GAAKA,EAAE2G,MAAQ3G,EAAE2G,MAAMC,QAAQ,kBAAmB,IACzDA,QAAQ,cAAe,IACvBA,QAAQ,6BAA8B,kBAAoB,sBAE3DC,EAAMjJ,EAAOwE,UAAYxE,EAAOwE,QAAQC,MAAQzE,EAAOwE,QAAQyE,KAInE,OAHIA,GACAA,EAAI1E,KAAKvE,EAAOwE,QAASqE,EAAoBE,GAE1CJ,EAAOO,MAAMC,KAAMC,UAC9B,CACJ,CAWI5B,EADyB,mBAAlBhR,OAAOgR,OACL,SAAgBzI,GACrB,GAAIA,IAAWpJ,GAAwB,OAAXoJ,EACxB,MAAM,IAAIsK,UAAU,8CAIxB,IADA,IAAIC,EAAS9S,OAAOuI,GACXwK,EAAQ,EAAGA,EAAQH,UAAUzS,OAAQ4S,IAAS,CACnD,IAAIC,EAASJ,UAAUG,GACvB,GAAIC,IAAW7T,GAAwB,OAAX6T,EACxB,IAAK,IAAIC,KAAWD,EACZA,EAAOlF,eAAemF,KACtBH,EAAOG,GAAWD,EAAOC,GAIzC,CACA,OAAOH,CACX,EAES9S,OAAOgR,OAWpB,IAAIkC,EAAShB,GAAU,SAAgBiB,EAAMC,EAAKC,GAG9C,IAFA,IAAIpT,EAAOD,OAAOC,KAAKmT,GACnBlT,EAAI,EACDA,EAAID,EAAKE,UACPkT,GAAUA,GAASF,EAAKlT,EAAKC,MAAQf,KACtCgU,EAAKlT,EAAKC,IAAMkT,EAAInT,EAAKC,KAE7BA,IAEJ,OAAOiT,CACX,GAAG,SAAU,iBASTE,EAAQnB,GAAU,SAAeiB,EAAMC,GACvC,OAAOF,EAAOC,EAAMC,GAAK,EAC7B,GAAG,QAAS,iBAQZ,SAASE,EAAQC,EAAOC,EAAMC,GAC1B,IACIC,EADAC,EAAQH,EAAK3F,WAGjB6F,EAASH,EAAM1F,UAAY7N,OAAO4T,OAAOD,IAClCE,YAAcN,EACrBG,EAAOI,OAASH,EAEZF,GACAzC,EAAO0C,EAAQD,EAEvB,CAQA,SAAShC,EAAO7K,EAAI4K,GAChB,OAAO,WACH,OAAO5K,EAAG8L,MAAMlB,EAASoB,UAC7B,CACJ,CASA,SAASmB,EAASC,EAAKjF,GACnB,cAAWiF,GAAO5C,EACP4C,EAAItB,MAAM3D,GAAOA,EAAK,IAAkB5P,EAAW4P,GAEvDiF,CACX,CAQA,SAASC,EAAYC,EAAMC,GACvB,OAAQD,IAAS/U,EAAagV,EAAOD,CACzC,CAQA,SAASE,EAAkB7L,EAAQ8L,EAAO/L,GACtCwJ,EAAKwC,EAASD,IAAQ,SAASxN,GAC3B0B,EAAOI,iBAAiB9B,EAAMyB,GAAS,EAC3C,GACJ,CAQA,SAASiM,EAAqBhM,EAAQ8L,EAAO/L,GACzCwJ,EAAKwC,EAASD,IAAQ,SAASxN,GAC3B0B,EAAOC,oBAAoB3B,EAAMyB,GAAS,EAC9C,GACJ,CASA,SAASkM,EAAUC,EAAMC,GACrB,KAAOD,GAAM,CACT,GAAIA,GAAQC,EACR,OAAO,EAEXD,EAAOA,EAAKE,UAChB,CACA,OAAO,CACX,CAQA,SAASC,EAAMC,EAAKC,GAChB,OAAOD,EAAIzV,QAAQ0V,IAAS,CAChC,CAOA,SAASR,EAASO,GACd,OAAOA,EAAIE,OAAOC,MAAM,OAC5B,CASA,SAASC,EAAQ7B,EAAK0B,EAAMI,GACxB,GAAI9B,EAAIhU,UAAY8V,EAChB,OAAO9B,EAAIhU,QAAQ0V,GAGnB,IADA,IAAI5U,EAAI,EACDA,EAAIkT,EAAIjT,QAAQ,CACnB,GAAK+U,GAAa9B,EAAIlT,GAAGgV,IAAcJ,IAAWI,GAAa9B,EAAIlT,KAAO4U,EACtE,OAAO5U,EAEXA,GACJ,CACA,OAAQ,CAEhB,CAOA,SAASiV,EAAQpD,GACb,OAAOH,MAAM/D,UAAUuH,MAAMrH,KAAKgE,EAAK,EAC3C,CASA,SAASsD,EAAYjC,EAAKxU,EAAK0W,GAK3B,IAJA,IAAIC,EAAU,GACVC,EAAS,GACTtV,EAAI,EAEDA,EAAIkT,EAAIjT,QAAQ,CACnB,IAAI6T,EAAMpV,EAAMwU,EAAIlT,GAAGtB,GAAOwU,EAAIlT,GAC9B+U,EAAQO,EAAQxB,GAAO,GACvBuB,EAAQzU,KAAKsS,EAAIlT,IAErBsV,EAAOtV,GAAK8T,EACZ9T,GACJ,CAYA,OAVIoV,IAIIC,EAHC3W,EAGS2W,EAAQD,MAAK,SAAyBG,EAAGC,GAC/C,OAAOD,EAAE7W,GAAO8W,EAAE9W,EACtB,IAJU2W,EAAQD,QAQnBC,CACX,CAQA,SAASI,EAAS5D,EAAK6D,GAKnB,IAJA,IAAIC,EAAQtT,EACRuT,EAAYF,EAAS,GAAGG,cAAgBH,EAASR,MAAM,GAEvDlV,EAAI,EACDA,EAAI+Q,EAAgB9Q,QAAQ,CAI/B,IAFAoC,GADAsT,EAAS5E,EAAgB/Q,IACP2V,EAASC,EAAYF,KAE3B7D,EACR,OAAOxP,EAEXrC,GACJ,CACA,OAAOf,CACX,CAMA,IAAI6W,EAAY,EAUhB,SAASC,EAAoBC,GACzB,IAAIC,EAAMD,EAAQhG,eAAiBgG,EACnC,OAAQC,EAAIC,aAAeD,EAAIE,cAAgB7M,CACnD,CAEA,IAEI8M,EAAiB,iBAAkB9M,EACnC+M,EAAyBZ,EAASnM,EAAQ,kBAAoBrK,EAC9DqX,EAAqBF,GAJN,wCAIoCG,KAAKC,UAAUC,WAElEC,EAAmB,QAEnBC,EAAmB,QAGnBC,EAAmB,GAEnBC,EAAc,EAEdC,EAAY,EACZC,EAAe,EAEfC,EAAiB,EACjBC,EAAiB,EACjBC,EAAkB,EAClBC,EAAe,EACfC,EAAiB,GAEjBC,EAAuBJ,EAAiBC,EACxCI,EAAqBH,EAAeC,EACpCG,EAAgBF,EAAuBC,EAEvCE,EAAW,CAAC,IAAK,KACjBC,GAAkB,CAAC,UAAW,WASlC,SAASC,GAAMC,EAASC,GACpB,IAAIC,EAAOpF,KACXA,KAAKkF,QAAUA,EACflF,KAAKmF,SAAWA,EAChBnF,KAAKuD,QAAU2B,EAAQ3B,QACvBvD,KAAKpK,OAASsP,EAAQpY,QAAQuY,YAI9BrF,KAAKsF,WAAa,SAASC,GACnBnE,EAAS8D,EAAQpY,QAAQ8O,OAAQ,CAACsJ,KAClCE,EAAKzP,QAAQ4P,EAErB,EAEAvF,KAAKwF,MAET,CA0DA,SAASC,GAAaP,EAASQ,EAAWC,GACtC,IAAIC,EAAcD,EAAMzM,SAAS1L,OAC7BqY,EAAqBF,EAAMG,gBAAgBtY,OAC3CuY,EAAWL,EAAYtB,GAAgBwB,EAAcC,GAAuB,EAC5EG,EAAWN,GAAarB,EAAYC,IAAkBsB,EAAcC,GAAuB,EAE/FF,EAAMI,UAAYA,EAClBJ,EAAMK,UAAYA,EAEdD,IACAb,EAAQe,QAAU,CAAC,GAKvBN,EAAMD,UAAYA,EAiBtB,SAA0BR,EAASS,GAC/B,IAAIM,EAAUf,EAAQe,QAClB/M,EAAWyM,EAAMzM,SACjBgN,EAAiBhN,EAAS1L,OAGzByY,EAAQE,aACTF,EAAQE,WAAaC,GAAqBT,IAI1CO,EAAiB,IAAMD,EAAQI,cAC/BJ,EAAQI,cAAgBD,GAAqBT,GACnB,IAAnBO,IACPD,EAAQI,eAAgB,GAG5B,IAAIF,EAAaF,EAAQE,WACrBE,EAAgBJ,EAAQI,cACxBC,EAAeD,EAAgBA,EAAcrX,OAASmX,EAAWnX,OAEjEA,EAAS2W,EAAM3W,OAASoF,GAAU8E,GACtCyM,EAAMY,UAAY7H,IAClBiH,EAAMa,UAAYb,EAAMY,UAAYJ,EAAWI,UAE/CZ,EAAMc,MAAQC,GAASJ,EAActX,GACrC2W,EAAM7N,SAAW6O,GAAYL,EAActX,GA0B/C,SAAwBiX,EAASN,GAC7B,IAAI3W,EAAS2W,EAAM3W,OACfyB,EAASwV,EAAQW,aAAe,CAAC,EACjCC,EAAYZ,EAAQY,WAAa,CAAC,EAClCC,EAAYb,EAAQa,WAAa,CAAC,EAElCnB,EAAMD,YAActB,GAAe0C,EAAUpB,YAAcrB,IAC3DwC,EAAYZ,EAAQY,UAAY,CAC5Bla,EAAGma,EAAUpN,QAAU,EACvB9M,EAAGka,EAAU1O,QAAU,GAG3B3H,EAASwV,EAAQW,YAAc,CAC3Bja,EAAGqC,EAAOrC,EACVC,EAAGoC,EAAOpC,IAIlB+Y,EAAMjM,OAASmN,EAAUla,GAAKqC,EAAOrC,EAAI8D,EAAO9D,GAChDgZ,EAAMvN,OAASyO,EAAUja,GAAKoC,EAAOpC,EAAI6D,EAAO7D,EACpD,CA5CIma,CAAed,EAASN,GACxBA,EAAMqB,gBAAkBC,GAAatB,EAAMjM,OAAQiM,EAAMvN,QAEzD,IAuNc4C,EAAOkM,EAvNjBC,EAAkBC,GAAYzB,EAAMa,UAAWb,EAAMjM,OAAQiM,EAAMvN,QACvEuN,EAAM0B,iBAAmBF,EAAgBxa,EACzCgZ,EAAM2B,iBAAmBH,EAAgBva,EACzC+Y,EAAMwB,gBAAmB7T,EAAI6T,EAAgBxa,GAAK2G,EAAI6T,EAAgBva,GAAMua,EAAgBxa,EAAIwa,EAAgBva,EAEhH+Y,EAAMzY,MAAQmZ,GAkNArL,EAlNyBqL,EAAcnN,SAmN9CyN,IADcO,EAlN0ChO,GAmNxC,GAAIgO,EAAI,GAAIlC,IAAmB2B,GAAY3L,EAAM,GAAIA,EAAM,GAAIgK,KAnNX,EAC3EW,EAAM4B,SAAWlB,EAsMrB,SAAqBrL,EAAOkM,GACxB,OAAOR,GAASQ,EAAI,GAAIA,EAAI,GAAIlC,IAAmB0B,GAAS1L,EAAM,GAAIA,EAAM,GAAIgK,GACpF,CAxMqCwC,CAAYnB,EAAcnN,SAAUA,GAAY,EAEjFyM,EAAM8B,YAAexB,EAAQa,UAAsCnB,EAAMzM,SAAS1L,OAC9EyY,EAAQa,UAAUW,YAAe9B,EAAMzM,SAAS1L,OAASyY,EAAQa,UAAUW,YADtC9B,EAAMzM,SAAS1L,OAwC5D,SAAkCyY,EAASN,GACvC,IAEI+B,EAAUC,EAAWC,EAAWC,EAFhCC,EAAO7B,EAAQ8B,cAAgBpC,EAC/Ba,EAAYb,EAAMY,UAAYuB,EAAKvB,UAGvC,GAAIZ,EAAMD,WAAapB,IAAiBkC,EAAYrC,GAAoB2D,EAAKJ,WAAalb,GAAY,CAClG,IAAIkN,EAASiM,EAAMjM,OAASoO,EAAKpO,OAC7BtB,EAASuN,EAAMvN,OAAS0P,EAAK1P,OAE7BnI,EAAImX,GAAYZ,EAAW9M,EAAQtB,GACvCuP,EAAY1X,EAAEtD,EACdib,EAAY3X,EAAErD,EACd8a,EAAYpU,EAAIrD,EAAEtD,GAAK2G,EAAIrD,EAAErD,GAAMqD,EAAEtD,EAAIsD,EAAErD,EAC3Cib,EAAYZ,GAAavN,EAAQtB,GAEjC6N,EAAQ8B,aAAepC,CAC3B,MAEI+B,EAAWI,EAAKJ,SAChBC,EAAYG,EAAKH,UACjBC,EAAYE,EAAKF,UACjBC,EAAYC,EAAKD,UAGrBlC,EAAM+B,SAAWA,EACjB/B,EAAMgC,UAAYA,EAClBhC,EAAMiC,UAAYA,EAClBjC,EAAMkC,UAAYA,CACtB,CAjEIG,CAAyB/B,EAASN,GAGlC,IAAI/P,EAASsP,EAAQ3B,QACjB1B,EAAU8D,EAAM/M,SAAShD,OAAQA,KACjCA,EAAS+P,EAAM/M,SAAShD,QAE5B+P,EAAM/P,OAASA,CACnB,CAhEIqS,CAAiB/C,EAASS,GAG1BT,EAAQgD,KAAK,eAAgBvC,GAE7BT,EAAQiD,UAAUxC,GAClBT,EAAQe,QAAQa,UAAYnB,CAChC,CAyHA,SAASS,GAAqBT,GAK1B,IAFA,IAAIzM,EAAW,GACX3L,EAAI,EACDA,EAAIoY,EAAMzM,SAAS1L,QACtB0L,EAAS3L,GAAK,CACViL,QAAS3H,EAAM8U,EAAMzM,SAAS3L,GAAGiL,SACjCC,QAAS5H,EAAM8U,EAAMzM,SAAS3L,GAAGkL,UAErClL,IAGJ,MAAO,CACHgZ,UAAW7H,IACXxF,SAAUA,EACVlK,OAAQoF,GAAU8E,GAClBQ,OAAQiM,EAAMjM,OACdtB,OAAQuN,EAAMvN,OAEtB,CAOA,SAAShE,GAAU8E,GACf,IAAIgN,EAAiBhN,EAAS1L,OAG9B,GAAuB,IAAnB0Y,EACA,MAAO,CACHvZ,EAAGkE,EAAMqI,EAAS,GAAGV,SACrB5L,EAAGiE,EAAMqI,EAAS,GAAGT,UAK7B,IADA,IAAI9L,EAAI,EAAGC,EAAI,EAAGW,EAAI,EACfA,EAAI2Y,GACPvZ,GAAKuM,EAAS3L,GAAGiL,QACjB5L,GAAKsM,EAAS3L,GAAGkL,QACjBlL,IAGJ,MAAO,CACHZ,EAAGkE,EAAMlE,EAAIuZ,GACbtZ,EAAGiE,EAAMjE,EAAIsZ,GAErB,CASA,SAASkB,GAAYZ,EAAW7Z,EAAGC,GAC/B,MAAO,CACHD,EAAGA,EAAI6Z,GAAa,EACpB5Z,EAAGA,EAAI4Z,GAAa,EAE5B,CAQA,SAASS,GAAata,EAAGC,GACrB,OAAID,IAAMC,EACC2X,EAGPjR,EAAI3G,IAAM2G,EAAI1G,GACPD,EAAI,EAAI6X,EAAiBC,EAE7B7X,EAAI,EAAI8X,EAAeC,CAClC,CASA,SAASgC,GAAY3R,EAAIoT,EAAIC,GACpBA,IACDA,EAAQtD,GAEZ,IAAIpY,EAAIyb,EAAGC,EAAM,IAAMrT,EAAGqT,EAAM,IAC5Bzb,EAAIwb,EAAGC,EAAM,IAAMrT,EAAGqT,EAAM,IAEhC,OAAO7Y,KAAKuI,KAAMpL,EAAIA,EAAMC,EAAIA,EACpC,CASA,SAAS8Z,GAAS1R,EAAIoT,EAAIC,GACjBA,IACDA,EAAQtD,GAEZ,IAAIpY,EAAIyb,EAAGC,EAAM,IAAMrT,EAAGqT,EAAM,IAC5Bzb,EAAIwb,EAAGC,EAAM,IAAMrT,EAAGqT,EAAM,IAChC,OAA0B,IAAnB7Y,KAAK8Y,MAAM1b,EAAGD,GAAW6C,KAAK+Y,EACzC,CA3TAtD,GAAM/J,UAAY,CAKdvF,QAAS,WAAa,EAKtB6P,KAAM,WACFxF,KAAKwI,MAAQ/G,EAAkBzB,KAAKuD,QAASvD,KAAKwI,KAAMxI,KAAKsF,YAC7DtF,KAAKyI,UAAYhH,EAAkBzB,KAAKpK,OAAQoK,KAAKyI,SAAUzI,KAAKsF,YACpEtF,KAAK0I,OAASjH,EAAkB6B,EAAoBtD,KAAKuD,SAAUvD,KAAK0I,MAAO1I,KAAKsF,WACxF,EAKAtH,QAAS,WACLgC,KAAKwI,MAAQ5G,EAAqB5B,KAAKuD,QAASvD,KAAKwI,KAAMxI,KAAKsF,YAChEtF,KAAKyI,UAAY7G,EAAqB5B,KAAKpK,OAAQoK,KAAKyI,SAAUzI,KAAKsF,YACvEtF,KAAK0I,OAAS9G,EAAqB0B,EAAoBtD,KAAKuD,SAAUvD,KAAK0I,MAAO1I,KAAKsF,WAC3F,GA2TJ,IAAIqD,GAAkB,CAClBC,UAAWxE,EACXyE,UA/Xa,EAgYbC,QAASzE,GAGT0E,GAAuB,YACvBC,GAAsB,oBAO1B,SAASC,KACLjJ,KAAKwI,KAAOO,GACZ/I,KAAK0I,MAAQM,GAEbhJ,KAAKkJ,SAAU,EAEfjE,GAAMlF,MAAMC,KAAMC,UACtB,CAEAU,EAAQsI,GAAYhE,GAAO,CAKvBtP,QAAS,SAAmB4P,GACxB,IAAIG,EAAYiD,GAAgBpD,EAAGrR,MAG/BwR,EAAYtB,GAA6B,IAAdmB,EAAG7O,SAC9BsJ,KAAKkJ,SAAU,GA9ZV,EAiaLxD,GAAuC,IAAbH,EAAG4D,QAC7BzD,EAAYrB,GAIXrE,KAAKkJ,UAINxD,EAAYrB,IACZrE,KAAKkJ,SAAU,GAGnBlJ,KAAKmF,SAASnF,KAAKkF,QAASQ,EAAW,CACnCxM,SAAU,CAACqM,GACXO,gBAAiB,CAACP,GAClBzM,YAAaoL,EACbtL,SAAU2M,IAElB,IAGJ,IAAI6D,GAAoB,CACpBC,YAAajF,EACbkF,YAzba,EA0bbC,UAAWlF,EACXmF,cAAelF,EACfmF,WAAYnF,GAIZoF,GAAyB,CACzB,EAAGzF,EACH,EAzciB,MA0cjB,EAAGC,EACH,EAzcoB,UA4cpByF,GAAyB,cACzBC,GAAwB,sCAa5B,SAASC,KACL7J,KAAKwI,KAAOmB,GACZ3J,KAAK0I,MAAQkB,GAEb3E,GAAMlF,MAAMC,KAAMC,WAElBD,KAAK8J,MAAS9J,KAAKkF,QAAQe,QAAQ8D,cAAgB,EACvD,CAjBIlT,EAAOmT,iBAAmBnT,EAAOoT,eACjCN,GAAyB,gBACzBC,GAAwB,6CAiB5BjJ,EAAQkJ,GAAmB5E,GAAO,CAK9BtP,QAAS,SAAmB4P,GACxB,IAAIuE,EAAQ9J,KAAK8J,MACbI,GAAgB,EAEhBC,EAAsB5E,EAAGrR,KAAKkW,cAAcvK,QAAQ,KAAM,IAC1D6F,EAAY0D,GAAkBe,GAC9BrR,EAAc4Q,GAAuBnE,EAAGzM,cAAgByM,EAAGzM,YAE3DuR,EAAWvR,GAAemL,EAG1BqG,EAAahI,EAAQwH,EAAOvE,EAAGgF,UAAW,aAG1C7E,EAAYtB,IAA8B,IAAdmB,EAAG7O,QAAgB2T,GAC3CC,EAAa,IACbR,EAAM3b,KAAKoX,GACX+E,EAAaR,EAAMtc,OAAS,GAEzBkY,GAAarB,EAAYC,KAChC4F,GAAgB,GAIhBI,EAAa,IAKjBR,EAAMQ,GAAc/E,EAEpBvF,KAAKmF,SAASnF,KAAKkF,QAASQ,EAAW,CACnCxM,SAAU4Q,EACVhE,gBAAiB,CAACP,GAClBzM,YAAaA,EACbF,SAAU2M,IAGV2E,GAEAJ,EAAMU,OAAOF,EAAY,GAEjC,IAGJ,IAAIG,GAAyB,CACzBC,WAAYtG,EACZuG,UAlhBa,EAmhBbC,SAAUvG,EACVwG,YAAavG,GAWjB,SAASwG,KACL9K,KAAKyI,SATwB,aAU7BzI,KAAK0I,MATwB,4CAU7B1I,KAAK+K,SAAU,EAEf9F,GAAMlF,MAAMC,KAAMC,UACtB,CAqCA,SAAS+K,GAAuBzF,EAAIrR,GAChC,IAAI+W,EAAMzI,EAAQ+C,EAAG2F,SACjBC,EAAU3I,EAAQ+C,EAAG6F,gBAMzB,OAJIlX,GAAQmQ,EAAYC,KACpB2G,EAAMvI,EAAYuI,EAAII,OAAOF,GAAU,cAAc,IAGlD,CAACF,EAAKE,EACjB,CA5CAxK,EAAQmK,GAAkB7F,GAAO,CAC7BtP,QAAS,SAAmB4P,GACxB,IAAIrR,EAAOuW,GAAuBlF,EAAGrR,MAOrC,GAJIA,IAASkQ,IACTpE,KAAK+K,SAAU,GAGd/K,KAAK+K,QAAV,CAIA,IAAIG,EAAUF,GAAuB5P,KAAK4E,KAAMuF,EAAIrR,GAGhDA,GAAQmQ,EAAYC,IAAiB4G,EAAQ,GAAG1d,OAAS0d,EAAQ,GAAG1d,QAAW,IAC/EwS,KAAK+K,SAAU,GAGnB/K,KAAKmF,SAASnF,KAAKkF,QAAShR,EAAM,CAC9BgF,SAAUgS,EAAQ,GAClBpF,gBAAiBoF,EAAQ,GACzBpS,YAAamL,EACbrL,SAAU2M,GAbd,CAeJ,IAoBJ,IAAI+F,GAAkB,CAClBZ,WAAYtG,EACZuG,UAvlBa,EAwlBbC,SAAUvG,EACVwG,YAAavG,GAGbiH,GAAsB,4CAO1B,SAASC,KACLxL,KAAKyI,SAAW8C,GAChBvL,KAAKyL,UAAY,CAAC,EAElBxG,GAAMlF,MAAMC,KAAMC,UACtB,CAyBA,SAASyL,GAAWnG,EAAIrR,GACpB,IAAIyX,EAAanJ,EAAQ+C,EAAG2F,SACxBO,EAAYzL,KAAKyL,UAGrB,GAAIvX,GAtoBS,EAsoBDkQ,IAAmD,IAAtBuH,EAAWne,OAEhD,OADAie,EAAUE,EAAW,GAAGC,aAAc,EAC/B,CAACD,EAAYA,GAGxB,IAAIpe,EACAse,EACAT,EAAiB5I,EAAQ+C,EAAG6F,gBAC5BU,EAAuB,GACvBlW,EAASoK,KAAKpK,OAQlB,GALAiW,EAAgBF,EAAWI,QAAO,SAASC,GACvC,OAAOnK,EAAUmK,EAAMpW,OAAQA,EACnC,IAGI1B,IAASkQ,EAET,IADA7W,EAAI,EACGA,EAAIse,EAAcre,QACrBie,EAAUI,EAActe,GAAGqe,aAAc,EACzCre,IAMR,IADAA,EAAI,EACGA,EAAI6d,EAAe5d,QAClBie,EAAUL,EAAe7d,GAAGqe,aAC5BE,EAAqB3d,KAAKid,EAAe7d,IAIzC2G,GAAQmQ,EAAYC,WACbmH,EAAUL,EAAe7d,GAAGqe,YAEvCre,IAGJ,OAAKue,EAAqBte,OAInB,CAEHkV,EAAYmJ,EAAcR,OAAOS,GAAuB,cAAc,GACtEA,QAPJ,CASJ,CA5EAnL,EAAQ6K,GAAYvG,GAAO,CACvBtP,QAAS,SAAoB4P,GACzB,IAAIrR,EAAOoX,GAAgB/F,EAAGrR,MAC1BgX,EAAUQ,GAAWtQ,KAAK4E,KAAMuF,EAAIrR,GACnCgX,GAILlL,KAAKmF,SAASnF,KAAKkF,QAAShR,EAAM,CAC9BgF,SAAUgS,EAAQ,GAClBpF,gBAAiBoF,EAAQ,GACzBpS,YAAamL,EACbrL,SAAU2M,GAElB,IA0EJ,IAAI0G,GAAgB,KAGpB,SAASC,KACLjH,GAAMlF,MAAMC,KAAMC,WAElB,IAAItK,EAAUmJ,EAAOkB,KAAKrK,QAASqK,MACnCA,KAAKgM,MAAQ,IAAIR,GAAWxL,KAAKkF,QAASvP,GAC1CqK,KAAKmM,MAAQ,IAAIlD,GAAWjJ,KAAKkF,QAASvP,GAE1CqK,KAAKoM,aAAe,KACpBpM,KAAKqM,YAAc,EACvB,CAoCA,SAASC,GAAc5G,EAAW6G,GAC1B7G,EAAYtB,GACZpE,KAAKoM,aAAeG,EAAUzG,gBAAgB,GAAG8F,WACjDY,GAAapR,KAAK4E,KAAMuM,IACjB7G,GAAarB,EAAYC,IAChCkI,GAAapR,KAAK4E,KAAMuM,EAEhC,CAEA,SAASC,GAAaD,GAClB,IAAIP,EAAQO,EAAUzG,gBAAgB,GAEtC,GAAIkG,EAAMJ,aAAe5L,KAAKoM,aAAc,CACxC,IAAIK,EAAY,CAAC9f,EAAGqf,EAAMxT,QAAS5L,EAAGof,EAAMvT,SAC5CuH,KAAKqM,YAAYle,KAAKse,GACtB,IAAIC,EAAM1M,KAAKqM,YAOfrU,YANsB,WAClB,IAAIzK,EAAImf,EAAIjgB,QAAQggB,GAChBlf,GAAK,GACLmf,EAAIlC,OAAOjd,EAAG,EAEtB,GAC4B0e,GAChC,CACJ,CAEA,SAASU,GAAiBJ,GAEtB,IADA,IAAI5f,EAAI4f,EAAU3T,SAASJ,QAAS5L,EAAI2f,EAAU3T,SAASH,QAClDlL,EAAI,EAAGA,EAAIyS,KAAKqM,YAAY7e,OAAQD,IAAK,CAC9C,IAAIqf,EAAI5M,KAAKqM,YAAY9e,GACrBsf,EAAKrd,KAAK8D,IAAI3G,EAAIigB,EAAEjgB,GAAImgB,EAAKtd,KAAK8D,IAAI1G,EAAIggB,EAAEhgB,GAChD,GAAIigB,GA9ES,IA8EeC,GA9Ef,GA+ET,OAAO,CAEf,CACA,OAAO,CACX,CAtEAnM,EAAQuL,GAAiBjH,GAAO,CAO5BtP,QAAS,SAAoBuP,EAAS6H,EAAYC,GAC9C,IAAI3C,EAAW2C,EAAUlU,aAAemL,EACpCgJ,EAAWD,EAAUlU,aAAeoL,EAExC,KAAI+I,GAAWD,EAAUE,oBAAsBF,EAAUE,mBAAmBC,kBAA5E,CAKA,GAAI9C,EACAiC,GAAclR,KAAK4E,KAAM+M,EAAYC,QAClC,GAAIC,GAAWN,GAAiBvR,KAAK4E,KAAMgN,GAC9C,OAGJhN,KAAKmF,SAASD,EAAS6H,EAAYC,EATnC,CAUJ,EAKAhP,QAAS,WACLgC,KAAKgM,MAAMhO,UACXgC,KAAKmM,MAAMnO,SACf,IAyCJ,IAAIoP,GAAwBpK,EAASzE,EAAa8O,MAAO,eACrDC,GAAsBF,KAA0B5gB,EAGhD+gB,GAAuB,UACvBC,GAAoB,OACpBC,GAA4B,eAC5BC,GAAoB,OACpBC,GAAqB,QACrBC,GAAqB,QACrBC,GA4IJ,WACI,IAAKP,GACD,OAAO,EAEX,IAAIQ,EAAW,CAAC,EACZC,EAAclX,EAAOmX,KAAOnX,EAAOmX,IAAIC,SAO3C,MANA,CAAC,OAAQ,eAAgB,QAAS,QAAS,cAAe,QAAQ3O,SAAQ,SAAS+B,GAI/EyM,EAASzM,IAAO0M,GAAclX,EAAOmX,IAAIC,SAAS,eAAgB5M,EACtE,IACOyM,CACX,CAzJuBI,GASvB,SAASC,GAAYjJ,EAASkJ,GAC1BpO,KAAKkF,QAAUA,EACflF,KAAKnR,IAAIuf,EACb,CAEAD,GAAYjT,UAAY,CAKpBrM,IAAK,SAASuf,GAENA,GAASb,KACTa,EAAQpO,KAAKqO,WAGbf,IAAuBtN,KAAKkF,QAAQ3B,QAAQ8J,OAASQ,GAAiBO,KACtEpO,KAAKkF,QAAQ3B,QAAQ8J,MAAMD,IAAyBgB,GAExDpO,KAAKsO,QAAUF,EAAMhE,cAAchI,MACvC,EAKAxN,OAAQ,WACJoL,KAAKnR,IAAImR,KAAKkF,QAAQpY,QAAQyhB,YAClC,EAMAF,QAAS,WACL,IAAIC,EAAU,GAMd,OALAnP,EAAKa,KAAKkF,QAAQsJ,aAAa,SAAS7V,GAChCyI,EAASzI,EAAW7L,QAAQ8O,OAAQ,CAACjD,MACrC2V,EAAUA,EAAQjD,OAAO1S,EAAW8V,kBAE5C,IA8DR,SAA2BH,GAEvB,GAAIrM,EAAMqM,EAASZ,IACf,OAAOA,GAGX,IAAIgB,EAAUzM,EAAMqM,EAASX,IACzBgB,EAAU1M,EAAMqM,EAASV,IAM7B,OAAIc,GAAWC,EACJjB,GAIPgB,GAAWC,EACJD,EAAUf,GAAqBC,GAItC3L,EAAMqM,EAASb,IACRA,GAGJD,EACX,CAzFeoB,CAAkBN,EAAQO,KAAK,KAC1C,EAMAC,gBAAiB,SAASnJ,GACtB,IAAI/M,EAAW+M,EAAM/M,SACjBiP,EAAYlC,EAAMqB,gBAGtB,GAAIhH,KAAKkF,QAAQe,QAAQ8I,UACrBnW,EAAST,qBADb,CAKA,IAAImW,EAAUtO,KAAKsO,QACfU,EAAU/M,EAAMqM,EAASZ,MAAuBG,GAAiBH,IACjEiB,EAAU1M,EAAMqM,EAASV,MAAwBC,GAAiBD,IAClEc,EAAUzM,EAAMqM,EAASX,MAAwBE,GAAiBF,IAEtE,GAAIqB,EAAS,CAGT,IAAIC,EAAyC,IAA1BtJ,EAAMzM,SAAS1L,OAC9B0hB,EAAgBvJ,EAAM7N,SAAW,EACjCqX,EAAiBxJ,EAAMa,UAAY,IAEvC,GAAIyI,GAAgBC,GAAiBC,EACjC,MAER,CAEA,IAAIT,IAAWC,EAKf,OAAIK,GACCL,GAAW9G,EAAYjD,GACvB8J,GAAW7G,EAAYhD,EACjB7E,KAAKoP,WAAWxW,QAH3B,CAxBA,CA6BJ,EAMAwW,WAAY,SAASxW,GACjBoH,KAAKkF,QAAQe,QAAQ8I,WAAY,EACjCnW,EAAST,gBACb,GAgFJ,IAAIkX,GAAiB,EAMjBC,GAAe,GAQnB,SAASC,GAAWziB,GAChBkT,KAAKlT,QAAUuR,EAAO,CAAC,EAAG2B,KAAKjF,SAAUjO,GAAW,CAAC,GAErDkT,KAAKhQ,GApgCEqT,IAsgCPrD,KAAKkF,QAAU,KAGflF,KAAKlT,QAAQ8O,OAAS0F,EAAYtB,KAAKlT,QAAQ8O,QAAQ,GAEvDoE,KAAKzR,MAAQ8gB,GAEbrP,KAAKwP,aAAe,CAAC,EACrBxP,KAAKyP,YAAc,EACvB,CAoOA,SAASC,GAASnhB,GACd,OA5PkB,GA4PdA,EACO,SA/PG,EAgQHA,EACA,MAlQK,EAmQLA,EACA,OArQG,EAsQHA,EACA,QAEJ,EACX,CAOA,SAASohB,GAAa9H,GAClB,OAAIA,GAAalD,EACN,OACAkD,GAAanD,EACb,KACAmD,GAAarD,EACb,OACAqD,GAAapD,EACb,QAEJ,EACX,CAQA,SAASmL,GAA6BC,EAAiBlX,GACnD,IAAIuM,EAAUvM,EAAWuM,QACzB,OAAIA,EACOA,EAAQ1W,IAAIqhB,GAEhBA,CACX,CAOA,SAASC,KACLP,GAAWxP,MAAMC,KAAMC,UAC3B,CA4DA,SAAS8P,KACLD,GAAe/P,MAAMC,KAAMC,WAE3BD,KAAKgQ,GAAK,KACVhQ,KAAKiQ,GAAK,IACd,CA2EA,SAASC,KACLJ,GAAe/P,MAAMC,KAAMC,UAC/B,CAqCA,SAASkQ,KACLZ,GAAWxP,MAAMC,KAAMC,WAEvBD,KAAKoQ,OAAS,KACdpQ,KAAKqQ,OAAS,IAClB,CAkEA,SAASC,KACLR,GAAe/P,MAAMC,KAAMC,UAC/B,CA6BA,SAASsQ,KACLT,GAAe/P,MAAMC,KAAMC,UAC/B,CA0DA,SAASuQ,KACLjB,GAAWxP,MAAMC,KAAMC,WAIvBD,KAAKyQ,OAAQ,EACbzQ,KAAK0Q,SAAU,EAEf1Q,KAAKoQ,OAAS,KACdpQ,KAAKqQ,OAAS,KACdrQ,KAAK2Q,MAAQ,CACjB,CAoGA,SAASC,GAAOrN,EAASzW,GAGrB,OAFAA,EAAUA,GAAW,CAAC,GACd0hB,YAAclN,EAAYxU,EAAQ0hB,YAAaoC,GAAO7V,SAAS8V,QAChE,IAAIC,GAAQvN,EAASzW,EAChC,CAgIA,SAASgkB,GAAQvN,EAASzW,GACtBkT,KAAKlT,QAAUuR,EAAO,CAAC,EAAGuS,GAAO7V,SAAUjO,GAAW,CAAC,GAEvDkT,KAAKlT,QAAQuY,YAAcrF,KAAKlT,QAAQuY,aAAe9B,EAEvDvD,KAAKrR,SAAW,CAAC,EACjBqR,KAAKiG,QAAU,CAAC,EAChBjG,KAAKwO,YAAc,GACnBxO,KAAK+Q,YAAc,CAAC,EAEpB/Q,KAAKuD,QAAUA,EACfvD,KAAK2F,MArwDE,IAqwD0B3F,KAlxDRlT,QAAQkkB,aAItBpN,EACAiG,GACAhG,EACA2H,GACC7H,EAGDuI,GAFAjD,KAywDsBjJ,KArwDNyF,IAswD3BzF,KAAKuO,YAAc,IAAIJ,GAAYnO,KAAMA,KAAKlT,QAAQyhB,aAEtD0C,GAAejR,MAAM,GAErBb,EAAKa,KAAKlT,QAAQ0hB,aAAa,SAAS0C,GACpC,IAAIvY,EAAaqH,KAAKxE,IAAI,IAAK0V,EAAK,GAAIA,EAAK,KAC7CA,EAAK,IAAMvY,EAAWwY,cAAcD,EAAK,IACzCA,EAAK,IAAMvY,EAAWyY,eAAeF,EAAK,GAC9C,GAAGlR,KACP,CA2PA,SAASiR,GAAe/L,EAAS1J,GAC7B,IAII5L,EAJA2T,EAAU2B,EAAQ3B,QACjBA,EAAQ8J,QAIblO,EAAK+F,EAAQpY,QAAQukB,UAAU,SAASjD,EAAOlR,GAC3CtN,EAAOoT,EAASO,EAAQ8J,MAAOnQ,GAC3B1B,GACA0J,EAAQ6L,YAAYnhB,GAAQ2T,EAAQ8J,MAAMzd,GAC1C2T,EAAQ8J,MAAMzd,GAAQwe,GAEtB7K,EAAQ8J,MAAMzd,GAAQsV,EAAQ6L,YAAYnhB,IAAS,EAE3D,IACK4L,IACD0J,EAAQ6L,YAAc,CAAC,GAE/B,CAhoCAxB,GAAWrU,UAAY,CAKnBH,SAAU,CAAC,EAOXlM,IAAK,SAAS/B,GAKV,OAJAuR,EAAO2B,KAAKlT,QAASA,GAGrBkT,KAAKkF,SAAWlF,KAAKkF,QAAQqJ,YAAY3Z,SAClCoL,IACX,EAOAmR,cAAe,SAAStB,GACpB,GAAI9Q,EAAe8Q,EAAiB,gBAAiB7P,MACjD,OAAOA,KAGX,IAAIwP,EAAexP,KAAKwP,aAMxB,OAJKA,GADLK,EAAkBD,GAA6BC,EAAiB7P,OAC9BhQ,MAC9Bwf,EAAaK,EAAgB7f,IAAM6f,EACnCA,EAAgBsB,cAAcnR,OAE3BA,IACX,EAOAsR,kBAAmB,SAASzB,GACxB,OAAI9Q,EAAe8Q,EAAiB,oBAAqB7P,QAIzD6P,EAAkBD,GAA6BC,EAAiB7P,aACzDA,KAAKwP,aAAaK,EAAgB7f,KAJ9BgQ,IAMf,EAOAoR,eAAgB,SAASvB,GACrB,GAAI9Q,EAAe8Q,EAAiB,iBAAkB7P,MAClD,OAAOA,KAGX,IAAIyP,EAAczP,KAAKyP,YAMvB,OAJ+C,IAA3CnN,EAAQmN,EADZI,EAAkBD,GAA6BC,EAAiB7P,SAE5DyP,EAAYthB,KAAK0hB,GACjBA,EAAgBuB,eAAepR,OAE5BA,IACX,EAOAuR,mBAAoB,SAAS1B,GACzB,GAAI9Q,EAAe8Q,EAAiB,qBAAsB7P,MACtD,OAAOA,KAGX6P,EAAkBD,GAA6BC,EAAiB7P,MAChE,IAAII,EAAQkC,EAAQtC,KAAKyP,YAAaI,GAItC,OAHIzP,GAAS,GACTJ,KAAKyP,YAAYjF,OAAOpK,EAAO,GAE5BJ,IACX,EAMAwR,mBAAoB,WAChB,OAAOxR,KAAKyP,YAAYjiB,OAAS,CACrC,EAOAikB,iBAAkB,SAAS5B,GACvB,QAAS7P,KAAKwP,aAAaK,EAAgB7f,GAC/C,EAOAkY,KAAM,SAASvC,GACX,IAAIP,EAAOpF,KACPzR,EAAQyR,KAAKzR,MAEjB,SAAS2Z,EAAKhc,GACVkZ,EAAKF,QAAQgD,KAAKhc,EAAOyZ,EAC7B,CAGIpX,EArJM,GAsJN2Z,EAAK9C,EAAKtY,QAAQZ,MAAQwjB,GAASnhB,IAGvC2Z,EAAK9C,EAAKtY,QAAQZ,OAEdyZ,EAAM+L,iBACNxJ,EAAKvC,EAAM+L,iBAIXnjB,GAhKM,GAiKN2Z,EAAK9C,EAAKtY,QAAQZ,MAAQwjB,GAASnhB,GAE3C,EAQAojB,QAAS,SAAShM,GACd,GAAI3F,KAAK4R,UACL,OAAO5R,KAAKkI,KAAKvC,GAGrB3F,KAAKzR,MAAQ+gB,EACjB,EAMAsC,QAAS,WAEL,IADA,IAAIrkB,EAAI,EACDA,EAAIyS,KAAKyP,YAAYjiB,QAAQ,CAChC,KAAMwS,KAAKyP,YAAYliB,GAAGgB,OAAS+gB,GAAeD,KAC9C,OAAO,EAEX9hB,GACJ,CACA,OAAO,CACX,EAMA4a,UAAW,SAAS6E,GAGhB,IAAI6E,EAAiBxT,EAAO,CAAC,EAAG2O,GAGhC,IAAK5L,EAASpB,KAAKlT,QAAQ8O,OAAQ,CAACoE,KAAM6R,IAGtC,OAFA7R,KAAK8R,aACL9R,KAAKzR,MAAQ+gB,IAKA,GAAbtP,KAAKzR,QACLyR,KAAKzR,MAAQ8gB,IAGjBrP,KAAKzR,MAAQyR,KAAK+R,QAAQF,GAIT,GAAb7R,KAAKzR,OACLyR,KAAK2R,QAAQE,EAErB,EASAE,QAAS,SAAS/E,GAAa,EAO/ByB,eAAgB,WAAa,EAO7BqD,MAAO,WAAa,GA8DxBnR,EAAQmP,GAAgBP,GAAY,CAKhCxU,SAAU,CAKN7B,SAAU,GASd8Y,SAAU,SAASrM,GACf,IAAIsM,EAAiBjS,KAAKlT,QAAQoM,SAClC,OAA0B,IAAnB+Y,GAAwBtM,EAAMzM,SAAS1L,SAAWykB,CAC7D,EAQAF,QAAS,SAASpM,GACd,IAAIpX,EAAQyR,KAAKzR,MACbmX,EAAYC,EAAMD,UAElBwM,EAAuB,EAAR3jB,EACf4jB,EAAUnS,KAAKgS,SAASrM,GAG5B,OAAIuM,IAAiBxM,EAAYpB,IAAiB6N,GAvVpC,GAwVH5jB,EACA2jB,GAAgBC,EACnBzM,EAAYrB,EA5VV,EA6VK9V,EA/VL,EAgWOA,EA/VL,EAkWDA,EAnWD,EAqWH+gB,EACX,IAgBJ3O,EAAQoP,GAAeD,GAAgB,CAKnC/U,SAAU,CACN7O,MAAO,MACPwL,UAAW,GACXwB,SAAU,EACV2O,UAAW/C,GAGf2J,eAAgB,WACZ,IAAI5G,EAAY7H,KAAKlT,QAAQ+a,UACzByG,EAAU,GAOd,OANIzG,EAAYjD,GACZ0J,EAAQngB,KAAKyf,IAEb/F,EAAYhD,GACZyJ,EAAQngB,KAAKwf,IAEVW,CACX,EAEA8D,cAAe,SAASzM,GACpB,IAAI7Y,EAAUkT,KAAKlT,QACfulB,GAAW,EACXva,EAAW6N,EAAM7N,SACjB+P,EAAYlC,EAAMkC,UAClBlb,EAAIgZ,EAAMjM,OACV9M,EAAI+Y,EAAMvN,OAed,OAZMyP,EAAY/a,EAAQ+a,YAClB/a,EAAQ+a,UAAYjD,GACpBiD,EAAmB,IAANlb,EAAW4X,EAAkB5X,EAAI,EAAK6X,EAAiBC,EACpE4N,EAAW1lB,GAAKqT,KAAKgQ,GACrBlY,EAAWtI,KAAK8D,IAAIqS,EAAMjM,UAE1BmO,EAAmB,IAANjb,EAAW2X,EAAkB3X,EAAI,EAAK8X,EAAeC,EAClE0N,EAAWzlB,GAAKoT,KAAKiQ,GACrBnY,EAAWtI,KAAK8D,IAAIqS,EAAMvN,UAGlCuN,EAAMkC,UAAYA,EACXwK,GAAYva,EAAWhL,EAAQ4K,WAAamQ,EAAY/a,EAAQ+a,SAC3E,EAEAmK,SAAU,SAASrM,GACf,OAAOmK,GAAe5U,UAAU8W,SAAS5W,KAAK4E,KAAM2F,KAva1C,EAwaL3F,KAAKzR,SAxaA,EAwa0ByR,KAAKzR,QAAwByR,KAAKoS,cAAczM,GACxF,EAEAuC,KAAM,SAASvC,GAEX3F,KAAKgQ,GAAKrK,EAAMjM,OAChBsG,KAAKiQ,GAAKtK,EAAMvN,OAEhB,IAAIyP,EAAY8H,GAAahK,EAAMkC,WAE/BA,IACAlC,EAAM+L,gBAAkB1R,KAAKlT,QAAQZ,MAAQ2b,GAEjD7H,KAAKmB,OAAO+G,KAAK9M,KAAK4E,KAAM2F,EAChC,IAaJhF,EAAQuP,GAAiBJ,GAAgB,CAKrC/U,SAAU,CACN7O,MAAO,QACPwL,UAAW,EACXwB,SAAU,GAGduV,eAAgB,WACZ,MAAO,CAACf,GACZ,EAEAsE,SAAU,SAASrM,GACf,OAAO3F,KAAKmB,OAAO6Q,SAAS5W,KAAK4E,KAAM2F,KAClCnW,KAAK8D,IAAIqS,EAAMzY,MAAQ,GAAK8S,KAAKlT,QAAQ4K,WApdpC,EAodiDsI,KAAKzR,MACpE,EAEA2Z,KAAM,SAASvC,GACX,GAAoB,IAAhBA,EAAMzY,MAAa,CACnB,IAAIolB,EAAQ3M,EAAMzY,MAAQ,EAAI,KAAO,MACrCyY,EAAM+L,gBAAkB1R,KAAKlT,QAAQZ,MAAQomB,CACjD,CACAtS,KAAKmB,OAAO+G,KAAK9M,KAAK4E,KAAM2F,EAChC,IAgBJhF,EAAQwP,GAAiBZ,GAAY,CAKjCxU,SAAU,CACN7O,MAAO,QACPgN,SAAU,EACVtH,KAAM,IACN8F,UAAW,GAGf+W,eAAgB,WACZ,MAAO,CAACjB,GACZ,EAEAuE,QAAS,SAASpM,GACd,IAAI7Y,EAAUkT,KAAKlT,QACfylB,EAAgB5M,EAAMzM,SAAS1L,SAAWV,EAAQoM,SAClDsZ,EAAgB7M,EAAM7N,SAAWhL,EAAQ4K,UACzC+a,EAAY9M,EAAMa,UAAY1Z,EAAQ8E,KAM1C,GAJAoO,KAAKqQ,OAAS1K,GAIT6M,IAAkBD,GAAkB5M,EAAMD,WAAarB,EAAYC,KAAkBmO,EACtFzS,KAAK8R,aACF,GAAInM,EAAMD,UAAYtB,EACzBpE,KAAK8R,QACL9R,KAAKoQ,OAASxR,GAAkB,WAC5BoB,KAAKzR,MA1gBH,EA2gBFyR,KAAK2R,SACT,GAAG7kB,EAAQ8E,KAAMoO,WACd,GAAI2F,EAAMD,UAAYrB,EACzB,OA9gBM,EAghBV,OAAOiL,EACX,EAEAwC,MAAO,WACHhW,aAAakE,KAAKoQ,OACtB,EAEAlI,KAAM,SAASvC,GAvhBD,IAwhBN3F,KAAKzR,QAILoX,GAAUA,EAAMD,UAAYrB,EAC5BrE,KAAKkF,QAAQgD,KAAKlI,KAAKlT,QAAQZ,MAAQ,KAAMyZ,IAE7C3F,KAAKqQ,OAAO9J,UAAY7H,IACxBsB,KAAKkF,QAAQgD,KAAKlI,KAAKlT,QAAQZ,MAAO8T,KAAKqQ,SAEnD,IAaJ1P,EAAQ2P,GAAkBR,GAAgB,CAKtC/U,SAAU,CACN7O,MAAO,SACPwL,UAAW,EACXwB,SAAU,GAGduV,eAAgB,WACZ,MAAO,CAACf,GACZ,EAEAsE,SAAU,SAASrM,GACf,OAAO3F,KAAKmB,OAAO6Q,SAAS5W,KAAK4E,KAAM2F,KAClCnW,KAAK8D,IAAIqS,EAAM4B,UAAYvH,KAAKlT,QAAQ4K,WAlkBnC,EAkkBgDsI,KAAKzR,MACnE,IAaJoS,EAAQ4P,GAAiBT,GAAgB,CAKrC/U,SAAU,CACN7O,MAAO,QACPwL,UAAW,GACXgQ,SAAU,GACVG,UAAWjD,EAAuBC,EAClC3L,SAAU,GAGduV,eAAgB,WACZ,OAAOsB,GAAc7U,UAAUuT,eAAerT,KAAK4E,KACvD,EAEAgS,SAAU,SAASrM,GACf,IACI+B,EADAG,EAAY7H,KAAKlT,QAAQ+a,UAW7B,OARIA,GAAajD,EAAuBC,GACpC6C,EAAW/B,EAAMwB,gBACVU,EAAYjD,EACnB8C,EAAW/B,EAAM0B,iBACVQ,EAAYhD,IACnB6C,EAAW/B,EAAM2B,kBAGdtH,KAAKmB,OAAO6Q,SAAS5W,KAAK4E,KAAM2F,IACnCkC,EAAYlC,EAAMqB,iBAClBrB,EAAM7N,SAAWkI,KAAKlT,QAAQ4K,WAC9BiO,EAAM8B,aAAezH,KAAKlT,QAAQoM,UAClC5F,EAAIoU,GAAY1H,KAAKlT,QAAQ4a,UAAY/B,EAAMD,UAAYrB,CACnE,EAEA6D,KAAM,SAASvC,GACX,IAAIkC,EAAY8H,GAAahK,EAAMqB,iBAC/Ba,GACA7H,KAAKkF,QAAQgD,KAAKlI,KAAKlT,QAAQZ,MAAQ2b,EAAWlC,GAGtD3F,KAAKkF,QAAQgD,KAAKlI,KAAKlT,QAAQZ,MAAOyZ,EAC1C,IA0BJhF,EAAQ6P,GAAejB,GAAY,CAK/BxU,SAAU,CACN7O,MAAO,MACPgN,SAAU,EACVwZ,KAAM,EACNC,SAAU,IACV/gB,KAAM,IACN8F,UAAW,EACXkb,aAAc,IAGlBnE,eAAgB,WACZ,MAAO,CAAChB,GACZ,EAEAsE,QAAS,SAASpM,GACd,IAAI7Y,EAAUkT,KAAKlT,QAEfylB,EAAgB5M,EAAMzM,SAAS1L,SAAWV,EAAQoM,SAClDsZ,EAAgB7M,EAAM7N,SAAWhL,EAAQ4K,UACzCmb,EAAiBlN,EAAMa,UAAY1Z,EAAQ8E,KAI/C,GAFAoO,KAAK8R,QAEAnM,EAAMD,UAAYtB,GAAgC,IAAfpE,KAAK2Q,MACzC,OAAO3Q,KAAK8S,cAKhB,GAAIN,GAAiBK,GAAkBN,EAAe,CAClD,GAAI5M,EAAMD,WAAarB,EACnB,OAAOrE,KAAK8S,cAGhB,IAAIC,GAAgB/S,KAAKyQ,OAAS9K,EAAMY,UAAYvG,KAAKyQ,MAAQ3jB,EAAQ6lB,SACrEK,GAAiBhT,KAAK0Q,SAAW/J,GAAY3G,KAAK0Q,QAAS/K,EAAM3W,QAAUlC,EAAQ8lB,aAgBvF,GAdA5S,KAAKyQ,MAAQ9K,EAAMY,UACnBvG,KAAK0Q,QAAU/K,EAAM3W,OAEhBgkB,GAAkBD,EAGnB/S,KAAK2Q,OAAS,EAFd3Q,KAAK2Q,MAAQ,EAKjB3Q,KAAKqQ,OAAS1K,EAKG,GADF3F,KAAK2Q,MAAQ7jB,EAAQ4lB,KAIhC,OAAK1S,KAAKwR,sBAGNxR,KAAKoQ,OAASxR,GAAkB,WAC5BoB,KAAKzR,MAltBX,EAmtBMyR,KAAK2R,SACT,GAAG7kB,EAAQ6lB,SAAU3S,MAttBvB,GAEA,CAwtBV,CACA,OAAOsP,EACX,EAEAwD,YAAa,WAIT,OAHA9S,KAAKoQ,OAASxR,GAAkB,WAC5BoB,KAAKzR,MAAQ+gB,EACjB,GAAGtP,KAAKlT,QAAQ6lB,SAAU3S,MACnBsP,EACX,EAEAwC,MAAO,WACHhW,aAAakE,KAAKoQ,OACtB,EAEAlI,KAAM,WAvuBQ,GAwuBNlI,KAAKzR,QACLyR,KAAKqQ,OAAO4C,SAAWjT,KAAK2Q,MAC5B3Q,KAAKkF,QAAQgD,KAAKlI,KAAKlT,QAAQZ,MAAO8T,KAAKqQ,QAEnD,IAkBJO,GAAOsC,QAAU,QAMjBtC,GAAO7V,SAAW,CAOdoY,WAAW,EAQX5E,YAAahB,GAMb3R,QAAQ,EASRyJ,YAAa,KAOb2L,WAAY,KAOZH,OAAQ,CAEJ,CAACP,GAAkB,CAAC1U,QAAQ,IAC5B,CAACsU,GAAiB,CAACtU,QAAQ,GAAQ,CAAC,WACpC,CAAC2U,GAAiB,CAAC1I,UAAWjD,IAC9B,CAACmL,GAAe,CAAClI,UAAWjD,GAAuB,CAAC,UACpD,CAAC4L,IACD,CAACA,GAAe,CAACtkB,MAAO,YAAawmB,KAAM,GAAI,CAAC,QAChD,CAACvC,KAQLkB,SAAU,CAMN+B,WAAY,OAOZC,YAAa,OASbC,aAAc,OAOdC,eAAgB,OAOhBC,SAAU,OAQVC,kBAAmB,kBAoC3B3C,GAAQ5V,UAAY,CAMhBrM,IAAK,SAAS/B,GAaV,OAZAuR,EAAO2B,KAAKlT,QAASA,GAGjBA,EAAQyhB,aACRvO,KAAKuO,YAAY3Z,SAEjB9H,EAAQuY,cAERrF,KAAK2F,MAAM3H,UACXgC,KAAK2F,MAAM/P,OAAS9I,EAAQuY,YAC5BrF,KAAK2F,MAAMH,QAERxF,IACX,EAQAnC,KAAM,SAAS6V,GACX1T,KAAKiG,QAAQ0N,QAAUD,EA5Db,EADP,CA8DP,EAQAvL,UAAW,SAAS6E,GAChB,IAAI/G,EAAUjG,KAAKiG,QACnB,IAAIA,EAAQ0N,QAAZ,CAOA,IAAIhb,EAFJqH,KAAKuO,YAAYO,gBAAgB9B,GAGjC,IAAIwB,EAAcxO,KAAKwO,YAKnBoF,EAAgB3N,EAAQ2N,gBAIvBA,GAAkBA,GAz8Bb,EAy8B8BA,EAAcrlB,SAClDqlB,EAAgB3N,EAAQ2N,cAAgB,MAI5C,IADA,IAAIrmB,EAAI,EACDA,EAAIihB,EAAYhhB,QACnBmL,EAAa6V,EAAYjhB,GA9FnB,IAsGF0Y,EAAQ0N,SACHC,GAAiBjb,GAAcib,IAChCjb,EAAW8Y,iBAAiBmC,GAGhCjb,EAAWmZ,QAFXnZ,EAAWwP,UAAU6E,IAOpB4G,GAAoC,GAAnBjb,EAAWpK,QAC7BqlB,EAAgB3N,EAAQ2N,cAAgBjb,GAE5CpL,GA1CJ,CA4CJ,EAOAiB,IAAK,SAASmK,GACV,GAAIA,aAAsB4W,GACtB,OAAO5W,EAIX,IADA,IAAI6V,EAAcxO,KAAKwO,YACdjhB,EAAI,EAAGA,EAAIihB,EAAYhhB,OAAQD,IACpC,GAAIihB,EAAYjhB,GAAGT,QAAQZ,OAASyM,EAChC,OAAO6V,EAAYjhB,GAG3B,OAAO,IACX,EAQAiO,IAAK,SAAS7C,GACV,GAAIoG,EAAepG,EAAY,MAAOqH,MAClC,OAAOA,KAIX,IAAI6T,EAAW7T,KAAKxR,IAAImK,EAAW7L,QAAQZ,OAS3C,OARI2nB,GACA7T,KAAKjC,OAAO8V,GAGhB7T,KAAKwO,YAAYrgB,KAAKwK,GACtBA,EAAWuM,QAAUlF,KAErBA,KAAKuO,YAAY3Z,SACV+D,CACX,EAOAoF,OAAQ,SAASpF,GACb,GAAIoG,EAAepG,EAAY,SAAUqH,MACrC,OAAOA,KAMX,GAHArH,EAAaqH,KAAKxR,IAAImK,GAGN,CACZ,IAAI6V,EAAcxO,KAAKwO,YACnBpO,EAAQkC,EAAQkM,EAAa7V,IAElB,IAAXyH,IACAoO,EAAYhE,OAAOpK,EAAO,GAC1BJ,KAAKuO,YAAY3Z,SAEzB,CAEA,OAAOoL,IACX,EAQAvE,GAAI,SAASqY,EAAQne,GACjB,GAAIme,IAAWtnB,GAGXmJ,IAAYnJ,EAAhB,CAIA,IAAImC,EAAWqR,KAAKrR,SAKpB,OAJAwQ,EAAKwC,EAASmS,IAAS,SAAS5nB,GAC5ByC,EAASzC,GAASyC,EAASzC,IAAU,GACrCyC,EAASzC,GAAOiC,KAAKwH,EACzB,IACOqK,IAPP,CAQJ,EAQA+T,IAAK,SAASD,EAAQne,GAClB,GAAIme,IAAWtnB,EAAf,CAIA,IAAImC,EAAWqR,KAAKrR,SAQpB,OAPAwQ,EAAKwC,EAASmS,IAAS,SAAS5nB,GACvByJ,EAGDhH,EAASzC,IAAUyC,EAASzC,GAAOse,OAAOlI,EAAQ3T,EAASzC,GAAQyJ,GAAU,UAFtEhH,EAASzC,EAIxB,IACO8T,IAVP,CAWJ,EAOAkI,KAAM,SAAShc,EAAO8nB,GAEdhU,KAAKlT,QAAQqmB,WAkEzB,SAAyBjnB,EAAO8nB,GAC5B,IAAIC,EAAend,EAASod,YAAY,SACxCD,EAAaE,UAAUjoB,GAAO,GAAM,GACpC+nB,EAAaG,QAAUJ,EACvBA,EAAKpe,OAAOye,cAAcJ,EAC9B,CAtEYK,CAAgBpoB,EAAO8nB,GAI3B,IAAIrlB,EAAWqR,KAAKrR,SAASzC,IAAU8T,KAAKrR,SAASzC,GAAOuW,QAC5D,GAAK9T,GAAaA,EAASnB,OAA3B,CAIAwmB,EAAK9f,KAAOhI,EACZ8nB,EAAK7b,eAAiB,WAClB6b,EAAKpb,SAAST,gBAClB,EAGA,IADA,IAAI5K,EAAI,EACDA,EAAIoB,EAASnB,QAChBmB,EAASpB,GAAGymB,GACZzmB,GAVJ,CAYJ,EAMAyQ,QAAS,WACLgC,KAAKuD,SAAW0N,GAAejR,MAAM,GAErCA,KAAKrR,SAAW,CAAC,EACjBqR,KAAKiG,QAAU,CAAC,EAChBjG,KAAK2F,MAAM3H,UACXgC,KAAKuD,QAAU,IACnB,GAwCJlF,EAAOuS,GAAQ,CACXxM,YAAaA,EACbmQ,WAtoEa,EAuoEblQ,UAAWA,EACXC,aAAcA,EAEd+K,eAAgBA,GAChBmF,YAlrCc,EAmrCdC,cAlrCgB,EAmrChBC,YAlrCc,EAmrCdC,iBAnrCc,EAorCdC,gBAlrCkB,GAmrClBtF,aAAcA,GAEd/K,eAAgBA,EAChBC,eAAgBA,EAChBC,gBAAiBA,EACjBC,aAAcA,EACdC,eAAgBA,EAChBC,qBAAsBA,EACtBC,mBAAoBA,EACpBC,cAAeA,EAEfgM,QAASA,GACT7L,MAAOA,GACPkJ,YAAaA,GAEb3C,WAAYA,GACZvC,WAAYA,GACZY,kBAAmBA,GACnBqC,gBAAiBA,GACjBpB,iBAAkBA,GAElByE,WAAYA,GACZO,eAAgBA,GAChB+E,IAAKrE,GACLsE,IAAK/E,GACLgF,MAAOxE,GACPyE,MAAO9E,GACP+E,OAAQ3E,GACR4E,MAAO/E,GAEP1U,GAAIgG,EACJsS,IAAKnS,EACLzC,KAAMA,EACNuB,MAAOA,EACPH,OAAQA,EACRlC,OAAQA,EACRsC,QAASA,EACT7B,OAAQA,EACRkE,SAAUA,UAKsB,IAAXnM,EAAyBA,EAA0B,oBAATuO,KAAuBA,KAAO,CAAC,GACvFwL,OAASA,IAGhB,aACI,OAAOA,EACV,mCAOJ,CA7kFD,CA6kFG/Z,OAAQC,sECzkFX,MAAMqe,EACFjU,cACIlB,KAAKoV,SAAW,KAChBpV,KAAKqV,QAAU,IAAIC,IACnBtV,KAAKuV,UAAW,EAChBvV,KAAKwV,eAAYhpB,CACrB,CACHipB,QAAQlpB,EAAOmpB,EAAOC,EAAMzhB,GACrB,MAAM0hB,EAAYF,EAAMG,UAAU3hB,GAC5B4hB,EAAWJ,EAAMK,SACvBH,EAAUtW,SAASrL,GAAKA,EAAG,CACnB1H,QACAypB,QAASN,EAAMM,QACfF,WACAG,YAAazmB,KAAKL,IAAIwmB,EAAOD,EAAM1a,MAAO8a,MAEtD,CACHI,WACWlW,KAAKoV,WAGTpV,KAAKuV,UAAW,EAChBvV,KAAKoV,SAAW,EAAAe,EAAiB/a,KAAKvE,QAAQ,KAC1CmJ,KAAKoW,UACLpW,KAAKoV,SAAW,KACZpV,KAAKuV,UACLvV,KAAKkW,UACT,IAER,CACHE,QAAQT,EAAOhX,KAAKD,OACb,IAAI2X,EAAY,EAChBrW,KAAKqV,QAAQ/V,SAAQ,CAACoW,EAAOnpB,KACzB,IAAKmpB,EAAMY,UAAYZ,EAAMa,MAAM/oB,OAC/B,OAEJ,MAAM+oB,EAAQb,EAAMa,MACpB,IAEIrF,EAFA3jB,EAAIgpB,EAAM/oB,OAAS,EACnBqM,GAAO,EAEX,KAAMtM,GAAK,IAAKA,EACZ2jB,EAAOqF,EAAMhpB,GACT2jB,EAAKsF,SACDtF,EAAKuF,OAASf,EAAMK,WACpBL,EAAMK,SAAW7E,EAAKuF,QAE1BvF,EAAKwF,KAAKf,GACV9b,GAAO,IAEP0c,EAAMhpB,GAAKgpB,EAAMA,EAAM/oB,OAAS,GAChC+oB,EAAMI,OAGV9c,IACAtN,EAAMsN,OACNmG,KAAKyV,QAAQlpB,EAAOmpB,EAAOC,EAAM,aAEhCY,EAAM/oB,SACPkoB,EAAMY,SAAU,EAChBtW,KAAKyV,QAAQlpB,EAAOmpB,EAAOC,EAAM,YACjCD,EAAMM,SAAU,GAEpBK,GAAaE,EAAM/oB,MAAM,IAE7BwS,KAAKwV,UAAYG,EACC,IAAdU,IACArW,KAAKuV,UAAW,EAExB,CACHqB,UAAUrqB,GACH,MAAMsqB,EAAS7W,KAAKqV,QACpB,IAAIK,EAAQmB,EAAOroB,IAAIjC,GAavB,OAZKmpB,IACDA,EAAQ,CACJY,SAAS,EACTN,SAAS,EACTO,MAAO,GACPV,UAAW,CACPiB,SAAU,GACVC,SAAU,KAGlBF,EAAOhoB,IAAItC,EAAOmpB,IAEfA,CACX,CACHsB,OAAOzqB,EAAOL,EAAO+qB,GACdjX,KAAK4W,UAAUrqB,GAAOspB,UAAU3pB,GAAOiC,KAAK8oB,EAChD,CACHzb,IAAIjP,EAAOgqB,GACCA,GAAUA,EAAM/oB,QAGrBwS,KAAK4W,UAAUrqB,GAAOgqB,MAAMpoB,QAAQooB,EACxC,CACHW,IAAI3qB,GACG,OAAOyT,KAAK4W,UAAUrqB,GAAOgqB,MAAM/oB,OAAS,CAChD,CACHwN,MAAMzO,GACC,MAAMmpB,EAAQ1V,KAAKqV,QAAQ7mB,IAAIjC,GAC1BmpB,IAGLA,EAAMY,SAAU,EAChBZ,EAAM1a,MAAQ2D,KAAKD,MACnBgX,EAAMK,SAAWL,EAAMa,MAAMY,QAAO,CAACC,EAAKC,IAAM7nB,KAAKN,IAAIkoB,EAAKC,EAAIC,YAAY,GAC9EtX,KAAKkW,WACT,CACAI,QAAQ/pB,GACJ,IAAKyT,KAAKuV,SACN,OAAO,EAEX,MAAMG,EAAQ1V,KAAKqV,QAAQ7mB,IAAIjC,GAC/B,SAAKmpB,GAAUA,EAAMY,SAAYZ,EAAMa,MAAM/oB,OAIjD,CACHqQ,KAAKtR,GACE,MAAMmpB,EAAQ1V,KAAKqV,QAAQ7mB,IAAIjC,GAC/B,IAAKmpB,IAAUA,EAAMa,MAAM/oB,OACvB,OAEJ,MAAM+oB,EAAQb,EAAMa,MACpB,IAAIhpB,EAAIgpB,EAAM/oB,OAAS,EACvB,KAAMD,GAAK,IAAKA,EACZgpB,EAAMhpB,GAAGgqB,SAEb7B,EAAMa,MAAQ,GACdvW,KAAKyV,QAAQlpB,EAAOmpB,EAAO/W,KAAKD,MAAO,WAC3C,CACHX,OAAOxR,GACA,OAAOyT,KAAKqV,QAAQpX,OAAO1R,EAC/B,EAEJ,IAAIirB,EAA2B,IAAIrC,EAEnC,MAAMsC,EAAc,cACdC,EAAgB,CAClBC,QAAQ,CAACnlB,EAAMC,EAAImlB,IACRA,EAAS,GAAMnlB,EAAKD,EAElCqlB,MAAOrlB,EAAMC,EAAImlB,GACV,MAAME,GAAK,IAAAC,GAAMvlB,GAAQilB,GACnBO,EAAKF,EAAGG,QAAS,IAAAF,GAAMtlB,GAAMglB,GACnC,OAAOO,GAAMA,EAAGC,MAAQD,EAAGE,IAAIJ,EAAIF,GAAQO,YAAc1lB,CAC7D,EACA2lB,OAAO,CAAC5lB,EAAMC,EAAImlB,IACPplB,GAAQC,EAAKD,GAAQolB,GAGpC,MAAMS,EACFnX,YAAYoX,EAAK1iB,EAAQhG,EAAM6C,GAC3B,MAAM8lB,EAAe3iB,EAAOhG,GAC5B6C,GAAK,OAAQ,CACT6lB,EAAI7lB,GACJA,EACA8lB,EACAD,EAAI9lB,OAER,MAAMA,GAAO,OAAQ,CACjB8lB,EAAI9lB,KACJ+lB,EACA9lB,IAEJuN,KAAKwW,SAAU,EACfxW,KAAKwY,IAAMF,EAAIrkB,IAAMyjB,EAAcY,EAAIpkB,aAAe1B,GACtDwN,KAAKyY,QAAU,EAAAxf,EAAQqf,EAAII,SAAW,EAAAzf,EAAQ0f,OAC9C3Y,KAAK4Y,OAASppB,KAAKqpB,MAAMla,KAAKD,OAAS4Z,EAAInb,OAAS,IACpD6C,KAAKsX,UAAYtX,KAAKyW,OAASjnB,KAAKqpB,MAAMP,EAAIvC,UAC9C/V,KAAK8Y,QAAUR,EAAIS,KACnB/Y,KAAKgZ,QAAUpjB,EACfoK,KAAKiZ,MAAQrpB,EACboQ,KAAKkZ,MAAQ1mB,EACbwN,KAAKmZ,IAAM1mB,EACXuN,KAAKoZ,eAAY5sB,CACrB,CACA6sB,SACI,OAAOrZ,KAAKwW,OAChB,CACA5hB,OAAO0jB,EAAK7lB,EAAIkjB,GACZ,GAAI3V,KAAKwW,QAAS,CACdxW,KAAKyV,SAAQ,GACb,MAAM8C,EAAevY,KAAKgZ,QAAQhZ,KAAKiZ,OACjCK,EAAU3D,EAAO3V,KAAK4Y,OACtBW,EAASvZ,KAAKsX,UAAYgC,EAChCtZ,KAAK4Y,OAASjD,EACd3V,KAAKsX,UAAY9nB,KAAKqpB,MAAMrpB,KAAKN,IAAIqqB,EAAQjB,EAAIvC,WACjD/V,KAAKyW,QAAU6C,EACftZ,KAAK8Y,QAAUR,EAAIS,KACnB/Y,KAAKmZ,KAAM,OAAQ,CACfb,EAAI7lB,GACJA,EACA8lB,EACAD,EAAI9lB,OAERwN,KAAKkZ,OAAQ,OAAQ,CACjBZ,EAAI9lB,KACJ+lB,EACA9lB,GAER,CACJ,CACA8kB,SACQvX,KAAKwW,UACLxW,KAAK0W,KAAK/X,KAAKD,OACfsB,KAAKwW,SAAU,EACfxW,KAAKyV,SAAQ,GAErB,CACAiB,KAAKf,GACD,MAAM2D,EAAU3D,EAAO3V,KAAK4Y,OACtB7C,EAAW/V,KAAKsX,UAChB1nB,EAAOoQ,KAAKiZ,MACZzmB,EAAOwN,KAAKkZ,MACZH,EAAO/Y,KAAK8Y,MACZrmB,EAAKuN,KAAKmZ,IAChB,IAAIvB,EAEJ,GADA5X,KAAKwW,QAAUhkB,IAASC,IAAOsmB,GAAQO,EAAUvD,IAC5C/V,KAAKwW,QAGN,OAFAxW,KAAKgZ,QAAQppB,GAAQ6C,OACrBuN,KAAKyV,SAAQ,GAGb6D,EAAU,EACVtZ,KAAKgZ,QAAQppB,GAAQ4C,GAGzBolB,EAAS0B,EAAUvD,EAAW,EAC9B6B,EAASmB,GAAQnB,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAAS5X,KAAKyY,QAAQjpB,KAAKL,IAAI,EAAGK,KAAKN,IAAI,EAAG0oB,KAC9C5X,KAAKgZ,QAAQppB,GAAQoQ,KAAKwY,IAAIhmB,EAAMC,EAAImlB,GAC5C,CACA4B,OACI,MAAMC,EAAWzZ,KAAKoZ,YAAcpZ,KAAKoZ,UAAY,IACrD,OAAO,IAAIM,SAAQ,CAACC,EAAKC,KACrBH,EAAStrB,KAAK,CACVwrB,MACAC,OACF,GAEV,CACAnE,QAAQoE,GACJ,MAAMra,EAASqa,EAAW,MAAQ,MAC5BJ,EAAWzZ,KAAKoZ,WAAa,GACnC,IAAI,IAAI7rB,EAAI,EAAGA,EAAIksB,EAASjsB,OAAQD,IAChCksB,EAASlsB,GAAGiS,IAEpB,EAGJ,MAAMsa,EACF5Y,YAAY3U,EAAOwtB,GACf/Z,KAAKga,OAASztB,EACdyT,KAAKia,YAAc,IAAI3E,IACvBtV,KAAKka,UAAUH,EACnB,CACAG,UAAUH,GACN,KAAK,IAAAxsB,GAASwsB,GACV,OAEJ,MAAMI,EAAmB9sB,OAAOC,KAAK,EAAA8sB,EAASC,WACxCC,EAAgBta,KAAKia,YAC3B5sB,OAAOktB,oBAAoBR,GAAQza,SAASrT,IACxC,MAAMqsB,EAAMyB,EAAO9tB,GACnB,KAAK,IAAAsB,GAAS+qB,GACV,OAEJ,MAAMuB,EAAW,CAAC,EAClB,IAAK,MAAMW,KAAUL,EACjBN,EAASW,GAAUlC,EAAIkC,KAE1B,OAAQlC,EAAIxX,aAAewX,EAAIxX,YAAc,CAC1C7U,IACDqT,SAAS1P,IACJA,IAAS3D,GAAQquB,EAAcpD,IAAItnB,IACnC0qB,EAAczrB,IAAIe,EAAMiqB,EAC5B,GACF,GAEV,CACHY,gBAAgB7kB,EAAQiN,GACjB,MAAM6X,EAAa7X,EAAO/V,QACpBA,EAwEd,SAA8B8I,EAAQ8kB,GAClC,IAAKA,EACD,OAEJ,IAAI5tB,EAAU8I,EAAO9I,QACrB,GAAKA,EAUL,OANIA,EAAQ6tB,UACR/kB,EAAO9I,QAAUA,EAAUO,OAAOgR,OAAO,CAAC,EAAGvR,EAAS,CAClD6tB,SAAS,EACTC,YAAa,CAAC,KAGf9tB,EATH8I,EAAO9I,QAAU4tB,CAUzB,CAxFwBG,CAAqBjlB,EAAQ8kB,GAC7C,IAAK5tB,EACD,MAAO,GAEX,MAAMguB,EAAa9a,KAAK+a,kBAAkBjuB,EAAS4tB,GAOnD,OANIA,EAAWC,SAwDvB,SAAkBG,EAAYha,GAC1B,MAAMwV,EAAU,GACVhpB,EAAOD,OAAOC,KAAKwT,GACzB,IAAI,IAAIvT,EAAI,EAAGA,EAAID,EAAKE,OAAQD,IAAI,CAChC,MAAMytB,EAAOF,EAAWxtB,EAAKC,IACzBytB,GAAQA,EAAK3B,UACb/C,EAAQnoB,KAAK6sB,EAAKxB,OAE1B,CACA,OAAOE,QAAQzO,IAAIqL,EACvB,CAjEY2E,CAASrlB,EAAO9I,QAAQ8tB,YAAaF,GAAYQ,MAAK,KAClDtlB,EAAO9I,QAAU4tB,CAAU,IAC5B,SAGAI,CACX,CACHC,kBAAkBnlB,EAAQiN,GACnB,MAAMyX,EAAgBta,KAAKia,YACrBa,EAAa,GACbxE,EAAU1gB,EAAOglB,cAAgBhlB,EAAOglB,YAAc,CAAC,GACvDvS,EAAQhb,OAAOC,KAAKuV,GACpB8S,EAAOhX,KAAKD,MAClB,IAAInR,EACJ,IAAIA,EAAI8a,EAAM7a,OAAS,EAAGD,GAAK,IAAKA,EAAE,CAClC,MAAMqC,EAAOyY,EAAM9a,GACnB,GAAuB,MAAnBqC,EAAKurB,OAAO,GACZ,SAEJ,GAAa,YAATvrB,EAAoB,CACpBkrB,EAAW3sB,QAAQ6R,KAAKya,gBAAgB7kB,EAAQiN,IAChD,QACJ,CACA,MAAMuL,EAAQvL,EAAOjT,GACrB,IAAIyqB,EAAY/D,EAAQ1mB,GACxB,MAAM0oB,EAAMgC,EAAc9rB,IAAIoB,GAC9B,GAAIyqB,EAAW,CACX,GAAI/B,GAAO+B,EAAUhB,SAAU,CAC3BgB,EAAUzlB,OAAO0jB,EAAKlK,EAAOuH,GAC7B,QACJ,CACI0E,EAAU9C,QAElB,CACKe,GAAQA,EAAIvC,UAIjBO,EAAQ1mB,GAAQyqB,EAAY,IAAIhC,EAAUC,EAAK1iB,EAAQhG,EAAMwe,GAC7D0M,EAAW3sB,KAAKksB,IAJZzkB,EAAOhG,GAAQwe,CAKvB,CACA,OAAO0M,CACX,CACHlmB,OAAOgB,EAAQiN,GACR,GAA8B,IAA1B7C,KAAKia,YAAYmB,KAEjB,YADA/tB,OAAOgR,OAAOzI,EAAQiN,GAG1B,MAAMiY,EAAa9a,KAAK+a,kBAAkBnlB,EAAQiN,GAClD,OAAIiY,EAAWttB,QACXgqB,EAAShc,IAAIwE,KAAKga,OAAQc,IACnB,QAFX,CAIJ,EA+BJ,SAASO,EAAUnuB,EAAOouB,GACtB,MAAMzvB,EAAOqB,GAASA,EAAMJ,SAAW,CAAC,EAClCyuB,EAAU1vB,EAAK0vB,QACfpsB,OAAmB3C,IAAbX,EAAKsD,IAAoBmsB,EAAkB,EACjDpsB,OAAmB1C,IAAbX,EAAKqD,IAAoBosB,EAAkB,EACvD,MAAO,CACHtgB,MAAOugB,EAAUrsB,EAAMC,EACvB+X,IAAKqU,EAAUpsB,EAAMD,EAE7B,CAgCA,SAASssB,EAAwBjvB,EAAOkvB,GACpC,MAAMnuB,EAAO,GACPouB,EAAWnvB,EAAMovB,uBAAuBF,GAC9C,IAAIluB,EAAGquB,EACP,IAAIruB,EAAI,EAAGquB,EAAOF,EAASluB,OAAQD,EAAIquB,IAAQruB,EAC3CD,EAAKa,KAAKutB,EAASnuB,GAAG6S,OAE1B,OAAO9S,CACX,CACA,SAASuuB,EAAWjc,EAAOwO,EAAO0N,EAAShvB,EAAU,CAAC,GAClD,MAAMQ,EAAOsS,EAAMtS,KACbyuB,EAA8B,WAAjBjvB,EAAQT,KAC3B,IAAIkB,EAAGquB,EAAMI,EAAcC,EAC3B,GAAc,OAAV7N,EAAJ,CAGA,IAAI7gB,EAAI,EAAGquB,EAAOtuB,EAAKE,OAAQD,EAAIquB,IAAQruB,EAAE,CAEzC,GADAyuB,GAAgB1uB,EAAKC,GACjByuB,IAAiBF,EAAS,CAC1B,GAAIhvB,EAAQme,IACR,SAEJ,KACJ,CACAgR,EAAarc,EAAMiD,OAAOmZ,IACtB,OAAeC,KAAgBF,GAAwB,IAAV3N,IAAe,IAAAjZ,GAAKiZ,MAAW,IAAAjZ,GAAK8mB,MACjF7N,GAAS6N,EAEjB,CACA,OAAO7N,CAdP,CAeJ,CAcA,SAAS8N,EAAUhvB,EAAOivB,GACtB,MAAMC,EAAUlvB,GAASA,EAAMJ,QAAQsvB,QACvC,OAAOA,QAAuB5vB,IAAZ4vB,QAAwC5vB,IAAf2vB,EAAKvc,KACpD,CAWA,SAASyc,EAAiBC,EAAQC,EAAUC,GACxC,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,CAAC,GAC1D,OAAOE,EAASD,KAAgBC,EAASD,GAAc,CAAC,EAC5D,CACA,SAASE,EAAoB9c,EAAO+c,EAAQC,EAAU1oB,GAClD,IAAK,MAAMioB,KAAQQ,EAAOE,wBAAwB3oB,GAAMqnB,UAAU,CAC9D,MAAMnN,EAAQxO,EAAMuc,EAAK/b,OACzB,GAAIwc,GAAYxO,EAAQ,IAAMwO,GAAYxO,EAAQ,EAC9C,OAAO+N,EAAK/b,KAEpB,CACA,OAAO,IACX,CACA,SAAS0c,EAAaC,EAAYC,GAC9B,MAAM,MAAEzwB,EAAQ0wB,YAAad,GAAUY,EACjCT,EAAS/vB,EAAM2wB,UAAY3wB,EAAM2wB,QAAU,CAAC,IAC5C,OAAEC,EAAO,OAAER,EAASvc,MAAO4b,GAAkBG,EAC7CiB,EAAQD,EAAOnvB,KACfqvB,EAAQV,EAAO3uB,KACf/B,EA7BV,SAAqBqxB,EAAYC,EAAYpB,GACzC,MAAO,GAAGmB,EAAWttB,MAAMutB,EAAWvtB,MAAMmsB,EAAKvc,OAASuc,EAAKjoB,MACnE,CA2BgBspB,CAAYL,EAAQR,EAAQR,GAClCP,EAAOoB,EAAOxvB,OACpB,IAAIoS,EACJ,IAAI,IAAIrS,EAAI,EAAGA,EAAIquB,IAAQruB,EAAE,CACzB,MAAM2jB,EAAO8L,EAAOzvB,IACZ,CAAC6vB,GAAQhd,EAAQ,CAACid,GAAQjP,GAAW8C,EAE7CtR,GADmBsR,EAAKgM,UAAYhM,EAAKgM,QAAU,CAAC,IACjCG,GAAShB,EAAiBC,EAAQrwB,EAAKmU,GAC1DR,EAAMoc,GAAgB5N,EACtBxO,EAAM6d,KAAOf,EAAoB9c,EAAO+c,GAAQ,EAAMR,EAAKjoB,MAC3D0L,EAAM8d,QAAUhB,EAAoB9c,EAAO+c,GAAQ,EAAOR,EAAKjoB,OAC1C0L,EAAM+d,gBAAkB/d,EAAM+d,cAAgB,CAAC,IACvD3B,GAAgB5N,CACjC,CACJ,CACA,SAASwP,EAAgBrxB,EAAOyB,GAC5B,MAAMb,EAASZ,EAAMY,OACrB,OAAOE,OAAOC,KAAKH,GAAQ4e,QAAQ9f,GAAMkB,EAAOlB,GAAK+B,OAASA,IAAM6vB,OACxE,CAuBA,SAASC,EAAY3B,EAAM5F,GACvB,MAAMyF,EAAeG,EAAKY,WAAW3c,MAC/BpS,EAAOmuB,EAAKQ,QAAUR,EAAKQ,OAAO3uB,KACxC,GAAKA,EAAL,CAGAuoB,EAAQA,GAAS4F,EAAK4B,QACtB,IAAK,MAAMf,KAAUzG,EAAM,CACvB,MAAM+F,EAASU,EAAOE,QACtB,IAAKZ,QAA2B9vB,IAAjB8vB,EAAOtuB,SAAsDxB,IAA/B8vB,EAAOtuB,GAAMguB,GACtD,cAEGM,EAAOtuB,GAAMguB,QACexvB,IAA/B8vB,EAAOtuB,GAAM2vB,oBAA4EnxB,IAA7C8vB,EAAOtuB,GAAM2vB,cAAc3B,WAChEM,EAAOtuB,GAAM2vB,cAAc3B,EAE1C,CAXA,CAYJ,CACA,MAAMgC,EAAsB3xB,GAAgB,UAATA,GAA6B,SAATA,EACjD4xB,EAAmB,CAACC,EAAQC,IAASA,EAASD,EAAS7wB,OAAOgR,OAAO,CAAC,EAAG6f,GAK/E,MAAME,EACLC,gBAAkB,CAAC,EACnBA,0BAA4B,KAC5BA,uBAAyB,KACzBnd,YAAY3U,EAAOyvB,GACZhc,KAAKzT,MAAQA,EACbyT,KAAKse,KAAO/xB,EAAM0N,IAClB+F,KAAKI,MAAQ4b,EACbhc,KAAKue,gBAAkB,CAAC,EACxBve,KAAKid,YAAcjd,KAAKwe,UACxBxe,KAAKye,MAAQze,KAAKid,YAAY/oB,KAC9B8L,KAAKlT,aAAUN,EACdwT,KAAK0e,UAAW,EACjB1e,KAAK2e,WAAQnyB,EACbwT,KAAK4e,iBAAcpyB,EACnBwT,KAAK6e,oBAAiBryB,EACtBwT,KAAK8e,gBAAatyB,EAClBwT,KAAK+e,gBAAavyB,EAClBwT,KAAKgf,qBAAsB,EAC3Bhf,KAAKif,oBAAqB,EAC1Bjf,KAAKkf,cAAW1yB,EAChBwT,KAAKmf,UAAY,GACjBnf,KAAKof,8BAAgCA,mBACrCpf,KAAKqf,2BAA6BA,gBAClCrf,KAAKsf,YACT,CACAA,aACI,MAAMnD,EAAOnc,KAAKid,YAClBjd,KAAKka,YACLla,KAAKuf,aACLpD,EAAKqD,SAAWtD,EAAUC,EAAKQ,OAAQR,GACvCnc,KAAKyf,cACDzf,KAAKlT,QAAQ4yB,OAAS1f,KAAKzT,MAAMozB,gBAAgB,WACjDtkB,QAAQC,KAAK,qKAErB,CACAskB,YAAY5D,GACJhc,KAAKI,QAAU4b,GACf8B,EAAY9d,KAAKid,aAErBjd,KAAKI,MAAQ4b,CACjB,CACAuD,aACI,MAAMhzB,EAAQyT,KAAKzT,MACb4vB,EAAOnc,KAAKid,YACZ4C,EAAU7f,KAAK8f,aACfC,EAAW,CAAC/xB,EAAMrB,EAAGC,EAAGupB,IAAa,MAATnoB,EAAerB,EAAa,MAATqB,EAAemoB,EAAIvpB,EAClEozB,EAAM7D,EAAK8D,SAAU,IAAAhwB,GAAe4vB,EAAQI,QAASrC,EAAgBrxB,EAAO,MAC5E2zB,EAAM/D,EAAKgE,SAAU,IAAAlwB,GAAe4vB,EAAQM,QAASvC,EAAgBrxB,EAAO,MAC5E6zB,EAAMjE,EAAKkE,SAAU,IAAApwB,GAAe4vB,EAAQQ,QAASzC,EAAgBrxB,EAAO,MAC5E+zB,EAAYnE,EAAKmE,UACjBC,EAAMpE,EAAKqE,QAAUT,EAASO,EAAWN,EAAKE,EAAKE,GACnDK,EAAMtE,EAAKuE,QAAUX,EAASO,EAAWJ,EAAKF,EAAKI,GACzDjE,EAAKwE,OAAS3gB,KAAK4gB,cAAcZ,GACjC7D,EAAK0E,OAAS7gB,KAAK4gB,cAAcV,GACjC/D,EAAK2E,OAAS9gB,KAAK4gB,cAAcR,GACjCjE,EAAKgB,OAASnd,KAAK4gB,cAAcL,GACjCpE,EAAKQ,OAAS3c,KAAK4gB,cAAcH,EACrC,CACAX,aACI,OAAO9f,KAAKzT,MAAMynB,KAAK+M,SAAS/gB,KAAKI,MACzC,CACAoe,UACI,OAAOxe,KAAKzT,MAAMy0B,eAAehhB,KAAKI,MAC1C,CACHwgB,cAAcK,GACP,OAAOjhB,KAAKzT,MAAMY,OAAO8zB,EAC7B,CACHC,eAAeh0B,GACR,MAAMivB,EAAOnc,KAAKid,YAClB,OAAO/vB,IAAUivB,EAAKgB,OAAShB,EAAKQ,OAASR,EAAKgB,MACtD,CACArL,QACI9R,KAAKoW,QAAQ,QACjB,CACH+K,WACO,MAAMhF,EAAOnc,KAAKid,YACdjd,KAAK2e,QACL,IAAAyC,GAAoBphB,KAAK2e,MAAO3e,MAEhCmc,EAAKqD,UACL1B,EAAY3B,EAEpB,CACHkF,aACO,MAAMxB,EAAU7f,KAAK8f,aACf9L,EAAO6L,EAAQ7L,OAAS6L,EAAQ7L,KAAO,IACvC2K,EAAQ3e,KAAK2e,MACnB,IAAI,IAAApxB,GAASymB,GACThU,KAAK2e,MAxMjB,SAAkC3K,GAC9B,MAAM1mB,EAAOD,OAAOC,KAAK0mB,GACnBsN,EAAQ,IAAIriB,MAAM3R,EAAKE,QAC7B,IAAID,EAAGquB,EAAM3vB,EACb,IAAIsB,EAAI,EAAGquB,EAAOtuB,EAAKE,OAAQD,EAAIquB,IAAQruB,EACvCtB,EAAMqB,EAAKC,GACX+zB,EAAM/zB,GAAK,CACPZ,EAAGV,EACHW,EAAGonB,EAAK/nB,IAGhB,OAAOq1B,CACX,CA4LyBC,CAAyBvN,QACnC,GAAI2K,IAAU3K,EAAM,CACvB,GAAI2K,EAAO,EACP,IAAAyC,GAAoBzC,EAAO3e,MAC3B,MAAMmc,EAAOnc,KAAKid,YAClBa,EAAY3B,GACZA,EAAK4B,QAAU,EACnB,CACI/J,GAAQ3mB,OAAOm0B,aAAaxN,KAC5B,IAAAyN,GAAkBzN,EAAMhU,MAE5BA,KAAKmf,UAAY,GACjBnf,KAAK2e,MAAQ3K,CACjB,CACJ,CACAyL,cACI,MAAMtD,EAAOnc,KAAKid,YAClBjd,KAAKqhB,aACDrhB,KAAKof,qBACLjD,EAAK0D,QAAU,IAAI7f,KAAKof,mBAEhC,CACAsC,sBAAsBC,GAClB,MAAMxF,EAAOnc,KAAKid,YACZ4C,EAAU7f,KAAK8f,aACrB,IAAI8B,GAAe,EACnB5hB,KAAKqhB,aACL,MAAMQ,EAAa1F,EAAKqD,SACxBrD,EAAKqD,SAAWtD,EAAUC,EAAKQ,OAAQR,GACnCA,EAAKvc,QAAUigB,EAAQjgB,QACvBgiB,GAAe,EACf9D,EAAY3B,GACZA,EAAKvc,MAAQigB,EAAQjgB,OAEzBI,KAAK8hB,gBAAgBH,IACjBC,GAAgBC,IAAe1F,EAAKqD,WACpC1C,EAAa9c,KAAMmc,EAAK4B,QAEhC,CACH7D,YACO,MAAMH,EAAS/Z,KAAKzT,MAAMwtB,OACpBgI,EAAYhI,EAAOiI,iBAAiBhiB,KAAKye,OACzCwD,EAASlI,EAAOmI,gBAAgBliB,KAAK8f,aAAciC,GAAW,GACpE/hB,KAAKlT,QAAUitB,EAAOoI,eAAeF,EAAQjiB,KAAKoiB,cAClDpiB,KAAK0e,SAAW1e,KAAKlT,QAAQu1B,QAC7BriB,KAAKue,gBAAkB,CAAC,CAC5B,CACH7tB,MAAMsK,EAAO2V,GACN,MAAQsM,YAAad,EAAOwC,MAAO3K,GAAUhU,MACvC,OAAEmd,EAAO,SAAEqC,GAAcrD,EACzBiB,EAAQD,EAAOnvB,KACrB,IAEIT,EAAG8pB,EAAK2F,EAFRsF,EAAmB,IAAVtnB,GAAe2V,IAAUqD,EAAKxmB,QAAgB2uB,EAAKoG,QAC5DC,EAAOxnB,EAAQ,GAAKmhB,EAAK4B,QAAQ/iB,EAAQ,GAE7C,IAAsB,IAAlBgF,KAAK0e,SACLvC,EAAK4B,QAAU/J,EACfmI,EAAKoG,SAAU,EACfvF,EAAShJ,MACN,CAECgJ,GADA,OAAQhJ,EAAKhZ,IACJgF,KAAKyiB,eAAetG,EAAMnI,EAAMhZ,EAAO2V,IACzC,IAAApjB,GAASymB,EAAKhZ,IACZgF,KAAK0iB,gBAAgBvG,EAAMnI,EAAMhZ,EAAO2V,GAExC3Q,KAAK2iB,mBAAmBxG,EAAMnI,EAAMhZ,EAAO2V,GAExD,MAAMiS,EAA6B,IAAmB,OAAfvL,EAAI+F,IAAmBoF,GAAQnL,EAAI+F,GAASoF,EAAKpF,GACxF,IAAI7vB,EAAI,EAAGA,EAAIojB,IAASpjB,EACpB4uB,EAAK4B,QAAQxwB,EAAIyN,GAASqc,EAAM2F,EAAOzvB,GACnC+0B,IACIM,MACAN,GAAS,GAEbE,EAAOnL,GAGf8E,EAAKoG,QAAUD,CACnB,CACI9C,GACA1C,EAAa9c,KAAMgd,EAE3B,CACH2F,mBAAmBxG,EAAMnI,EAAMhZ,EAAO2V,GAC/B,MAAM,OAAEwM,EAAO,OAAER,GAAYR,EACvBiB,EAAQD,EAAOnvB,KACfqvB,EAAQV,EAAO3uB,KACf60B,EAAS1F,EAAO/qB,YAChB0wB,EAAc3F,IAAWR,EACzBK,EAAS,IAAI/d,MAAM0R,GACzB,IAAIpjB,EAAGquB,EAAMxb,EACb,IAAI7S,EAAI,EAAGquB,EAAOjL,EAAOpjB,EAAIquB,IAAQruB,EACjC6S,EAAQ7S,EAAIyN,EACZgiB,EAAOzvB,GAAK,CACR,CAAC6vB,GAAQ0F,GAAe3F,EAAOzsB,MAAMmyB,EAAOziB,GAAQA,GACpD,CAACid,GAAQV,EAAOjsB,MAAMsjB,EAAK5T,GAAQA,IAG3C,OAAO4c,CACX,CACHyF,eAAetG,EAAMnI,EAAMhZ,EAAO2V,GAC3B,MAAM,OAAEgQ,EAAO,OAAEE,GAAY1E,EACvBa,EAAS,IAAI/d,MAAM0R,GACzB,IAAIpjB,EAAGquB,EAAMxb,EAAO8Q,EACpB,IAAI3jB,EAAI,EAAGquB,EAAOjL,EAAOpjB,EAAIquB,IAAQruB,EACjC6S,EAAQ7S,EAAIyN,EACZkW,EAAO8C,EAAK5T,GACZ4c,EAAOzvB,GAAK,CACRZ,EAAGg0B,EAAOjwB,MAAMwgB,EAAK,GAAI9Q,GACzBxT,EAAGi0B,EAAOnwB,MAAMwgB,EAAK,GAAI9Q,IAGjC,OAAO4c,CACX,CACH0F,gBAAgBvG,EAAMnI,EAAMhZ,EAAO2V,GAC5B,MAAM,OAAEgQ,EAAO,OAAEE,GAAY1E,GACvB,SAAE4G,EAAU,IAAI,SAAEC,EAAU,KAAShjB,KAAK0e,SAC1C1B,EAAS,IAAI/d,MAAM0R,GACzB,IAAIpjB,EAAGquB,EAAMxb,EAAO8Q,EACpB,IAAI3jB,EAAI,EAAGquB,EAAOjL,EAAOpjB,EAAIquB,IAAQruB,EACjC6S,EAAQ7S,EAAIyN,EACZkW,EAAO8C,EAAK5T,GACZ4c,EAAOzvB,GAAK,CACRZ,EAAGg0B,EAAOjwB,OAAM,OAAiBwgB,EAAM6R,GAAW3iB,GAClDxT,EAAGi0B,EAAOnwB,OAAM,OAAiBwgB,EAAM8R,GAAW5iB,IAG1D,OAAO4c,CACX,CACHiG,UAAU7iB,GACH,OAAOJ,KAAKid,YAAYc,QAAQ3d,EACpC,CACH8iB,eAAe9iB,GACR,OAAOJ,KAAKid,YAAYjJ,KAAK5T,EACjC,CACHyb,WAAW3uB,EAAO8vB,EAAQ3wB,GACnB,MAAME,EAAQyT,KAAKzT,MACb4vB,EAAOnc,KAAKid,YACZ7O,EAAQ4O,EAAO9vB,EAAMc,MAK3B,OAAO6tB,EAJO,CACVvuB,KAAMkuB,EAAwBjvB,GAAO,GACrCsW,OAAQma,EAAOE,QAAQhwB,EAAMc,MAAM2vB,eAEdvP,EAAO+N,EAAK/b,MAAO,CACxC/T,QAER,CACH82B,sBAAsBl0B,EAAO/B,EAAO8vB,EAAQpd,GACrC,MAAMwjB,EAAcpG,EAAO9vB,EAAMc,MACjC,IAAIogB,EAAwB,OAAhBgV,EAAuBC,IAAMD,EACzC,MAAMvgB,EAASjD,GAASod,EAAOE,QAAQhwB,EAAMc,MACzC4R,GAASiD,IACTjD,EAAMiD,OAASA,EACfuL,EAAQyN,EAAWjc,EAAOwjB,EAAapjB,KAAKid,YAAY7c,QAE5DnR,EAAME,IAAMK,KAAKL,IAAIF,EAAME,IAAKif,GAChCnf,EAAMC,IAAMM,KAAKN,IAAID,EAAMC,IAAKkf,EACpC,CACHkV,UAAUp2B,EAAOq2B,GACV,MAAMpH,EAAOnc,KAAKid,YACZc,EAAU5B,EAAK4B,QACfuE,EAASnG,EAAKoG,SAAWr1B,IAAUivB,EAAKgB,OACxCvB,EAAOmC,EAAQvwB,OACfg2B,EAAaxjB,KAAKkhB,eAAeh0B,GACjC0S,EAhQM,EAAC2jB,EAAUpH,EAAM5vB,IAAQg3B,IAAapH,EAAKsH,QAAUtH,EAAKqD,UAAY,CAClFlyB,KAAMkuB,EAAwBjvB,GAAO,GACrCsW,OAAQ,MA8PM6gB,CAAYH,EAAUpH,EAAMnc,KAAKzT,OACzC0C,EAAQ,CACVE,IAAKw0B,OAAOC,kBACZ10B,IAAKy0B,OAAOE,oBAER10B,IAAK20B,EAAW50B,IAAK60B,GA5VrC,SAAuB72B,GACnB,MAAM,IAAEiC,EAAI,IAAED,EAAI,WAAE80B,EAAW,WAAEC,GAAgB/2B,EAAMg3B,gBACvD,MAAO,CACH/0B,IAAK60B,EAAa70B,EAAMw0B,OAAOE,kBAC/B30B,IAAK+0B,EAAa/0B,EAAMy0B,OAAOC,kBAEvC,CAsVmDM,CAAcV,GACzD,IAAIj2B,EAAGyvB,EACP,SAASmH,IACLnH,EAASe,EAAQxwB,GACjB,MAAM0uB,EAAae,EAAOwG,EAAWx1B,MACrC,QAAQ,OAAegvB,EAAO9vB,EAAMc,QAAU81B,EAAW7H,GAAc8H,EAAW9H,CACtF,CACA,IAAI1uB,EAAI,EAAGA,EAAIquB,IACPuI,MAGJnkB,KAAKmjB,sBAAsBl0B,EAAO/B,EAAO8vB,EAAQpd,IAC7C0iB,MALe/0B,GASvB,GAAI+0B,EACA,IAAI/0B,EAAIquB,EAAO,EAAGruB,GAAK,IAAKA,EACxB,IAAI42B,IAAJ,CAGAnkB,KAAKmjB,sBAAsBl0B,EAAO/B,EAAO8vB,EAAQpd,GACjD,KAFA,CAKR,OAAO3Q,CACX,CACAm1B,mBAAmBl3B,GACf,MAAM8vB,EAAShd,KAAKid,YAAYc,QAC1Blb,EAAS,GACf,IAAItV,EAAGquB,EAAMxN,EACb,IAAI7gB,EAAI,EAAGquB,EAAOoB,EAAOxvB,OAAQD,EAAIquB,IAAQruB,EACzC6gB,EAAQ4O,EAAOzvB,GAAGL,EAAMc,OACpB,OAAeogB,IACfvL,EAAO1U,KAAKigB,GAGpB,OAAOvL,CACX,CACHwhB,iBACO,OAAO,CACX,CACHC,iBAAiBlkB,GACV,MAAM+b,EAAOnc,KAAKid,YACZE,EAAShB,EAAKgB,OACdR,EAASR,EAAKQ,OACdK,EAAShd,KAAKijB,UAAU7iB,GAC9B,MAAO,CACHmkB,MAAOpH,EAAS,GAAKA,EAAOqH,iBAAiBxH,EAAOG,EAAOnvB,OAAS,GACpEogB,MAAOuO,EAAS,GAAKA,EAAO6H,iBAAiBxH,EAAOL,EAAO3uB,OAAS,GAE5E,CACHooB,QAAQ/pB,GACD,MAAM8vB,EAAOnc,KAAKid,YAClBjd,KAAKpL,OAAOvI,GAAQ,WACpB8vB,EAAKsI,MAxdb,SAAgBrW,GACZ,IAAIxB,EAAGuJ,EAAGpT,EAAG0e,EASb,OARI,IAAAl0B,GAAS6gB,IACTxB,EAAIwB,EAAM3gB,IACV0oB,EAAI/H,EAAMxgB,MACVmV,EAAIqL,EAAM1gB,OACV+zB,EAAIrT,EAAMzgB,MAEVif,EAAIuJ,EAAIpT,EAAI0e,EAAIrT,EAEb,CACH3gB,IAAKmf,EACLhf,MAAOuoB,EACPzoB,OAAQqV,EACRpV,KAAM8zB,EACNiD,UAAoB,IAAVtW,EAElB,CAucqBuW,EAAO,IAAA10B,GAAe+P,KAAKlT,QAAQ83B,KArexD,SAAqBjE,EAAQE,EAAQvF,GACjC,IAAwB,IAApBA,EACA,OAAO,EAEX,MAAM3uB,EAAI0uB,EAAUsF,EAAQrF,GACtB1uB,EAAIyuB,EAAUwF,EAAQvF,GAC5B,MAAO,CACH7tB,IAAKb,EAAEsa,IACPtZ,MAAOjB,EAAEua,IACTxZ,OAAQd,EAAEoO,MACVrN,KAAMhB,EAAEqO,MAEhB,CAyd8D6pB,CAAY1I,EAAKwE,OAAQxE,EAAK0E,OAAQ7gB,KAAKqkB,mBACrG,CACHzvB,OAAOvI,GAAO,CACXwN,OACI,MAAMI,EAAM+F,KAAKse,KACX/xB,EAAQyT,KAAKzT,MACb4vB,EAAOnc,KAAKid,YACZ6H,EAAW3I,EAAKnI,MAAQ,GACxB+Q,EAAOx4B,EAAM+H,UACb+kB,EAAS,GACTre,EAAQgF,KAAK8e,YAAc,EAC3BnO,EAAQ3Q,KAAK+e,YAAc+F,EAASt3B,OAASwN,EAC7CgqB,EAA0BhlB,KAAKlT,QAAQk4B,wBAC7C,IAAIz3B,EAIJ,IAHI4uB,EAAK0D,SACL1D,EAAK0D,QAAQhmB,KAAKI,EAAK8qB,EAAM/pB,EAAO2V,GAEpCpjB,EAAIyN,EAAOzN,EAAIyN,EAAQ2V,IAASpjB,EAAE,CAClC,MAAMgW,EAAUuhB,EAASv3B,GACrBgW,EAAQkgB,SAGRlgB,EAAQ8V,QAAU2L,EAClB3L,EAAOlrB,KAAKoV,GAEZA,EAAQ1J,KAAKI,EAAK8qB,GAE1B,CACA,IAAIx3B,EAAI,EAAGA,EAAI8rB,EAAO7rB,SAAUD,EAC5B8rB,EAAO9rB,GAAGsM,KAAKI,EAAK8qB,EAE5B,CACHE,SAAS7kB,EAAOiZ,GACT,MAAMhtB,EAAOgtB,EAAS,SAAW,UACjC,YAAiB7sB,IAAV4T,GAAuBJ,KAAKid,YAAY4C,QAAU7f,KAAKklB,6BAA6B74B,GAAQ2T,KAAKmlB,0BAA0B/kB,GAAS,EAAG/T,EAClJ,CACH+1B,WAAWhiB,EAAOiZ,EAAQhtB,GACnB,MAAMwzB,EAAU7f,KAAK8f,aACrB,IAAIjhB,EACJ,GAAIuB,GAAS,GAAKA,EAAQJ,KAAKid,YAAYjJ,KAAKxmB,OAAQ,CACpD,MAAM+V,EAAUvD,KAAKid,YAAYjJ,KAAK5T,GACtCvB,EAAU0E,EAAQ2b,WAAa3b,EAAQ2b,SArYnD,SAA2Bnd,EAAQ3B,EAAOmD,GACtC,OAAO,OAAcxB,EAAQ,CACzBsX,QAAQ,EACR+L,UAAWhlB,EACX4c,YAAQxwB,EACR64B,SAAK74B,EACL+W,UACAnD,QACA/T,KAAM,UACN6H,KAAM,QAEd,CA0X8DoxB,CAAkBtlB,KAAKoiB,aAAchiB,EAAOmD,IAC9F1E,EAAQme,OAAShd,KAAKijB,UAAU7iB,GAChCvB,EAAQwmB,IAAMxF,EAAQ7L,KAAK5T,GAC3BvB,EAAQuB,MAAQvB,EAAQumB,UAAYhlB,CACxC,MACIvB,EAAUmB,KAAKkf,WAAalf,KAAKkf,SApZ7C,SAA8Bnd,EAAQ3B,GAClC,OAAO,OAAc2B,EAAQ,CACzBsX,QAAQ,EACRwG,aAASrzB,EACTwvB,aAAc5b,EACdA,QACA/T,KAAM,UACN6H,KAAM,WAEd,CA2YwDqxB,CAAqBvlB,KAAKzT,MAAM61B,aAAcpiB,KAAKI,QAC/FvB,EAAQghB,QAAUA,EAClBhhB,EAAQuB,MAAQvB,EAAQmd,aAAehc,KAAKI,MAIhD,OAFAvB,EAAQwa,SAAWA,EACnBxa,EAAQxS,KAAOA,EACRwS,CACX,CACHqmB,6BAA6B74B,GACtB,OAAO2T,KAAKwlB,uBAAuBxlB,KAAKof,mBAAmBpvB,GAAI3D,EACnE,CACH84B,0BAA0B/kB,EAAO/T,GAC1B,OAAO2T,KAAKwlB,uBAAuBxlB,KAAKqf,gBAAgBrvB,GAAI3D,EAAM+T,EACtE,CACHolB,uBAAuBC,EAAap5B,EAAO,UAAW+T,GAC/C,MAAMiZ,EAAkB,WAAThtB,EACTq5B,EAAQ1lB,KAAKue,gBACboH,EAAWF,EAAc,IAAMp5B,EAC/B6xB,EAASwH,EAAMC,GACfC,EAAU5lB,KAAKgf,sBAAuB,OAAQ5e,GACpD,GAAI8d,EACA,OAAOD,EAAiBC,EAAQ0H,GAEpC,MAAM7L,EAAS/Z,KAAKzT,MAAMwtB,OACpBgI,EAAYhI,EAAO8L,wBAAwB7lB,KAAKye,MAAOgH,GACvDK,EAAWzM,EAAS,CACtB,GAAGoM,SACH,QACAA,EACA,IACA,CACAA,EACA,IAEExD,EAASlI,EAAOmI,gBAAgBliB,KAAK8f,aAAciC,GACnDgE,EAAQ14B,OAAOC,KAAK,EAAA8sB,EAAS0K,SAASW,IAEtC5iB,EAASkX,EAAOiM,oBAAoB/D,EAAQ8D,GADlC,IAAI/lB,KAAKoiB,WAAWhiB,EAAOiZ,EAAQhtB,IACey5B,GAKlE,OAJIjjB,EAAO8X,UACP9X,EAAO8X,QAAUiL,EACjBF,EAAMC,GAAYt4B,OAAO44B,OAAOhI,EAAiBpb,EAAQ+iB,KAEtD/iB,CACX,CACHqjB,mBAAmB9lB,EAAO7L,EAAY8kB,GAC/B,MAAM9sB,EAAQyT,KAAKzT,MACbm5B,EAAQ1lB,KAAKue,gBACboH,EAAW,aAAapxB,IACxB2pB,EAASwH,EAAMC,GACrB,GAAIzH,EACA,OAAOA,EAEX,IAAIpxB,EACJ,IAAgC,IAA5BP,EAAMO,QAAQutB,UAAqB,CACnC,MAAMN,EAAS/Z,KAAKzT,MAAMwtB,OACpBgI,EAAYhI,EAAOoM,0BAA0BnmB,KAAKye,MAAOlqB,GACzD0tB,EAASlI,EAAOmI,gBAAgBliB,KAAK8f,aAAciC,GACzDj1B,EAAUitB,EAAOoI,eAAeF,EAAQjiB,KAAKoiB,WAAWhiB,EAAOiZ,EAAQ9kB,GAC3E,CACA,MAAMumB,EAAa,IAAIhB,EAAWvtB,EAAOO,GAAWA,EAAQguB,YAI5D,OAHIhuB,GAAWA,EAAQs5B,aACnBV,EAAMC,GAAYt4B,OAAO44B,OAAOnL,IAE7BA,CACX,CACHuL,iBAAiBv5B,GACV,GAAKA,EAAQ6tB,QAGb,OAAO3a,KAAK6e,iBAAmB7e,KAAK6e,eAAiBxxB,OAAOgR,OAAO,CAAC,EAAGvR,GAC3E,CACHw5B,eAAej6B,EAAMk6B,GACd,OAAQA,GAAiBvI,EAAmB3xB,IAAS2T,KAAKzT,MAAMi6B,mBACpE,CACHC,kBAAkBzrB,EAAO3O,GAClB,MAAMq6B,EAAY1mB,KAAKmlB,0BAA0BnqB,EAAO3O,GAClDs6B,EAA0B3mB,KAAK6e,eAC/B0H,EAAgBvmB,KAAKqmB,iBAAiBK,GACtCJ,EAAiBtmB,KAAKsmB,eAAej6B,EAAMk6B,IAAkBA,IAAkBI,EAErF,OADA3mB,KAAK4mB,oBAAoBL,EAAel6B,EAAMq6B,GACvC,CACHH,gBACAD,iBAER,CACHO,cAActjB,EAASnD,EAAOU,EAAYzU,GAC/B2xB,EAAmB3xB,GACnBgB,OAAOgR,OAAOkF,EAASzC,GAEvBd,KAAKkmB,mBAAmB9lB,EAAO/T,GAAMuI,OAAO2O,EAASzC,EAE7D,CACH8lB,oBAAoBL,EAAel6B,EAAMquB,GAC9B6L,IAAkBvI,EAAmB3xB,IACrC2T,KAAKkmB,wBAAmB15B,EAAWH,GAAMuI,OAAO2xB,EAAe7L,EAEvE,CACHoM,UAAUvjB,EAASnD,EAAO/T,EAAMgtB,GACzB9V,EAAQ8V,OAASA,EACjB,MAAMvsB,EAAUkT,KAAKilB,SAAS7kB,EAAOiZ,GACrCrZ,KAAKkmB,mBAAmB9lB,EAAO/T,EAAMgtB,GAAQzkB,OAAO2O,EAAS,CACzDzW,SAAUusB,GAAUrZ,KAAKqmB,iBAAiBv5B,IAAYA,GAE9D,CACAi6B,iBAAiBxjB,EAASyY,EAAc5b,GACpCJ,KAAK8mB,UAAUvjB,EAASnD,EAAO,UAAU,EAC7C,CACA4mB,cAAczjB,EAASyY,EAAc5b,GACjCJ,KAAK8mB,UAAUvjB,EAASnD,EAAO,UAAU,EAC7C,CACH6mB,2BACO,MAAM1jB,EAAUvD,KAAKid,YAAY4C,QAC7Btc,GACAvD,KAAK8mB,UAAUvjB,OAAS/W,EAAW,UAAU,EAErD,CACH06B,wBACO,MAAM3jB,EAAUvD,KAAKid,YAAY4C,QAC7Btc,GACAvD,KAAK8mB,UAAUvjB,OAAS/W,EAAW,UAAU,EAErD,CACHs1B,gBAAgBH,GACT,MAAM3N,EAAOhU,KAAK2e,MACZmG,EAAW9kB,KAAKid,YAAYjJ,KAClC,IAAK,MAAOxU,EAAQ2nB,EAAMC,KAASpnB,KAAKmf,UACpCnf,KAAKR,GAAQ2nB,EAAMC,GAEvBpnB,KAAKmf,UAAY,GACjB,MAAMkI,EAAUvC,EAASt3B,OACnB85B,EAAUtT,EAAKxmB,OACfmjB,EAAQnhB,KAAKL,IAAIm4B,EAASD,GAC5B1W,GACA3Q,KAAKtP,MAAM,EAAGigB,GAEd2W,EAAUD,EACVrnB,KAAKunB,gBAAgBF,EAASC,EAAUD,EAAS1F,GAC1C2F,EAAUD,GACjBrnB,KAAKwnB,gBAAgBF,EAASD,EAAUC,EAEhD,CACHC,gBAAgBvsB,EAAO2V,EAAOgR,GAAmB,GAC1C,MAAMxF,EAAOnc,KAAKid,YACZjJ,EAAOmI,EAAKnI,KACZ9M,EAAMlM,EAAQ2V,EACpB,IAAIpjB,EACJ,MAAMk6B,EAAQC,IAEV,IADAA,EAAIl6B,QAAUmjB,EACVpjB,EAAIm6B,EAAIl6B,OAAS,EAAGD,GAAK2Z,EAAK3Z,IAC9Bm6B,EAAIn6B,GAAKm6B,EAAIn6B,EAAIojB,EACrB,EAGJ,IADA8W,EAAKzT,GACDzmB,EAAIyN,EAAOzN,EAAI2Z,IAAO3Z,EACtBymB,EAAKzmB,GAAK,IAAIyS,KAAKqf,gBAEnBrf,KAAK0e,UACL+I,EAAKtL,EAAK4B,SAEd/d,KAAKtP,MAAMsK,EAAO2V,GACdgR,GACA3hB,KAAK2nB,eAAe3T,EAAMhZ,EAAO2V,EAAO,QAEhD,CACAgX,eAAepkB,EAASvI,EAAO2V,EAAOtkB,GAAO,CAChDm7B,gBAAgBxsB,EAAO2V,GAChB,MAAMwL,EAAOnc,KAAKid,YAClB,GAAIjd,KAAK0e,SAAU,CACf,MAAMkJ,EAAUzL,EAAK4B,QAAQvT,OAAOxP,EAAO2V,GACvCwL,EAAKqD,UACL1B,EAAY3B,EAAMyL,EAE1B,CACAzL,EAAKnI,KAAKxJ,OAAOxP,EAAO2V,EAC5B,CACHkX,MAAMzrB,GACC,GAAI4D,KAAK0e,SACL1e,KAAKmf,UAAUhxB,KAAKiO,OACjB,CACH,MAAOoD,EAAQ2nB,EAAMC,GAAQhrB,EAC7B4D,KAAKR,GAAQ2nB,EAAMC,EACvB,CACApnB,KAAKzT,MAAMu7B,aAAa35B,KAAK,CACzB6R,KAAKI,SACFhE,GAEX,CACA2rB,cACI,MAAMpX,EAAQ1Q,UAAUzS,OACxBwS,KAAK6nB,MAAM,CACP,kBACA7nB,KAAK8f,aAAa9L,KAAKxmB,OAASmjB,EAChCA,GAER,CACAqX,aACIhoB,KAAK6nB,MAAM,CACP,kBACA7nB,KAAKid,YAAYjJ,KAAKxmB,OAAS,EAC/B,GAER,CACAy6B,eACIjoB,KAAK6nB,MAAM,CACP,kBACA,EACA,GAER,CACAK,cAAcltB,EAAO2V,GACbA,GACA3Q,KAAK6nB,MAAM,CACP,kBACA7sB,EACA2V,IAGR,MAAMwX,EAAWloB,UAAUzS,OAAS,EAChC26B,GACAnoB,KAAK6nB,MAAM,CACP,kBACA7sB,EACAmtB,GAGZ,CACAC,iBACIpoB,KAAK6nB,MAAM,CACP,kBACA,EACA5nB,UAAUzS,QAElB,EAcH,SAAS66B,EAAqBlM,GAC3B,MAAMjvB,EAAQivB,EAAKgB,OACbta,EAbV,SAA2B3V,EAAOgH,GAC9B,IAAKhH,EAAMo7B,OAAOC,KAAM,CACpB,MAAMC,EAAet7B,EAAM2vB,wBAAwB3oB,GACnD,IAAI2O,EAAS,GACb,IAAI,IAAItV,EAAI,EAAGquB,EAAO4M,EAAah7B,OAAQD,EAAIquB,EAAMruB,IACjDsV,EAASA,EAAOwI,OAAOmd,EAAaj7B,GAAGwvB,WAAWqH,mBAAmBl3B,IAEzEA,EAAMo7B,OAAOC,MAAO,IAAAE,GAAa5lB,EAAOF,MAAK,CAACG,EAAGC,IAAID,EAAIC,IAC7D,CACA,OAAO7V,EAAMo7B,OAAOC,IACxB,CAGmBG,CAAkBx7B,EAAOivB,EAAKjoB,MAC7C,IACI3G,EAAGquB,EAAM+M,EAAMnG,EADfrzB,EAAMjC,EAAM07B,QAEhB,MAAMC,EAAmB,KACR,QAATF,IAA4B,QAAVA,KAGlB,OAAQnG,KACRrzB,EAAMK,KAAKL,IAAIA,EAAKK,KAAK8D,IAAIq1B,EAAOnG,IAASrzB,IAEjDqzB,EAAOmG,EAAI,EAEf,IAAIp7B,EAAI,EAAGquB,EAAO/Y,EAAOrV,OAAQD,EAAIquB,IAAQruB,EACzCo7B,EAAOz7B,EAAM4E,iBAAiB+Q,EAAOtV,IACrCs7B,IAGJ,IADArG,OAAOh2B,EACHe,EAAI,EAAGquB,EAAO1uB,EAAM47B,MAAMt7B,OAAQD,EAAIquB,IAAQruB,EAC9Co7B,EAAOz7B,EAAM67B,gBAAgBx7B,GAC7Bs7B,IAEJ,OAAO15B,CACX,CA0DA,SAAS65B,EAAWC,EAAO/X,EAAMyL,EAAQpvB,GAMrC,OALI,OAAQ07B,GAtBhB,SAAuBA,EAAO/X,EAAMyL,EAAQpvB,GACxC,MAAM27B,EAAavM,EAAOjsB,MAAMu4B,EAAM,GAAI17B,GACpC47B,EAAWxM,EAAOjsB,MAAMu4B,EAAM,GAAI17B,GAClC4B,EAAMK,KAAKL,IAAI+5B,EAAYC,GAC3Bj6B,EAAMM,KAAKN,IAAIg6B,EAAYC,GACjC,IAAIC,EAAWj6B,EACXk6B,EAASn6B,EACTM,KAAK8D,IAAInE,GAAOK,KAAK8D,IAAIpE,KACzBk6B,EAAWl6B,EACXm6B,EAASl6B,GAEb+hB,EAAKyL,EAAO3uB,MAAQq7B,EACpBnY,EAAKoY,QAAU,CACXF,WACAC,SACAruB,MAAOkuB,EACPhiB,IAAKiiB,EACLh6B,MACAD,MAER,CAGQq6B,CAAcN,EAAO/X,EAAMyL,EAAQpvB,GAEnC2jB,EAAKyL,EAAO3uB,MAAQ2uB,EAAOjsB,MAAMu4B,EAAO17B,GAErC2jB,CACX,CACA,SAASsY,EAAsBrN,EAAMnI,EAAMhZ,EAAO2V,GAC9C,MAAMwM,EAAShB,EAAKgB,OACdR,EAASR,EAAKQ,OACdkG,EAAS1F,EAAO/qB,YAChB0wB,EAAc3F,IAAWR,EACzBK,EAAS,GACf,IAAIzvB,EAAGquB,EAAM1K,EAAM+X,EACnB,IAAI17B,EAAIyN,EAAO4gB,EAAO5gB,EAAQ2V,EAAOpjB,EAAIquB,IAAQruB,EAC7C07B,EAAQjV,EAAKzmB,GACb2jB,EAAO,CAAC,EACRA,EAAKiM,EAAOnvB,MAAQ80B,GAAe3F,EAAOzsB,MAAMmyB,EAAOt1B,GAAIA,GAC3DyvB,EAAO7uB,KAAK66B,EAAWC,EAAO/X,EAAMyL,EAAQpvB,IAEhD,OAAOyvB,CACX,CACA,SAASyM,EAAWC,GAChB,OAAOA,QAA8Bl9B,IAApBk9B,EAAON,eAA4C58B,IAAlBk9B,EAAOL,MAC7D,CAiCA,SAASM,EAAiB7oB,EAAYhU,EAAS8S,EAAOQ,GAClD,IAAIwpB,EAAO98B,EAAQ+8B,cACnB,MAAMlQ,EAAM,CAAC,EACb,IAAKiQ,EAED,YADA9oB,EAAW+oB,cAAgBlQ,GAG/B,IAAa,IAATiQ,EAOA,YANA9oB,EAAW+oB,cAAgB,CACvBp8B,KAAK,EACLG,OAAO,EACPF,QAAQ,EACRC,MAAM,IAId,MAAM,MAAEqN,EAAM,IAAEkM,EAAI,QAAEqU,EAAQ,IAAE9tB,EAAI,OAAEC,GA1C1C,SAAqBoT,GACjB,IAAIya,EAASvgB,EAAOkM,EAAKzZ,EAAKC,EAiB9B,OAhBIoT,EAAWgpB,YACXvO,EAAUza,EAAWD,KAAOC,EAAWnU,EACvCqO,EAAQ,OACRkM,EAAM,UAENqU,EAAUza,EAAWD,KAAOC,EAAWlU,EACvCoO,EAAQ,SACRkM,EAAM,OAENqU,GACA9tB,EAAM,MACNC,EAAS,UAETD,EAAM,QACNC,EAAS,OAEN,CACHsN,QACAkM,MACAqU,UACA9tB,MACAC,SAER,CAiBsDq8B,CAAYjpB,GACjD,WAAT8oB,GAAqBhqB,IACrBkB,EAAWkpB,oBAAqB,GAC3BpqB,EAAM6d,MAAQ,KAAOrd,EACtBwpB,EAAOn8B,GACCmS,EAAM8d,SAAW,KAAOtd,EAChCwpB,EAAOl8B,GAEPisB,EAAIsQ,EAAUv8B,EAAQsN,EAAOkM,EAAKqU,KAAY,EAC9CqO,EAAOn8B,IAGfksB,EAAIsQ,EAAUL,EAAM5uB,EAAOkM,EAAKqU,KAAY,EAC5Cza,EAAW+oB,cAAgBlQ,CAC/B,CACA,SAASsQ,EAAUL,EAAM9mB,EAAGC,EAAGwY,GAS/B,IAAc2O,EAAMr3B,EAAIs3B,EAFpB,OANI5O,GAQgB4O,EAPKpnB,EACrB6mB,EAAOQ,EADPR,GAOMM,EAPMN,MAOA/2B,EAPMiQ,GAQDqnB,EAAKD,IAASC,EAAKt3B,EAAKq3B,EAPnBnnB,EAAGD,IAEzB8mB,EAAOQ,EAASR,EAAM9mB,EAAGC,GAEtB6mB,CACX,CAIA,SAASQ,EAASn6B,EAAG+K,EAAOkM,GACxB,MAAa,UAANjX,EAAgB+K,EAAc,QAAN/K,EAAciX,EAAMjX,CACvD,CACA,SAASo6B,EAAiBvpB,GAAY,cAAEwpB,GAAkBC,GACtDzpB,EAAWwpB,cAAkC,SAAlBA,EAAqC,IAAVC,EAAc,IAAO,EAAID,CACnF,CAuaA,MAAME,UAA2BpM,EAC7BC,UAAY,WACfA,gBAAkB,CACXe,oBAAoB,EACpBC,gBAAiB,MACjBhF,UAAW,CACPoQ,eAAe,EACfC,cAAc,GAElB5P,WAAY,CACR6P,QAAS,CACLz2B,KAAM,SACN4M,WAAY,CACR,gBACA,WACA,cACA,cACA,aACA,IACA,IACA,SACA,cACA,aAIZ8pB,OAAQ,MACRrjB,SAAU,EACVsjB,cAAe,IACfC,OAAQ,OACRC,QAAS,EACTzK,UAAW,KAEfjC,mBAAqB,CACjB2M,YAAc9tB,GAAgB,YAATA,EACrB+tB,WAAa/tB,GAAgB,YAATA,IAAuBA,EAAKguB,WAAW,gBAAkBhuB,EAAKguB,WAAW,oBAEpG7M,iBAAmB,CACZ8M,YAAa,EACbC,QAAS,CACLC,OAAQ,CACJxI,OAAQ,CACJyI,eAAgB/+B,GACZ,MAAMynB,EAAOznB,EAAMynB,KACnB,GAAIA,EAAK6O,OAAOr1B,QAAUwmB,EAAK+M,SAASvzB,OAAQ,CAC5C,MAAQq1B,QAAQ,WAAE0I,EAAW,MAAE1T,IAActrB,EAAM8+B,OAAOv+B,QAC1D,OAAOknB,EAAK6O,OAAO2I,KAAI,CAACjH,EAAOh3B,KAC3B,MACM8f,EADO9gB,EAAMy0B,eAAe,GACfjE,WAAWkI,SAAS13B,GACvC,MAAO,CACHk+B,KAAMlH,EACNnqB,UAAWiT,EAAMhT,gBACjBI,YAAa4S,EAAM3S,YACnBgxB,UAAW7T,EACXrd,UAAW6S,EAAM9S,YACjBgxB,WAAYA,EACZ9H,QAASl3B,EAAMo/B,kBAAkBp+B,GACjC6S,MAAO7S,EACV,GAET,CACA,MAAO,EACX,GAEJq+B,QAAS3yB,EAAG4yB,EAAYR,GACpBA,EAAO9+B,MAAMu/B,qBAAqBD,EAAWzrB,OAC7CirB,EAAO9+B,MAAMqI,QACjB,KAIZsM,YAAY3U,EAAOyvB,GACf+P,MAAMx/B,EAAOyvB,GACbhc,KAAKgf,qBAAsB,EAC3Bhf,KAAKgsB,iBAAcx/B,EACnBwT,KAAKisB,iBAAcz/B,EACnBwT,KAAKksB,aAAU1/B,EACfwT,KAAKmsB,aAAU3/B,CACnB,CACA+yB,aAAc,CACjB7uB,MAAMsK,EAAO2V,GACN,MAAMqD,EAAOhU,KAAK8f,aAAa9L,KACzBmI,EAAOnc,KAAKid,YAClB,IAAsB,IAAlBjd,KAAK0e,SACLvC,EAAK4B,QAAU/J,MACZ,CACH,IAKIzmB,EAAGquB,EALHwQ,EAAU7+B,IAAKymB,EAAKzmB,GACxB,IAAI,IAAAA,GAASymB,EAAKhZ,IAAS,CACvB,MAAM,IAAE/O,EAAK,SAAa+T,KAAK0e,SAC/B0N,EAAU7+B,KAAK,OAAiBymB,EAAKzmB,GAAItB,EAC7C,CAEA,IAAIsB,EAAIyN,EAAO4gB,EAAO5gB,EAAQ2V,EAAOpjB,EAAIquB,IAAQruB,EAC7C4uB,EAAK4B,QAAQxwB,GAAK6+B,EAAO7+B,EAEjC,CACJ,CACH8+B,eACO,OAAO,IAAAzf,GAAU5M,KAAKlT,QAAQya,SAAW,GAC7C,CACH+kB,oBACO,OAAO,IAAA1f,GAAU5M,KAAKlT,QAAQ+9B,cAClC,CACH0B,sBACO,IAAIp9B,EAAM,EAAAq9B,EACNt9B,GAAO,EAAAs9B,EACX,IAAI,IAAIj/B,EAAI,EAAGA,EAAIyS,KAAKzT,MAAMynB,KAAK+M,SAASvzB,SAAUD,EAClD,GAAIyS,KAAKzT,MAAMkgC,iBAAiBl/B,IAAMyS,KAAKzT,MAAMy0B,eAAezzB,GAAG2G,OAAS8L,KAAKye,MAAO,CACpF,MAAM1B,EAAa/c,KAAKzT,MAAMy0B,eAAezzB,GAAGwvB,WAC1CxV,EAAWwV,EAAWsP,eACtBxB,EAAgB9N,EAAWuP,oBACjCn9B,EAAMK,KAAKL,IAAIA,EAAKoY,GACpBrY,EAAMM,KAAKN,IAAIA,EAAKqY,EAAWsjB,EACnC,CAEJ,MAAO,CACHtjB,SAAUpY,EACV07B,cAAe37B,EAAMC,EAE7B,CACHyF,OAAOvI,GACA,MAAME,EAAQyT,KAAKzT,OACb,UAAE+H,GAAe/H,EACjB4vB,EAAOnc,KAAKid,YACZyP,EAAOvQ,EAAKnI,KACZ+W,EAAU/qB,KAAK2sB,oBAAsB3sB,KAAK4sB,aAAaF,GAAQ1sB,KAAKlT,QAAQi+B,QAC5E8B,EAAUr9B,KAAKN,KAAKM,KAAKL,IAAImF,EAAUpB,MAAOoB,EAAUnB,QAAU43B,GAAW,EAAG,GAChFH,EAASp7B,KAAKL,KAAI,OAAa6Q,KAAKlT,QAAQ89B,OAAQiC,GAAU,GAC9DC,EAAc9sB,KAAK+sB,eAAe/sB,KAAKI,QACvC,cAAEyqB,EAAc,SAAEtjB,GAAcvH,KAAKusB,uBACrC,OAAES,EAAO,OAAEC,EAAO,QAAEf,EAAQ,QAAEC,GAhK5C,SAA2B5kB,EAAUsjB,EAAeD,GAChD,IAAIoC,EAAS,EACTC,EAAS,EACTf,EAAU,EACVC,EAAU,EACd,GAAItB,EAAgB,EAAA2B,EAAK,CACrB,MAAMU,EAAa3lB,EACb4lB,EAAWD,EAAarC,EACxBuC,EAAS59B,KAAK69B,IAAIH,GAClBI,EAAS99B,KAAK+9B,IAAIL,GAClBM,EAAOh+B,KAAK69B,IAAIF,GAChBM,EAAOj+B,KAAK+9B,IAAIJ,GAChBO,EAAU,CAACjnB,EAAO3D,EAAGC,KAAI,OAAc0D,EAAOymB,EAAYC,GAAU,GAAQ,EAAI39B,KAAKN,IAAI4T,EAAGA,EAAI8nB,EAAQ7nB,EAAGA,EAAI6nB,GAC/G+C,EAAU,CAAClnB,EAAO3D,EAAGC,KAAI,OAAc0D,EAAOymB,EAAYC,GAAU,IAAS,EAAI39B,KAAKL,IAAI2T,EAAGA,EAAI8nB,EAAQ7nB,EAAGA,EAAI6nB,GAChHgD,EAAOF,EAAQ,EAAGN,EAAQI,GAC1BK,EAAOH,EAAQ,EAAAI,EAASR,EAAQG,GAChCM,EAAOJ,EAAQ,EAAAK,EAAIZ,EAAQI,GAC3BS,EAAON,EAAQ,EAAAK,EAAK,EAAAF,EAASR,EAAQG,GAC3CT,GAAUY,EAAOG,GAAQ,EACzBd,GAAUY,EAAOI,GAAQ,EACzB/B,IAAY0B,EAAOG,GAAQ,EAC3B5B,IAAY0B,EAAOI,GAAQ,CAC/B,CACA,MAAO,CACHjB,SACAC,SACAf,UACAC,UAER,CAmIyD+B,CAAkB3mB,EAAUsjB,EAAeD,GACtFuD,GAAY75B,EAAUpB,MAAQ63B,GAAWiC,EACzCoB,GAAa95B,EAAUnB,OAAS43B,GAAWkC,EAC3CoB,EAAY7+B,KAAKN,IAAIM,KAAKL,IAAIg/B,EAAUC,GAAa,EAAG,GACxDnC,GAAc,OAAYjsB,KAAKlT,QAAQg+B,OAAQuD,GAE/CC,GAAgBrC,EADFz8B,KAAKN,IAAI+8B,EAAcrB,EAAQ,IACA5qB,KAAKuuB,gCACxDvuB,KAAKksB,QAAUA,EAAUD,EACzBjsB,KAAKmsB,QAAUA,EAAUF,EACzB9P,EAAKqS,MAAQxuB,KAAKyuB,iBAClBzuB,KAAKisB,YAAcA,EAAcqC,EAAetuB,KAAK0uB,qBAAqB1uB,KAAKI,OAC/EJ,KAAKgsB,YAAcx8B,KAAKN,IAAI8Q,KAAKisB,YAAcqC,EAAexB,EAAa,GAC3E9sB,KAAK2nB,eAAe+E,EAAM,EAAGA,EAAKl/B,OAAQnB,EAC9C,CACHsiC,eAAephC,EAAGukB,GACX,MAAMjmB,EAAOmU,KAAKlT,QACZqvB,EAAOnc,KAAKid,YACZ4N,EAAgB7qB,KAAKssB,oBAC3B,OAAIxa,GAASjmB,EAAKwuB,UAAUoQ,gBAAkBzqB,KAAKzT,MAAMo/B,kBAAkBp+B,IAA0B,OAApB4uB,EAAK4B,QAAQxwB,IAAe4uB,EAAKnI,KAAKzmB,GAAGk2B,OAC/G,EAEJzjB,KAAK4uB,uBAAuBzS,EAAK4B,QAAQxwB,GAAKs9B,EAAgB,EAAA2B,EACzE,CACA7E,eAAe+E,EAAM1xB,EAAO2V,EAAOtkB,GAC/B,MAAMylB,EAAiB,UAATzlB,EACRE,EAAQyT,KAAKzT,MACb+H,EAAY/H,EAAM+H,UAElBu6B,EADOtiC,EAAMO,QACQutB,UACrByU,GAAWx6B,EAAU3G,KAAO2G,EAAU1G,OAAS,EAC/CmhC,GAAWz6B,EAAU7G,IAAM6G,EAAU5G,QAAU,EAC/Cg9B,EAAe5Y,GAAS+c,EAAcnE,aACtCsB,EAActB,EAAe,EAAI1qB,KAAKgsB,YACtCC,EAAcvB,EAAe,EAAI1qB,KAAKisB,aACtC,cAAE1F,EAAc,eAAED,GAAoBtmB,KAAKymB,kBAAkBzrB,EAAO3O,GAC1E,IACIkB,EADA2/B,EAAaltB,KAAKqsB,eAEtB,IAAI9+B,EAAI,EAAGA,EAAIyN,IAASzN,EACpB2/B,GAAcltB,KAAK2uB,eAAephC,EAAGukB,GAEzC,IAAIvkB,EAAIyN,EAAOzN,EAAIyN,EAAQ2V,IAASpjB,EAAE,CAClC,MAAMs9B,EAAgB7qB,KAAK2uB,eAAephC,EAAGukB,GACvCkd,EAAMtC,EAAKn/B,GACXuT,EAAa,CACfnU,EAAGmiC,EAAU9uB,KAAKksB,QAClBt/B,EAAGmiC,EAAU/uB,KAAKmsB,QAClBe,aACAC,SAAUD,EAAarC,EACvBA,gBACAoB,cACAD,eAEA1F,IACAxlB,EAAWhU,QAAUy5B,GAAiBvmB,KAAKmlB,0BAA0B53B,EAAGyhC,EAAI3V,OAAS,SAAWhtB,IAEpG6gC,GAAcrC,EACd7qB,KAAK6mB,cAAcmI,EAAKzhC,EAAGuT,EAAYzU,EAC3C,CACJ,CACAoiC,iBACI,MAAMtS,EAAOnc,KAAKid,YACZgS,EAAW9S,EAAKnI,KACtB,IACIzmB,EADAihC,EAAQ,EAEZ,IAAIjhC,EAAI,EAAGA,EAAI0hC,EAASzhC,OAAQD,IAAI,CAChC,MAAM6gB,EAAQ+N,EAAK4B,QAAQxwB,GACb,OAAV6gB,GAAmBxd,MAAMwd,KAAUpO,KAAKzT,MAAMo/B,kBAAkBp+B,IAAO0hC,EAAS1hC,GAAGk2B,SACnF+K,GAASh/B,KAAK8D,IAAI8a,GAE1B,CACA,OAAOogB,CACX,CACAI,uBAAuBxgB,GACnB,MAAMogB,EAAQxuB,KAAKid,YAAYuR,MAC/B,OAAIA,EAAQ,IAAM59B,MAAMwd,GACb,EAAAoe,GAAOh9B,KAAK8D,IAAI8a,GAASogB,GAE7B,CACX,CACAlK,iBAAiBlkB,GACb,MAAM+b,EAAOnc,KAAKid,YACZ1wB,EAAQyT,KAAKzT,MACbs2B,EAASt2B,EAAMynB,KAAK6O,QAAU,GAC9BzU,GAAQ,OAAa+N,EAAK4B,QAAQ3d,GAAQ7T,EAAMO,QAAQoiC,QAC9D,MAAO,CACH3K,MAAO1B,EAAOziB,IAAU,GACxBgO,QAER,CACAue,kBAAkBD,GACd,IAAIx9B,EAAM,EACV,MAAM3C,EAAQyT,KAAKzT,MACnB,IAAIgB,EAAGquB,EAAMO,EAAMY,EAAYjwB,EAC/B,IAAK4/B,EACD,IAAIn/B,EAAI,EAAGquB,EAAOrvB,EAAMynB,KAAK+M,SAASvzB,OAAQD,EAAIquB,IAAQruB,EACtD,GAAIhB,EAAMkgC,iBAAiBl/B,GAAI,CAC3B4uB,EAAO5vB,EAAMy0B,eAAezzB,GAC5Bm/B,EAAOvQ,EAAKnI,KACZ+I,EAAaZ,EAAKY,WAClB,KACJ,CAGR,IAAK2P,EACD,OAAO,EAEX,IAAIn/B,EAAI,EAAGquB,EAAO8Q,EAAKl/B,OAAQD,EAAIquB,IAAQruB,EACvCT,EAAUiwB,EAAWoI,0BAA0B53B,GACnB,UAAxBT,EAAQqiC,cACRjgC,EAAMM,KAAKN,IAAIA,EAAKpC,EAAQyN,aAAe,EAAGzN,EAAQsiC,kBAAoB,IAGlF,OAAOlgC,CACX,CACA09B,aAAaF,GACT,IAAIx9B,EAAM,EACV,IAAI,IAAI3B,EAAI,EAAGquB,EAAO8Q,EAAKl/B,OAAQD,EAAIquB,IAAQruB,EAAE,CAC7C,MAAMT,EAAUkT,KAAKmlB,0BAA0B53B,GAC/C2B,EAAMM,KAAKN,IAAIA,EAAKpC,EAAQ2D,QAAU,EAAG3D,EAAQuiC,aAAe,EACpE,CACA,OAAOngC,CACX,CACHw/B,qBAAqB1S,GACd,IAAIsT,EAAmB,EACvB,IAAI,IAAI/hC,EAAI,EAAGA,EAAIyuB,IAAgBzuB,EAC3ByS,KAAKzT,MAAMkgC,iBAAiBl/B,KAC5B+hC,GAAoBtvB,KAAK+sB,eAAex/B,IAGhD,OAAO+hC,CACX,CACHvC,eAAe/Q,GACR,OAAOxsB,KAAKN,KAAI,IAAAe,GAAe+P,KAAKzT,MAAMynB,KAAK+M,SAAS/E,GAAcuT,OAAQ,GAAI,EACtF,CACHhB,gCACO,OAAOvuB,KAAK0uB,qBAAqB1uB,KAAKzT,MAAMynB,KAAK+M,SAASvzB,SAAW,CACzE,EA6GJ,MAAMgiC,UAA4BpR,EAC9BC,UAAY,YACfA,gBAAkB,CACXgB,gBAAiB,MACjBhF,UAAW,CACPoQ,eAAe,EACfC,cAAc,GAElB5P,WAAY,CACR6P,QAAS,CACLz2B,KAAM,SACN4M,WAAY,CACR,IACA,IACA,aACA,WACA,cACA,iBAIZwf,UAAW,IACX4M,WAAY,GAEnB7O,iBAAmB,CACZ8M,YAAa,EACbC,QAAS,CACLC,OAAQ,CACJxI,OAAQ,CACJyI,eAAgB/+B,GACZ,MAAMynB,EAAOznB,EAAMynB,KACnB,GAAIA,EAAK6O,OAAOr1B,QAAUwmB,EAAK+M,SAASvzB,OAAQ,CAC5C,MAAQq1B,QAAQ,WAAE0I,EAAW,MAAE1T,IAActrB,EAAM8+B,OAAOv+B,QAC1D,OAAOknB,EAAK6O,OAAO2I,KAAI,CAACjH,EAAOh3B,KAC3B,MACM8f,EADO9gB,EAAMy0B,eAAe,GACfjE,WAAWkI,SAAS13B,GACvC,MAAO,CACHk+B,KAAMlH,EACNnqB,UAAWiT,EAAMhT,gBACjBI,YAAa4S,EAAM3S,YACnBgxB,UAAW7T,EACXrd,UAAW6S,EAAM9S,YACjBgxB,WAAYA,EACZ9H,QAASl3B,EAAMo/B,kBAAkBp+B,GACjC6S,MAAO7S,EACV,GAET,CACA,MAAO,EACX,GAEJq+B,QAAS3yB,EAAG4yB,EAAYR,GACpBA,EAAO9+B,MAAMu/B,qBAAqBD,EAAWzrB,OAC7CirB,EAAO9+B,MAAMqI,QACjB,IAGRzH,OAAQ,CACJgpB,EAAG,CACCjiB,KAAM,eACNu7B,WAAY,CACRC,SAAS,GAEbC,aAAa,EACbC,KAAM,CACFC,UAAU,GAEdC,YAAa,CACTJ,SAAS,GAEbxC,WAAY,KAIxBhsB,YAAY3U,EAAOyvB,GACf+P,MAAMx/B,EAAOyvB,GACbhc,KAAKgsB,iBAAcx/B,EACnBwT,KAAKisB,iBAAcz/B,CACvB,CACA83B,iBAAiBlkB,GACb,MAAM+b,EAAOnc,KAAKid,YACZ1wB,EAAQyT,KAAKzT,MACbs2B,EAASt2B,EAAMynB,KAAK6O,QAAU,GAC9BzU,GAAQ,OAAa+N,EAAK4B,QAAQ3d,GAAO+V,EAAG5pB,EAAMO,QAAQoiC,QAChE,MAAO,CACH3K,MAAO1B,EAAOziB,IAAU,GACxBgO,QAER,CACAsU,gBAAgBvG,EAAMnI,EAAMhZ,EAAO2V,GAC/B,OAAO,IAA4Bof,KAAK/vB,KAAjC,CAAuCmc,EAAMnI,EAAMhZ,EAAO2V,EACrE,CACA/b,OAAOvI,GACH,MAAMqgC,EAAO1sB,KAAKid,YAAYjJ,KAC9BhU,KAAKgwB,gBACLhwB,KAAK2nB,eAAe+E,EAAM,EAAGA,EAAKl/B,OAAQnB,EAC9C,CACHi3B,YACO,MAAMnH,EAAOnc,KAAKid,YACZhuB,EAAQ,CACVE,IAAKw0B,OAAOC,kBACZ10B,IAAKy0B,OAAOE,mBAahB,OAXA1H,EAAKnI,KAAK1U,SAAQ,CAACiE,EAASnD,KACxB,MAAM4c,EAAShd,KAAKijB,UAAU7iB,GAAO+V,GAChCvlB,MAAMosB,IAAWhd,KAAKzT,MAAMo/B,kBAAkBvrB,KAC3C4c,EAAS/tB,EAAME,MACfF,EAAME,IAAM6tB,GAEZA,EAAS/tB,EAAMC,MACfD,EAAMC,IAAM8tB,GAEpB,IAEG/tB,CACX,CACH+gC,gBACO,MAAMzjC,EAAQyT,KAAKzT,MACb+H,EAAY/H,EAAM+H,UAClBzI,EAAOU,EAAMO,QACbmjC,EAAUzgC,KAAKL,IAAImF,EAAU1G,MAAQ0G,EAAU3G,KAAM2G,EAAU5G,OAAS4G,EAAU7G,KAClFw+B,EAAcz8B,KAAKN,IAAI+gC,EAAU,EAAG,GAEpC3B,GAAgBrC,EADFz8B,KAAKN,IAAIrD,EAAKqkC,iBAAmBjE,EAAc,IAAMpgC,EAAKqkC,iBAAmB,EAAG,IACjD3jC,EAAM4jC,yBACzDnwB,KAAKisB,YAAcA,EAAcqC,EAAetuB,KAAKI,MACrDJ,KAAKgsB,YAAchsB,KAAKisB,YAAcqC,CAC1C,CACA3G,eAAe+E,EAAM1xB,EAAO2V,EAAOtkB,GAC/B,MAAMylB,EAAiB,UAATzlB,EACRE,EAAQyT,KAAKzT,MAEbsiC,EADOtiC,EAAMO,QACQutB,UACrBntB,EAAQ8S,KAAKid,YAAY6D,OACzBgO,EAAU5hC,EAAMkjC,QAChBrB,EAAU7hC,EAAMmjC,QAChBC,EAAoBpjC,EAAMqjC,cAAc,GAAK,GAAM,EAAAvC,EACzD,IACIzgC,EADAkZ,EAAQ6pB,EAEZ,MAAME,EAAe,IAAMxwB,KAAKywB,uBAChC,IAAIljC,EAAI,EAAGA,EAAIyN,IAASzN,EACpBkZ,GAASzG,KAAK0wB,cAAcnjC,EAAGlB,EAAMmkC,GAEzC,IAAIjjC,EAAIyN,EAAOzN,EAAIyN,EAAQ2V,EAAOpjB,IAAI,CAClC,MAAMyhC,EAAMtC,EAAKn/B,GACjB,IAAI2/B,EAAazmB,EACb0mB,EAAW1mB,EAAQzG,KAAK0wB,cAAcnjC,EAAGlB,EAAMmkC,GAC/CvE,EAAc1/B,EAAMo/B,kBAAkBp+B,GAAKL,EAAMyjC,8BAA8B3wB,KAAKijB,UAAU11B,GAAG4oB,GAAK,EAC1G1P,EAAQ0mB,EACJrb,IACI+c,EAAcnE,eACduB,EAAc,GAEd4C,EAAcpE,gBACdyC,EAAaC,EAAWmD,IAGhC,MAAMxvB,EAAa,CACfnU,EAAGmiC,EACHliC,EAAGmiC,EACH/C,YAAa,EACbC,cACAiB,aACAC,WACArgC,QAASkT,KAAKmlB,0BAA0B53B,EAAGyhC,EAAI3V,OAAS,SAAWhtB,IAEvE2T,KAAK6mB,cAAcmI,EAAKzhC,EAAGuT,EAAYzU,EAC3C,CACJ,CACAokC,uBACI,MAAMtU,EAAOnc,KAAKid,YAClB,IAAItM,EAAQ,EAMZ,OALAwL,EAAKnI,KAAK1U,SAAQ,CAACiE,EAASnD,MACnBxP,MAAMoP,KAAKijB,UAAU7iB,GAAO+V,IAAMnW,KAAKzT,MAAMo/B,kBAAkBvrB,IAChEuQ,GACJ,IAEGA,CACX,CACH+f,cAActwB,EAAO/T,EAAMmkC,GACpB,OAAOxwB,KAAKzT,MAAMo/B,kBAAkBvrB,IAAS,IAAAwM,GAAU5M,KAAKmlB,0BAA0B/kB,EAAO/T,GAAMoa,OAAS+pB,GAAgB,CAChI,EAgNJ,IAAII,EAA2BvjC,OAAO44B,OAAO,CAC7C4K,UAAW,KACXC,cAnqCA,cAA4B1S,EACxBC,UAAY,MACfA,gBAAkB,CACXe,oBAAoB,EACpBC,gBAAiB,MACjB0R,mBAAoB,GACpBC,cAAe,GACfC,SAAS,EACTnW,WAAY,CACR6P,QAAS,CACLz2B,KAAM,SACN4M,WAAY,CACR,IACA,IACA,OACA,QACA,aAKnBud,iBAAmB,CACZlxB,OAAQ,CACJ+jC,QAAS,CACLh9B,KAAM,WACNzD,QAAQ,EACRm/B,KAAM,CACFn/B,QAAQ,IAGhB0gC,QAAS,CACLj9B,KAAM,SACNy7B,aAAa,KAI5BhN,mBAAmBxG,EAAMnI,EAAMhZ,EAAO2V,GAC/B,OAAO6Y,EAAsBrN,EAAMnI,EAAMhZ,EAAO2V,EACpD,CACH8R,eAAetG,EAAMnI,EAAMhZ,EAAO2V,GAC3B,OAAO6Y,EAAsBrN,EAAMnI,EAAMhZ,EAAO2V,EACpD,CACH+R,gBAAgBvG,EAAMnI,EAAMhZ,EAAO2V,GAC5B,MAAM,OAAEwM,EAAO,OAAER,GAAYR,GACvB,SAAE4G,EAAU,IAAI,SAAEC,EAAU,KAAShjB,KAAK0e,SAC1C0S,EAA2B,MAAhBjU,EAAOnvB,KAAe+0B,EAAWC,EAC5CqO,EAA2B,MAAhB1U,EAAO3uB,KAAe+0B,EAAWC,EAC5ChG,EAAS,GACf,IAAIzvB,EAAGquB,EAAM1K,EAAM9R,EACnB,IAAI7R,EAAIyN,EAAO4gB,EAAO5gB,EAAQ2V,EAAOpjB,EAAIquB,IAAQruB,EAC7C6R,EAAM4U,EAAKzmB,GACX2jB,EAAO,CAAC,EACRA,EAAKiM,EAAOnvB,MAAQmvB,EAAOzsB,OAAM,OAAiB0O,EAAKgyB,GAAW7jC,GAClEyvB,EAAO7uB,KAAK66B,GAAW,OAAiB5pB,EAAKiyB,GAAWngB,EAAMyL,EAAQpvB,IAE1E,OAAOyvB,CACX,CACHmG,sBAAsBl0B,EAAO/B,EAAO8vB,EAAQpd,GACrCmsB,MAAM5I,sBAAsBl0B,EAAO/B,EAAO8vB,EAAQpd,GAClD,MAAM8pB,EAAS1M,EAAOsM,QAClBI,GAAUx8B,IAAU8S,KAAKid,YAAYN,SACrC1tB,EAAME,IAAMK,KAAKL,IAAIF,EAAME,IAAKu6B,EAAOv6B,KACvCF,EAAMC,IAAMM,KAAKN,IAAID,EAAMC,IAAKw6B,EAAOx6B,KAE/C,CACHm1B,iBACO,OAAO,CACX,CACHC,iBAAiBlkB,GACV,MAAM+b,EAAOnc,KAAKid,aACZ,OAAEE,EAAO,OAAER,GAAYR,EACvBa,EAAShd,KAAKijB,UAAU7iB,GACxBspB,EAAS1M,EAAOsM,QAChBlb,EAAQqb,EAAWC,GAAU,IAAMA,EAAO1uB,MAAQ,KAAO0uB,EAAOxiB,IAAM,IAAM,GAAKyV,EAAO6H,iBAAiBxH,EAAOL,EAAO3uB,OAC7H,MAAO,CACHu2B,MAAO,GAAKpH,EAAOqH,iBAAiBxH,EAAOG,EAAOnvB,OAClDogB,QAER,CACAkR,aACItf,KAAKgf,qBAAsB,EAC3B+M,MAAMzM,aACOtf,KAAKid,YACbrd,MAAQI,KAAK8f,aAAalgB,KACnC,CACAhL,OAAOvI,GACH,MAAM8vB,EAAOnc,KAAKid,YAClBjd,KAAK2nB,eAAexL,EAAKnI,KAAM,EAAGmI,EAAKnI,KAAKxmB,OAAQnB,EACxD,CACAs7B,eAAe2J,EAAMt2B,EAAO2V,EAAOtkB,GAC/B,MAAMylB,EAAiB,UAATzlB,GACR,MAAE+T,EAAQ6c,aAAa,OAAEN,IAAe3c,KACxCa,EAAO8b,EAAO4U,eACdzH,EAAanN,EAAOrtB,eACpBkiC,EAAQxxB,KAAKyxB,aACb,cAAElL,EAAc,eAAED,GAAoBtmB,KAAKymB,kBAAkBzrB,EAAO3O,GAC1E,IAAI,IAAIkB,EAAIyN,EAAOzN,EAAIyN,EAAQ2V,EAAOpjB,IAAI,CACtC,MAAMyvB,EAAShd,KAAKijB,UAAU11B,GACxBmkC,EAAU5f,IAAS,OAAckL,EAAOL,EAAO3uB,OAAS,CAC1D6S,OACA8wB,KAAM9wB,GACNb,KAAK4xB,yBAAyBrkC,GAC5BskC,EAAU7xB,KAAK8xB,yBAAyBvkC,EAAGikC,GAC3C5xB,GAASod,EAAOE,SAAW,CAAC,GAAGP,EAAO3uB,MACtC8S,EAAa,CACfgpB,aACAjpB,KAAM6wB,EAAQ7wB,KACdmpB,oBAAqBpqB,GAAS6pB,EAAWzM,EAAOsM,UAAYlpB,IAAUR,EAAM6d,MAAQrd,IAAUR,EAAM8d,QACpG/wB,EAAGm9B,EAAa4H,EAAQC,KAAOE,EAAQ7iC,OACvCpC,EAAGk9B,EAAa+H,EAAQ7iC,OAAS0iC,EAAQC,KACzCx+B,OAAQ22B,EAAa+H,EAAQzW,KAAO5rB,KAAK8D,IAAIo+B,EAAQtW,MACrDloB,MAAO42B,EAAat6B,KAAK8D,IAAIo+B,EAAQtW,MAAQyW,EAAQzW,MAErDkL,IACAxlB,EAAWhU,QAAUy5B,GAAiBvmB,KAAKmlB,0BAA0B53B,EAAG+jC,EAAK/jC,GAAG8rB,OAAS,SAAWhtB,IAExG,MAAMS,EAAUgU,EAAWhU,SAAWwkC,EAAK/jC,GAAGT,QAC9C68B,EAAiB7oB,EAAYhU,EAAS8S,EAAOQ,GAC7CiqB,EAAiBvpB,EAAYhU,EAAS0kC,EAAMjH,OAC5CvqB,KAAK6mB,cAAcyK,EAAK/jC,GAAIA,EAAGuT,EAAYzU,EAC/C,CACJ,CACH0lC,WAAWjqB,EAAMsd,GACV,MAAM,OAAEjI,GAAYnd,KAAKid,YACnBvB,EAAWyB,EAAON,wBAAwB7c,KAAKye,OAAO1S,QAAQoQ,GAAOA,EAAKY,WAAWjwB,QAAQmkC,UAC7F7U,EAAUe,EAAOrwB,QAAQsvB,QACzBE,EAAS,GACT0V,EAAY7V,IACd,MAAMa,EAASb,EAAKY,WAAWkG,UAAUmC,GACnC/jB,EAAM2b,GAAUA,EAAOb,EAAKQ,OAAO3uB,MACzC,IAAI,OAAcqT,IAAQzQ,MAAMyQ,GAC5B,OAAO,CACX,EAEJ,IAAK,MAAM8a,KAAQT,EACf,SAAkBlvB,IAAd44B,IAA2B4M,EAAS7V,QAGxB,IAAZC,IAAqD,IAAhCE,EAAO7vB,QAAQ0vB,EAAKvc,aAA6BpT,IAAZ4vB,QAAwC5vB,IAAf2vB,EAAKvc,QACxF0c,EAAOnuB,KAAKguB,EAAKvc,OAEjBuc,EAAK/b,QAAU0H,GACf,MAMR,OAHKwU,EAAO9uB,QACR8uB,EAAOnuB,UAAK3B,GAET8vB,CACX,CACH2V,eAAe7xB,GACR,OAAOJ,KAAK+xB,gBAAWvlC,EAAW4T,GAAO5S,MAC7C,CACH0kC,eAAelW,EAAc9e,EAAMkoB,GAC5B,MAAM9I,EAAStc,KAAK+xB,WAAW/V,EAAcoJ,GACvChlB,OAAiB5T,IAAT0Q,EAAqBof,EAAO7vB,QAAQyQ,IAAS,EAC3D,OAAkB,IAAXkD,EAAekc,EAAO9uB,OAAS,EAAI4S,CAC9C,CACHqxB,YACO,MAAM5lC,EAAOmU,KAAKlT,QACZqvB,EAAOnc,KAAKid,YACZE,EAAShB,EAAKgB,OACdgV,EAAS,GACf,IAAI5kC,EAAGquB,EACP,IAAIruB,EAAI,EAAGquB,EAAOO,EAAKnI,KAAKxmB,OAAQD,EAAIquB,IAAQruB,EAC5C4kC,EAAOhkC,KAAKgvB,EAAOrrB,iBAAiBkO,KAAKijB,UAAU11B,GAAG4vB,EAAOnvB,MAAOT,IAExE,MAAM6kC,EAAevmC,EAAKumC,aAE1B,MAAO,CACHjjC,IAFQijC,GAAgB/J,EAAqBlM,GAG7CgW,SACAn3B,MAAOmiB,EAAOkV,YACdnrB,IAAKiW,EAAOmV,UACZC,WAAYvyB,KAAKiyB,iBACjB/kC,MAAOiwB,EACP8T,QAASplC,EAAKolC,QACd1G,MAAO6H,EAAe,EAAIvmC,EAAKklC,mBAAqBllC,EAAKmlC,cAEjE,CACHY,yBAAyBxxB,GAClB,MAAQ6c,aAAa,OAAEN,EAAO,SAAE6C,EAAWpf,MAAO4b,GAAkBlvB,SAAW+T,KAAM2xB,EAAU,aAAEC,IAAqBzyB,KAChH0yB,EAAaF,GAAa,EAC1BxV,EAAShd,KAAKijB,UAAU7iB,GACxBspB,EAAS1M,EAAOsM,QAChBqJ,EAAWlJ,EAAWC,GAC5B,IAGIiI,EAAMvW,EAHNhN,EAAQ4O,EAAOL,EAAO3uB,MACtBgN,EAAQ,EACRxN,EAASgyB,EAAWxf,KAAK6b,WAAWc,EAAQK,EAAQwC,GAAYpR,EAEhE5gB,IAAW4gB,IACXpT,EAAQxN,EAAS4gB,EACjB5gB,EAAS4gB,GAETukB,IACAvkB,EAAQsb,EAAON,SACf57B,EAASk8B,EAAOL,OAASK,EAAON,SAClB,IAAVhb,IAAe,IAAAjZ,GAAKiZ,MAAW,IAAAjZ,GAAKu0B,EAAOL,UAC3CruB,EAAQ,GAEZA,GAASoT,GAEb,MAAM8a,GAAc,OAAcsJ,IAAeG,EAAuB33B,EAAZw3B,EAC5D,IAAI3xB,EAAO8b,EAAO7qB,iBAAiBo3B,GAOnC,GALIyI,EADA3xB,KAAKzT,MAAMo/B,kBAAkBvrB,GACtBuc,EAAO7qB,iBAAiBkJ,EAAQxN,GAEhCqT,EAEXua,EAAOuW,EAAO9wB,EACVrR,KAAK8D,IAAI8nB,GAAQqX,EAAc,CAC/BrX,EApSZ,SAAiBA,EAAMuB,EAAQ+V,GAC3B,OAAa,IAATtX,GACO,IAAAjmB,GAAKimB,IAERuB,EAAOrtB,eAAiB,GAAK,IAAMqtB,EAAOxtB,KAAOujC,EAAa,GAAK,EAC/E,CA+RmBE,CAAQxX,EAAMuB,EAAQ+V,GAAcD,EACvCrkB,IAAUskB,IACV7xB,GAAQua,EAAO,GAEnB,MAAMyX,EAAalW,EAAOmW,mBAAmB,GACvCC,EAAWpW,EAAOmW,mBAAmB,GACrC3jC,EAAMK,KAAKL,IAAI0jC,EAAYE,GAC3B7jC,EAAMM,KAAKN,IAAI2jC,EAAYE,GACjClyB,EAAOrR,KAAKN,IAAIM,KAAKL,IAAI0R,EAAM3R,GAAMC,GACrCwiC,EAAO9wB,EAAOua,EACVoE,IAAamT,IACb3V,EAAOE,QAAQP,EAAO3uB,MAAM2vB,cAAc3B,GAAgBW,EAAOltB,iBAAiBkiC,GAAQhV,EAAOltB,iBAAiBoR,GAE1H,CACA,GAAIA,IAAS8b,EAAO7qB,iBAAiB4gC,GAAa,CAC9C,MAAMM,GAAW,IAAA79B,GAAKimB,GAAQuB,EAAOsW,qBAAqBP,GAAc,EACxE7xB,GAAQmyB,EACR5X,GAAQ4X,CACZ,CACA,MAAO,CACH5X,OACAva,OACA8wB,OACA3iC,OAAQ2iC,EAAOvW,EAAO,EAE9B,CACH0W,yBAAyB1xB,EAAOoxB,GACzB,MAAMtkC,EAAQskC,EAAMtkC,MACdJ,EAAUkT,KAAKlT,QACfklC,EAAWllC,EAAQklC,SACnBkB,GAAkB,IAAAjjC,GAAenD,EAAQomC,gBAAiB1iC,KAChE,IAAIxB,EAAQosB,EACZ,GAAIoW,EAAMP,QAAS,CACf,MAAMsB,EAAaP,EAAWhyB,KAAKiyB,eAAe7xB,GAASoxB,EAAMe,WAC3DtjC,EAAiC,SAAzBnC,EAAQslC,aAzYjC,SAAmChyB,EAAOoxB,EAAO1kC,EAASylC,GACvD,MAAMJ,EAASX,EAAMW,OACfxJ,EAAOwJ,EAAO/xB,GACpB,IAAIoiB,EAAOpiB,EAAQ,EAAI+xB,EAAO/xB,EAAQ,GAAK,KACvC+yB,EAAO/yB,EAAQ+xB,EAAO3kC,OAAS,EAAI2kC,EAAO/xB,EAAQ,GAAK,KAC3D,MAAMgzB,EAAUtmC,EAAQikC,mBACX,OAATvO,IACAA,EAAOmG,GAAiB,OAATwK,EAAgB3B,EAAMtqB,IAAMsqB,EAAMx2B,MAAQm4B,EAAOxK,IAEvD,OAATwK,IACAA,EAAOxK,EAAOA,EAAOnG,GAEzB,MAAMxnB,EAAQ2tB,GAAQA,EAAOn5B,KAAKL,IAAIqzB,EAAM2Q,IAAS,EAAIC,EAEzD,MAAO,CACHC,MAFS7jC,KAAK8D,IAAI6/B,EAAO3Q,GAAQ,EAAI4Q,EAEvBb,EACdhI,MAAOz9B,EAAQkkC,cACfh2B,QAER,CAsX4Ds4B,CAA0BlzB,EAAOoxB,EAAO1kC,EAASylC,GAzZ5G,SAAkCnyB,EAAOoxB,EAAO1kC,EAASylC,GACtD,MAAMgB,EAAYzmC,EAAQslC,aAC1B,IAAIhX,EAAMmP,EAQV,OAPI,OAAcgJ,IACdnY,EAAOoW,EAAMriC,IAAMrC,EAAQikC,mBAC3BxG,EAAQz9B,EAAQkkC,gBAEhB5V,EAAOmY,EAAYhB,EACnBhI,EAAQ,GAEL,CACH8I,MAAOjY,EAAOmX,EACdhI,QACAvvB,MAAOw2B,EAAMW,OAAO/xB,GAASgb,EAAO,EAE5C,CA0Y2HoY,CAAyBpzB,EAAOoxB,EAAO1kC,EAASylC,GACzJkB,EAAazzB,KAAKkyB,eAAelyB,KAAKI,MAAOJ,KAAKid,YAAYrd,MAAOoyB,EAAW5xB,OAAQ5T,GAC9FwC,EAASC,EAAM+L,MAAQ/L,EAAMokC,MAAQI,EAAaxkC,EAAMokC,MAAQ,EAChEjY,EAAO5rB,KAAKL,IAAI+jC,EAAiBjkC,EAAMokC,MAAQpkC,EAAMs7B,MACzD,MACIv7B,EAAS9B,EAAM4E,iBAAiBkO,KAAKijB,UAAU7iB,GAAOlT,EAAMc,MAAOoS,GACnEgb,EAAO5rB,KAAKL,IAAI+jC,EAAiB1B,EAAMriC,IAAMqiC,EAAMjH,OAEvD,MAAO,CACH1pB,KAAM7R,EAASosB,EAAO,EACtBuW,KAAM3iC,EAASosB,EAAO,EACtBpsB,SACAosB,OAER,CACAvhB,OACI,MAAMsiB,EAAOnc,KAAKid,YACZN,EAASR,EAAKQ,OACd+W,EAAQvX,EAAKnI,KACb4H,EAAO8X,EAAMlmC,OACnB,IAAID,EAAI,EACR,KAAMA,EAAIquB,IAAQruB,EACyB,OAAnCyS,KAAKijB,UAAU11B,GAAGovB,EAAO3uB,OACzB0lC,EAAMnmC,GAAGsM,KAAKmG,KAAKse,KAG/B,GAq5BJqV,iBAl5BA,cAA+BvV,EAC3BC,UAAY,SACfA,gBAAkB,CACXe,oBAAoB,EACpBC,gBAAiB,QACjBvE,WAAY,CACR6P,QAAS,CACLz2B,KAAM,SACN4M,WAAY,CACR,IACA,IACA,cACA,aAKnBud,iBAAmB,CACZlxB,OAAQ,CACJR,EAAG,CACCuH,KAAM,UAEVtH,EAAG,CACCsH,KAAM,YAIlBorB,aACItf,KAAKgf,qBAAsB,EAC3B+M,MAAMzM,YACV,CACHqD,mBAAmBxG,EAAMnI,EAAMhZ,EAAO2V,GAC/B,MAAMqM,EAAS+O,MAAMpJ,mBAAmBxG,EAAMnI,EAAMhZ,EAAO2V,GAC3D,IAAI,IAAIpjB,EAAI,EAAGA,EAAIyvB,EAAOxvB,OAAQD,IAC9ByvB,EAAOzvB,GAAG+7B,QAAUtpB,KAAKmlB,0BAA0B53B,EAAIyN,GAAO8vB,OAElE,OAAO9N,CACX,CACHyF,eAAetG,EAAMnI,EAAMhZ,EAAO2V,GAC3B,MAAMqM,EAAS+O,MAAMtJ,eAAetG,EAAMnI,EAAMhZ,EAAO2V,GACvD,IAAI,IAAIpjB,EAAI,EAAGA,EAAIyvB,EAAOxvB,OAAQD,IAAI,CAClC,MAAM2jB,EAAO8C,EAAKhZ,EAAQzN,GAC1ByvB,EAAOzvB,GAAG+7B,SAAU,IAAAr5B,GAAeihB,EAAK,GAAIlR,KAAKmlB,0BAA0B53B,EAAIyN,GAAO8vB,OAC1F,CACA,OAAO9N,CACX,CACH0F,gBAAgBvG,EAAMnI,EAAMhZ,EAAO2V,GAC5B,MAAMqM,EAAS+O,MAAMrJ,gBAAgBvG,EAAMnI,EAAMhZ,EAAO2V,GACxD,IAAI,IAAIpjB,EAAI,EAAGA,EAAIyvB,EAAOxvB,OAAQD,IAAI,CAClC,MAAM2jB,EAAO8C,EAAKhZ,EAAQzN,GAC1ByvB,EAAOzvB,GAAG+7B,SAAU,IAAAr5B,GAAeihB,GAAQA,EAAKiF,IAAMjF,EAAKiF,EAAGnW,KAAKmlB,0BAA0B53B,EAAIyN,GAAO8vB,OAC5G,CACA,OAAO9N,CACX,CACHqH,iBACO,MAAMrQ,EAAOhU,KAAKid,YAAYjJ,KAC9B,IAAI9kB,EAAM,EACV,IAAI,IAAI3B,EAAIymB,EAAKxmB,OAAS,EAAGD,GAAK,IAAKA,EACnC2B,EAAMM,KAAKN,IAAIA,EAAK8kB,EAAKzmB,GAAG6tB,KAAKpb,KAAKmlB,0BAA0B53B,IAAM,GAE1E,OAAO2B,EAAM,GAAKA,CACtB,CACHo1B,iBAAiBlkB,GACV,MAAM+b,EAAOnc,KAAKid,YACZ4F,EAAS7iB,KAAKzT,MAAMynB,KAAK6O,QAAU,IACnC,OAAElC,EAAO,OAAEE,GAAY1E,EACvBa,EAAShd,KAAKijB,UAAU7iB,GACxBzT,EAAIg0B,EAAO6D,iBAAiBxH,EAAOrwB,GACnCC,EAAIi0B,EAAO2D,iBAAiBxH,EAAOpwB,GACnCupB,EAAI6G,EAAOsM,QACjB,MAAO,CACH/E,MAAO1B,EAAOziB,IAAU,GACxBgO,MAAO,IAAMzhB,EAAI,KAAOC,GAAKupB,EAAI,KAAOA,EAAI,IAAM,IAE1D,CACAvhB,OAAOvI,GACH,MAAMunC,EAAS5zB,KAAKid,YAAYjJ,KAChChU,KAAK2nB,eAAeiM,EAAQ,EAAGA,EAAOpmC,OAAQnB,EAClD,CACAs7B,eAAeiM,EAAQ54B,EAAO2V,EAAOtkB,GACjC,MAAMylB,EAAiB,UAATzlB,GACR,OAAE8wB,EAAO,OAAER,GAAY3c,KAAKid,aAC5B,cAAEsJ,EAAc,eAAED,GAAoBtmB,KAAKymB,kBAAkBzrB,EAAO3O,GACpE+wB,EAAQD,EAAOnvB,KACfqvB,EAAQV,EAAO3uB,KACrB,IAAI,IAAIT,EAAIyN,EAAOzN,EAAIyN,EAAQ2V,EAAOpjB,IAAI,CACtC,MAAMR,EAAQ6mC,EAAOrmC,GACfyvB,GAAUlL,GAAS9R,KAAKijB,UAAU11B,GAClCuT,EAAa,CAAC,EACd+yB,EAAS/yB,EAAWsc,GAAStL,EAAQqL,EAAO2V,mBAAmB,IAAO3V,EAAOrrB,iBAAiBkrB,EAAOI,IACrG0W,EAAShzB,EAAWuc,GAASvL,EAAQ6K,EAAO4U,eAAiB5U,EAAO7qB,iBAAiBkrB,EAAOK,IAClGvc,EAAWizB,KAAOnjC,MAAMijC,IAAWjjC,MAAMkjC,GACrCxN,IACAxlB,EAAWhU,QAAUy5B,GAAiBvmB,KAAKmlB,0BAA0B53B,EAAGR,EAAMssB,OAAS,SAAWhtB,GAC9FylB,IACAhR,EAAWhU,QAAQg+B,OAAS,IAGpC9qB,KAAK6mB,cAAc95B,EAAOQ,EAAGuT,EAAYzU,EAC7C,CACJ,CACH84B,0BAA0B/kB,EAAO/T,GAC1B,MAAM2wB,EAAShd,KAAKijB,UAAU7iB,GAC9B,IAAIyC,EAASkpB,MAAM5G,0BAA0B/kB,EAAO/T,GAChDwW,EAAO8X,UACP9X,EAASxV,OAAOgR,OAAO,CAAC,EAAGwE,EAAQ,CAC/B8X,SAAS,KAGjB,MAAMmQ,EAASjoB,EAAOioB,OAKtB,MAJa,WAATz+B,IACAwW,EAAOioB,OAAS,GAEpBjoB,EAAOioB,SAAU,IAAA76B,GAAe+sB,GAAUA,EAAOsM,QAASwB,GACnDjoB,CACX,GAgyBJ2nB,mBAAoBA,EACpBwJ,eAnfA,cAA6B5V,EACzBC,UAAY,OACfA,gBAAkB,CACXe,mBAAoB,OACpBC,gBAAiB,QACjB4U,UAAU,EACVC,UAAU,GAEjB7V,iBAAmB,CACZlxB,OAAQ,CACJ+jC,QAAS,CACLh9B,KAAM,YAEVi9B,QAAS,CACLj9B,KAAM,YAIlBorB,aACItf,KAAKgf,qBAAsB,EAC3Bhf,KAAKif,oBAAqB,EAC1B8M,MAAMzM,YACV,CACA1qB,OAAOvI,GACH,MAAM8vB,EAAOnc,KAAKid,aACV4C,QAASsU,EAAOngB,KAAM4f,EAAS,GAAG,SAAEQ,GAAcjY,EACpDkY,EAAqBr0B,KAAKzT,MAAMi6B,oBACtC,IAAI,MAAExrB,EAAM,MAAE2V,IAAW,OAAiCwL,EAAMyX,EAAQS,GACxEr0B,KAAK8e,WAAa9jB,EAClBgF,KAAK+e,WAAapO,GACd,OAAoBwL,KACpBnhB,EAAQ,EACR2V,EAAQijB,EAAOpmC,QAEnB2mC,EAAKna,OAASha,KAAKzT,MACnB4nC,EAAKG,cAAgBt0B,KAAKI,MAC1B+zB,EAAKI,aAAeH,EAASG,WAC7BJ,EAAKP,OAASA,EACd,MAAM9mC,EAAUkT,KAAKklB,6BAA6B74B,GAC7C2T,KAAKlT,QAAQmnC,WACdnnC,EAAQyN,YAAc,GAE1BzN,EAAQ0nC,QAAUx0B,KAAKlT,QAAQ0nC,QAC/Bx0B,KAAK6mB,cAAcsN,OAAM3nC,EAAW,CAChCioC,UAAWJ,EACXvnC,WACDT,GACH2T,KAAK2nB,eAAeiM,EAAQ54B,EAAO2V,EAAOtkB,EAC9C,CACAs7B,eAAeiM,EAAQ54B,EAAO2V,EAAOtkB,GACjC,MAAMylB,EAAiB,UAATzlB,GACR,OAAE8wB,EAAO,OAAER,EAAO,SAAE6C,EAAS,SAAE4U,GAAcp0B,KAAKid,aAClD,cAAEsJ,EAAc,eAAED,GAAoBtmB,KAAKymB,kBAAkBzrB,EAAO3O,GACpE+wB,EAAQD,EAAOnvB,KACfqvB,EAAQV,EAAO3uB,MACf,SAAEkmC,EAAS,QAAEM,GAAax0B,KAAKlT,QAC/B4nC,GAAe,OAASR,GAAYA,EAAWvQ,OAAOC,kBACtD+Q,EAAe30B,KAAKzT,MAAMi6B,qBAAuB1U,GAAkB,SAATzlB,EAC1D6a,EAAMlM,EAAQ2V,EACdikB,EAAchB,EAAOpmC,OAC3B,IAAIqnC,EAAa75B,EAAQ,GAAKgF,KAAKijB,UAAUjoB,EAAQ,GACrD,IAAI,IAAIzN,EAAI,EAAGA,EAAIqnC,IAAernC,EAAE,CAChC,MAAMR,EAAQ6mC,EAAOrmC,GACfuT,EAAa6zB,EAAe5nC,EAAQ,CAAC,EAC3C,GAAIQ,EAAIyN,GAASzN,GAAK2Z,EAAK,CACvBpG,EAAWizB,MAAO,EAClB,QACJ,CACA,MAAM/W,EAAShd,KAAKijB,UAAU11B,GACxBunC,GAAW,OAAc9X,EAAOK,IAChCwW,EAAS/yB,EAAWsc,GAASD,EAAOrrB,iBAAiBkrB,EAAOI,GAAQ7vB,GACpEumC,EAAShzB,EAAWuc,GAASvL,GAASgjB,EAAWnY,EAAO4U,eAAiB5U,EAAO7qB,iBAAiB0tB,EAAWxf,KAAK6b,WAAWc,EAAQK,EAAQwC,GAAYxC,EAAOK,GAAQ9vB,GAC7KuT,EAAWizB,KAAOnjC,MAAMijC,IAAWjjC,MAAMkjC,IAAWgB,EACpDh0B,EAAWjD,KAAOtQ,EAAI,GAAKiC,KAAK8D,IAAI0pB,EAAOI,GAASyX,EAAWzX,IAAUsX,EACrEF,IACA1zB,EAAWkc,OAASA,EACpBlc,EAAWukB,IAAM+O,EAASpgB,KAAKzmB,IAE/B+4B,IACAxlB,EAAWhU,QAAUy5B,GAAiBvmB,KAAKmlB,0BAA0B53B,EAAGR,EAAMssB,OAAS,SAAWhtB,IAEjGsoC,GACD30B,KAAK6mB,cAAc95B,EAAOQ,EAAGuT,EAAYzU,GAE7CwoC,EAAa7X,CACjB,CACJ,CACHqH,iBACO,MAAMlI,EAAOnc,KAAKid,YACZ4C,EAAU1D,EAAK0D,QACfkV,EAASlV,EAAQ/yB,SAAW+yB,EAAQ/yB,QAAQyN,aAAe,EAC3DyZ,EAAOmI,EAAKnI,MAAQ,GAC1B,IAAKA,EAAKxmB,OACN,OAAOunC,EAEX,MAAMC,EAAahhB,EAAK,GAAGoH,KAAKpb,KAAKmlB,0BAA0B,IACzD8P,EAAYjhB,EAAKA,EAAKxmB,OAAS,GAAG4tB,KAAKpb,KAAKmlB,0BAA0BnR,EAAKxmB,OAAS,IAC1F,OAAOgC,KAAKN,IAAI6lC,EAAQC,EAAYC,GAAa,CACrD,CACAp7B,OACI,MAAMsiB,EAAOnc,KAAKid,YAClBd,EAAK0D,QAAQqV,oBAAoBl1B,KAAKzT,MAAM+H,UAAW6nB,EAAKgB,OAAOnvB,MACnE+9B,MAAMlyB,MACV,GA6YJs7B,cAnNA,cAA4B3K,EACxBnM,UAAY,MACfA,gBAAkB,CACXuM,OAAQ,EACRrjB,SAAU,EACVsjB,cAAe,IACfC,OAAQ,SA8MhB0E,oBAAqBA,EACrB4F,gBA3MA,cAA8BhX,EAC1BC,UAAY,QACfA,gBAAkB,CACXe,mBAAoB,OACpBC,gBAAiB,QACjBiB,UAAW,IACX2T,UAAU,EACVnP,SAAU,CACNqP,KAAM,CACFzU,KAAM,WAIrBrB,iBAAmB,CACZ8M,YAAa,EACbh+B,OAAQ,CACJgpB,EAAG,CACCjiB,KAAM,kBAIrBowB,iBAAiBlkB,GACV,MAAMuc,EAAS3c,KAAKid,YAAYN,OAC1BK,EAAShd,KAAKijB,UAAU7iB,GAC9B,MAAO,CACHmkB,MAAO5H,EAAOvqB,YAAYgO,GAC1BgO,MAAO,GAAKuO,EAAO6H,iBAAiBxH,EAAOL,EAAO3uB,OAE1D,CACA00B,gBAAgBvG,EAAMnI,EAAMhZ,EAAO2V,GAC/B,OAAO,IAA4Bof,KAAK/vB,KAAjC,CAAuCmc,EAAMnI,EAAMhZ,EAAO2V,EACrE,CACA/b,OAAOvI,GACH,MAAM8vB,EAAOnc,KAAKid,YACZkX,EAAOhY,EAAK0D,QACZ+T,EAASzX,EAAKnI,MAAQ,GACtB6O,EAAS1G,EAAKgB,OAAO/qB,YAE3B,GADA+hC,EAAKP,OAASA,EACD,WAATvnC,EAAmB,CACnB,MAAMS,EAAUkT,KAAKklB,6BAA6B74B,GAC7C2T,KAAKlT,QAAQmnC,WACdnnC,EAAQyN,YAAc,GAE1B,MAAMuG,EAAa,CACfgY,OAAO,EACPuc,UAAWxS,EAAOr1B,SAAWomC,EAAOpmC,OACpCV,WAEJkT,KAAK6mB,cAAcsN,OAAM3nC,EAAWsU,EAAYzU,EACpD,CACA2T,KAAK2nB,eAAeiM,EAAQ,EAAGA,EAAOpmC,OAAQnB,EAClD,CACAs7B,eAAeiM,EAAQ54B,EAAO2V,EAAOtkB,GACjC,MAAMa,EAAQ8S,KAAKid,YAAY6D,OACzBhP,EAAiB,UAATzlB,EACd,IAAI,IAAIkB,EAAIyN,EAAOzN,EAAIyN,EAAQ2V,EAAOpjB,IAAI,CACtC,MAAMR,EAAQ6mC,EAAOrmC,GACfT,EAAUkT,KAAKmlB,0BAA0B53B,EAAGR,EAAMssB,OAAS,SAAWhtB,GACtEipC,EAAgBpoC,EAAMqoC,yBAAyBhoC,EAAGyS,KAAKijB,UAAU11B,GAAG4oB,GACpExpB,EAAImlB,EAAQ5kB,EAAMkjC,QAAUkF,EAAc3oC,EAC1CC,EAAIklB,EAAQ5kB,EAAMmjC,QAAUiF,EAAc1oC,EAC1CkU,EAAa,CACfnU,IACAC,IACA6Z,MAAO6uB,EAAc7uB,MACrBstB,KAAMnjC,MAAMjE,IAAMiE,MAAMhE,GACxBE,WAEJkT,KAAK6mB,cAAc95B,EAAOQ,EAAGuT,EAAYzU,EAC7C,CACJ,GAsIJmpC,kBAnIA,cAAgCpX,EAC5BC,UAAY,UACfA,gBAAkB,CACXe,oBAAoB,EACpBC,gBAAiB,QACjB4U,UAAU,EACVvU,MAAM,GAEbrB,iBAAmB,CACZoX,YAAa,CACTppC,KAAM,SAEVc,OAAQ,CACJR,EAAG,CACCuH,KAAM,UAEVtH,EAAG,CACCsH,KAAM,YAIrBowB,iBAAiBlkB,GACV,MAAM+b,EAAOnc,KAAKid,YACZ4F,EAAS7iB,KAAKzT,MAAMynB,KAAK6O,QAAU,IACnC,OAAElC,EAAO,OAAEE,GAAY1E,EACvBa,EAAShd,KAAKijB,UAAU7iB,GACxBzT,EAAIg0B,EAAO6D,iBAAiBxH,EAAOrwB,GACnCC,EAAIi0B,EAAO2D,iBAAiBxH,EAAOpwB,GACzC,MAAO,CACH23B,MAAO1B,EAAOziB,IAAU,GACxBgO,MAAO,IAAMzhB,EAAI,KAAOC,EAAI,IAEpC,CACAgI,OAAOvI,GACH,MAAM8vB,EAAOnc,KAAKid,aACVjJ,KAAM4f,EAAS,IAAQzX,EACzBkY,EAAqBr0B,KAAKzT,MAAMi6B,oBACtC,IAAI,MAAExrB,EAAM,MAAE2V,IAAW,OAAiCwL,EAAMyX,EAAQS,GAOxE,GANAr0B,KAAK8e,WAAa9jB,EAClBgF,KAAK+e,WAAapO,GACd,OAAoBwL,KACpBnhB,EAAQ,EACR2V,EAAQijB,EAAOpmC,QAEfwS,KAAKlT,QAAQmnC,SAAU,CACvB,MAAQpU,QAASsU,EAAK,SAAEC,GAAcjY,EACtCgY,EAAKna,OAASha,KAAKzT,MACnB4nC,EAAKG,cAAgBt0B,KAAKI,MAC1B+zB,EAAKI,aAAeH,EAASG,WAC7BJ,EAAKP,OAASA,EACd,MAAM9mC,EAAUkT,KAAKklB,6BAA6B74B,GAClDS,EAAQ0nC,QAAUx0B,KAAKlT,QAAQ0nC,QAC/Bx0B,KAAK6mB,cAAcsN,OAAM3nC,EAAW,CAChCioC,UAAWJ,EACXvnC,WACDT,EACP,CACA2T,KAAK2nB,eAAeiM,EAAQ54B,EAAO2V,EAAOtkB,EAC9C,CACAozB,cACI,MAAM,SAAEwU,GAAcj0B,KAAKlT,SACtBkT,KAAKof,oBAAsB6U,IAC5Bj0B,KAAKof,mBAAqBpf,KAAKzT,MAAMmpC,SAASC,WAAW,SAE7D5J,MAAMtM,aACV,CACAkI,eAAeiM,EAAQ54B,EAAO2V,EAAOtkB,GACjC,MAAMylB,EAAiB,UAATzlB,GACR,OAAE8wB,EAAO,OAAER,EAAO,SAAE6C,EAAS,SAAE4U,GAAcp0B,KAAKid,YAClDyJ,EAAY1mB,KAAKmlB,0BAA0BnqB,EAAO3O,GAClDk6B,EAAgBvmB,KAAKqmB,iBAAiBK,GACtCJ,EAAiBtmB,KAAKsmB,eAAej6B,EAAMk6B,GAC3CnJ,EAAQD,EAAOnvB,KACfqvB,EAAQV,EAAO3uB,MACf,SAAEkmC,EAAS,QAAEM,GAAax0B,KAAKlT,QAC/B4nC,GAAe,OAASR,GAAYA,EAAWvQ,OAAOC,kBACtD+Q,EAAe30B,KAAKzT,MAAMi6B,qBAAuB1U,GAAkB,SAATzlB,EAChE,IAAIwoC,EAAa75B,EAAQ,GAAKgF,KAAKijB,UAAUjoB,EAAQ,GACrD,IAAI,IAAIzN,EAAIyN,EAAOzN,EAAIyN,EAAQ2V,IAASpjB,EAAE,CACtC,MAAMR,EAAQ6mC,EAAOrmC,GACfyvB,EAAShd,KAAKijB,UAAU11B,GACxBuT,EAAa6zB,EAAe5nC,EAAQ,CAAC,EACrC+nC,GAAW,OAAc9X,EAAOK,IAChCwW,EAAS/yB,EAAWsc,GAASD,EAAOrrB,iBAAiBkrB,EAAOI,GAAQ7vB,GACpEumC,EAAShzB,EAAWuc,GAASvL,GAASgjB,EAAWnY,EAAO4U,eAAiB5U,EAAO7qB,iBAAiB0tB,EAAWxf,KAAK6b,WAAWc,EAAQK,EAAQwC,GAAYxC,EAAOK,GAAQ9vB,GAC7KuT,EAAWizB,KAAOnjC,MAAMijC,IAAWjjC,MAAMkjC,IAAWgB,EACpDh0B,EAAWjD,KAAOtQ,EAAI,GAAKiC,KAAK8D,IAAI0pB,EAAOI,GAASyX,EAAWzX,IAAUsX,EACrEF,IACA1zB,EAAWkc,OAASA,EACpBlc,EAAWukB,IAAM+O,EAASpgB,KAAKzmB,IAE/B+4B,IACAxlB,EAAWhU,QAAUy5B,GAAiBvmB,KAAKmlB,0BAA0B53B,EAAGR,EAAMssB,OAAS,SAAWhtB,IAEjGsoC,GACD30B,KAAK6mB,cAAc95B,EAAOQ,EAAGuT,EAAYzU,GAE7CwoC,EAAa7X,CACjB,CACAhd,KAAK4mB,oBAAoBL,EAAel6B,EAAMq6B,EAClD,CACHrC,iBACO,MAAMlI,EAAOnc,KAAKid,YACZjJ,EAAOmI,EAAKnI,MAAQ,GAC1B,IAAKhU,KAAKlT,QAAQmnC,SAAU,CACxB,IAAI/kC,EAAM,EACV,IAAI,IAAI3B,EAAIymB,EAAKxmB,OAAS,EAAGD,GAAK,IAAKA,EACnC2B,EAAMM,KAAKN,IAAIA,EAAK8kB,EAAKzmB,GAAG6tB,KAAKpb,KAAKmlB,0BAA0B53B,IAAM,GAE1E,OAAO2B,EAAM,GAAKA,CACtB,CACA,MAAM2wB,EAAU1D,EAAK0D,QACfkV,EAASlV,EAAQ/yB,SAAW+yB,EAAQ/yB,QAAQyN,aAAe,EACjE,IAAKyZ,EAAKxmB,OACN,OAAOunC,EAEX,MAAMC,EAAahhB,EAAK,GAAGoH,KAAKpb,KAAKmlB,0BAA0B,IACzD8P,EAAYjhB,EAAKA,EAAKxmB,OAAS,GAAG4tB,KAAKpb,KAAKmlB,0BAA0BnR,EAAKxmB,OAAS,IAC1F,OAAOgC,KAAKN,IAAI6lC,EAAQC,EAAYC,GAAa,CACrD,KAmBA,SAAS,IACT,MAAM,IAAIt1B,MAAM,kFACpB,CAMI,MAAMi2B,EAUJvX,gBAAgBwX,GACdxoC,OAAOgR,OAAOu3B,EAAgB16B,UAAW26B,EAC7C,CACA/oC,QACAoU,YAAYpU,GACRkT,KAAKlT,QAAUA,GAAW,CAAC,CAC/B,CAEA0Y,OAAQ,CACRswB,UACI,OAAO,GACX,CACAplC,QACI,OAAO,GACX,CACAqlC,SACI,OAAO,GACX,CACAv6B,MACI,OAAO,GACX,CACAw6B,OACI,OAAO,GACX,CACAC,UACI,OAAO,GACX,CACAC,QACI,OAAO,GACX,EAEJ,IAAIC,EACOP,EAGX,SAASQ,EAAaC,EAASroC,EAAMogB,EAAOkoB,GACxC,MAAM,WAAEvZ,EAAW,KAAE/I,EAAK,QAAEuO,GAAa8T,EACnClZ,EAASJ,EAAWE,YAAYE,OACtC,GAAIA,GAAUnvB,IAASmvB,EAAOnvB,MAAiB,MAATA,GAAgBu0B,GAAWvO,EAAKxmB,OAAQ,CAC1E,MAAM+oC,EAAepZ,EAAOqZ,eAAiB,IAAgB,IAC7D,IAAKF,EACD,OAAOC,EAAaviB,EAAMhmB,EAAMogB,GAC7B,GAAI2O,EAAW8B,eAAgB,CAClC,MAAM4X,EAAKziB,EAAK,GACV/kB,EAA+B,mBAAhBwnC,EAAG3jC,UAA2B2jC,EAAG3jC,SAAS9E,GAC/D,GAAIiB,EAAO,CACP,MAAM+L,EAAQu7B,EAAaviB,EAAMhmB,EAAMogB,EAAQnf,GACzCiY,EAAMqvB,EAAaviB,EAAMhmB,EAAMogB,EAAQnf,GAC7C,MAAO,CACHynC,GAAI17B,EAAM07B,GACVC,GAAIzvB,EAAIyvB,GAEhB,CACJ,CACJ,CACA,MAAO,CACHD,GAAI,EACJC,GAAI3iB,EAAKxmB,OAAS,EAE1B,CACC,SAASopC,EAAyBrqC,EAAOyB,EAAM6oC,EAAUlhC,EAAS2gC,GAC/D,MAAM5a,EAAWnvB,EAAMuqC,+BACjB1oB,EAAQyoB,EAAS7oC,GACvB,IAAI,IAAIT,EAAI,EAAGquB,EAAOF,EAASluB,OAAQD,EAAIquB,IAAQruB,EAAE,CACjD,MAAM,MAAE6S,EAAM,KAAE4T,GAAU0H,EAASnuB,IAC7B,GAAEmpC,EAAG,GAAEC,GAAQP,EAAa1a,EAASnuB,GAAIS,EAAMogB,EAAOkoB,GAC5D,IAAI,IAAIS,EAAIL,EAAIK,GAAKJ,IAAMI,EAAE,CACzB,MAAMxzB,EAAUyQ,EAAK+iB,GAChBxzB,EAAQwwB,MACTp+B,EAAQ4N,EAASnD,EAAO22B,EAEhC,CACJ,CACJ,CAUC,SAASC,EAAkBzqC,EAAOsqC,EAAU7oC,EAAMipC,EAAkBC,GACjE,MAAM3gB,EAAQ,GACd,OAAK2gB,GAAqB3qC,EAAM4qC,cAAcN,IAe9CD,EAAyBrqC,EAAOyB,EAAM6oC,GAZf,SAAStzB,EAASyY,EAAc5b,IAC9C82B,IAAqB,OAAe3zB,EAAShX,EAAM+H,UAAW,KAG/DiP,EAAQ6zB,QAAQP,EAASlqC,EAAGkqC,EAASjqC,EAAGqqC,IACxC1gB,EAAMpoB,KAAK,CACPoV,UACAyY,eACA5b,SAGZ,IACgE,GACzDmW,GAfIA,CAgBf,CA0DC,SAAS8gB,EAAgB9qC,EAAOsqC,EAAU7oC,EAAMsoC,EAAWW,EAAkBC,GAC1E,OAAKA,GAAqB3qC,EAAM4qC,cAAcN,GAG9B,MAAT7oC,GAAiBsoC,EAvC3B,SAAkC/pC,EAAOsqC,EAAU7oC,EAAMsoC,EAAWW,EAAkBC,GACnF,IAAI3gB,EAAQ,GACZ,MAAM+gB,EArDT,SAAkCtpC,GAC/B,MAAMupC,GAA8B,IAAvBvpC,EAAKvB,QAAQ,KACpB+qC,GAA8B,IAAvBxpC,EAAKvB,QAAQ,KAC1B,OAAO,SAASgrC,EAAKC,GACjB,MAAMh+B,EAAS69B,EAAO/nC,KAAK8D,IAAImkC,EAAI9qC,EAAI+qC,EAAI/qC,GAAK,EAC1CyL,EAASo/B,EAAOhoC,KAAK8D,IAAImkC,EAAI7qC,EAAI8qC,EAAI9qC,GAAK,EAChD,OAAO4C,KAAKuI,KAAKvI,KAAKmoC,IAAIj+B,EAAQ,GAAKlK,KAAKmoC,IAAIv/B,EAAQ,GAC5D,CACJ,CA6C2Bw/B,CAAyB5pC,GAChD,IAAI6pC,EAAclU,OAAOC,kBA8BzB,OADAgT,EAAyBrqC,EAAOyB,EAAM6oC,GA5BtC,SAAwBtzB,EAASyY,EAAc5b,GAC3C,MAAMg3B,EAAU7zB,EAAQ6zB,QAAQP,EAASlqC,EAAGkqC,EAASjqC,EAAGqqC,GACxD,GAAIX,IAAcc,EACd,OAEJ,MAAMpoC,EAASuU,EAAQu0B,eAAeb,GAEtC,IADsBC,IAAoB3qC,EAAM4qC,cAAcnoC,KACzCooC,EACjB,OAEJ,MAAMt/B,EAAWw/B,EAAeT,EAAU7nC,GACtC8I,EAAW+/B,GACXthB,EAAQ,CACJ,CACIhT,UACAyY,eACA5b,UAGRy3B,EAAc//B,GACPA,IAAa+/B,GACpBthB,EAAMpoB,KAAK,CACPoV,UACAyY,eACA5b,SAGZ,IAEOmW,CACX,CAKyGwhB,CAAyBxrC,EAAOsqC,EAAU7oC,EAAMsoC,EAAWW,EAAkBC,GA7DrL,SAA+B3qC,EAAOsqC,EAAU7oC,EAAMipC,GACnD,IAAI1gB,EAAQ,GAmBZ,OADAqgB,EAAyBrqC,EAAOyB,EAAM6oC,GAjBtC,SAAwBtzB,EAASyY,EAAc5b,GAC3C,MAAM,WAAE8sB,EAAW,SAAEC,GAAc5pB,EAAQy0B,SAAS,CAChD,aACA,YACDf,IACG,MAAExwB,IAAW,OAAkBlD,EAAS,CAC1C5W,EAAGkqC,EAASlqC,EACZC,EAAGiqC,EAASjqC,KAEZ,OAAc6Z,EAAOymB,EAAYC,IACjC5W,EAAMpoB,KAAK,CACPoV,UACAyY,eACA5b,SAGZ,IAEOmW,CACX,CAwCwC0hB,CAAsB1rC,EAAOsqC,EAAU7oC,EAAMipC,GAFtE,EAGf,CACC,SAASiB,EAAa3rC,EAAOsqC,EAAU7oC,EAAMsoC,EAAWW,GACrD,MAAM1gB,EAAQ,GACR4hB,EAAuB,MAATnqC,EAAe,WAAa,WAChD,IAAIoqC,GAAiB,EAWrB,OAVAxB,EAAyBrqC,EAAOyB,EAAM6oC,GAAU,CAACtzB,EAASyY,EAAc5b,KAChEmD,EAAQ40B,GAAatB,EAAS7oC,GAAOipC,KACrC1gB,EAAMpoB,KAAK,CACPoV,UACAyY,eACA5b,UAEJg4B,EAAiBA,GAAkB70B,EAAQ6zB,QAAQP,EAASlqC,EAAGkqC,EAASjqC,EAAGqqC,GAC/E,IAEAX,IAAc8B,EACP,GAEJ7hB,CACX,CACC,IAAI8hB,EAAc,CACfzB,2BACA0B,MAAO,CACVl4B,MAAO7T,EAAO0M,EAAGnM,EAASmqC,GACf,MAAMJ,GAAW,OAAoB59B,EAAG1M,GAClCyB,EAAOlB,EAAQkB,MAAQ,IACvBkpC,EAAmBpqC,EAAQoqC,mBAAoB,EAC/C3gB,EAAQzpB,EAAQwpC,UAAYU,EAAkBzqC,EAAOsqC,EAAU7oC,EAAMipC,EAAkBC,GAAoBG,EAAgB9qC,EAAOsqC,EAAU7oC,GAAM,EAAOipC,EAAkBC,GAC3KpS,EAAW,GACjB,OAAKvO,EAAM/oB,QAGXjB,EAAMuqC,+BAA+Bx3B,SAAS6c,IAC1C,MAAM/b,EAAQmW,EAAM,GAAGnW,MACjBmD,EAAU4Y,EAAKnI,KAAK5T,GACtBmD,IAAYA,EAAQwwB,MACpBjP,EAAS32B,KAAK,CACVoV,UACAyY,aAAcG,EAAK/b,MACnBA,SAER,IAEG0kB,GAbI,EAcf,EACPjF,QAAStzB,EAAO0M,EAAGnM,EAASmqC,GACjB,MAAMJ,GAAW,OAAoB59B,EAAG1M,GAClCyB,EAAOlB,EAAQkB,MAAQ,KACvBkpC,EAAmBpqC,EAAQoqC,mBAAoB,EACrD,IAAI3gB,EAAQzpB,EAAQwpC,UAAYU,EAAkBzqC,EAAOsqC,EAAU7oC,EAAMipC,EAAkBC,GAAoBG,EAAgB9qC,EAAOsqC,EAAU7oC,GAAM,EAAOipC,EAAkBC,GAC/K,GAAI3gB,EAAM/oB,OAAS,EAAG,CAClB,MAAMwuB,EAAezF,EAAM,GAAGyF,aACxBhI,EAAOznB,EAAMy0B,eAAehF,GAAchI,KAChDuC,EAAQ,GACR,IAAI,IAAIhpB,EAAI,EAAGA,EAAIymB,EAAKxmB,SAAUD,EAC9BgpB,EAAMpoB,KAAK,CACPoV,QAASyQ,EAAKzmB,GACdyuB,eACA5b,MAAO7S,GAGnB,CACA,OAAOgpB,CACX,EACPxpB,MAAM,CAACR,EAAO0M,EAAGnM,EAASmqC,IAIRD,EAAkBzqC,GAHR,OAAoB0M,EAAG1M,GAC3BO,EAAQkB,MAAQ,KAEmBipC,EADvBnqC,EAAQoqC,mBAAoB,GAGhEqB,QAAShsC,EAAO0M,EAAGnM,EAASmqC,GACjB,MAAMJ,GAAW,OAAoB59B,EAAG1M,GAClCyB,EAAOlB,EAAQkB,MAAQ,KACvBkpC,EAAmBpqC,EAAQoqC,mBAAoB,EACrD,OAAOG,EAAgB9qC,EAAOsqC,EAAU7oC,EAAMlB,EAAQwpC,UAAWW,EAAkBC,EACvF,EACPvqC,EAAE,CAACJ,EAAO0M,EAAGnM,EAASmqC,IAEJiB,EAAa3rC,GADH,OAAoB0M,EAAG1M,GACH,IAAKO,EAAQwpC,UAAWW,GAExErqC,EAAE,CAACL,EAAO0M,EAAGnM,EAASmqC,IAEJiB,EAAa3rC,GADH,OAAoB0M,EAAG1M,GACH,IAAKO,EAAQwpC,UAAWW,KAKzE,MAAMuB,EAAmB,CACrB,OACA,MACA,QACA,UAEJ,SAASC,EAAiBC,EAAO7B,GAC7B,OAAO6B,EAAM3sB,QAAQ9b,GAAIA,EAAE0oC,MAAQ9B,GACvC,CACA,SAAS+B,EAA4BF,EAAO1qC,GACxC,OAAO0qC,EAAM3sB,QAAQ9b,IAAyC,IAArCuoC,EAAiB/rC,QAAQwD,EAAE0oC,MAAe1oC,EAAE4oC,IAAI7qC,OAASA,GACtF,CACA,SAAS8qC,EAAaJ,EAAOnd,GACzB,OAAOmd,EAAM/1B,MAAK,CAACG,EAAGC,KAClB,MAAMnQ,EAAK2oB,EAAUxY,EAAID,EACnBjQ,EAAK0oB,EAAUzY,EAAIC,EACzB,OAAOnQ,EAAG28B,SAAW18B,EAAG08B,OAAS38B,EAAGwN,MAAQvN,EAAGuN,MAAQxN,EAAG28B,OAAS18B,EAAG08B,MAAM,GAEpF,CA0EA,SAASwJ,EAAeC,EAAY1kC,EAAWwO,EAAGC,GAC9C,OAAOvT,KAAKN,IAAI8pC,EAAWl2B,GAAIxO,EAAUwO,IAAMtT,KAAKN,IAAI8pC,EAAWj2B,GAAIzO,EAAUyO,GACrF,CACA,SAASk2B,EAAiBD,EAAYE,GAClCF,EAAWvrC,IAAM+B,KAAKN,IAAI8pC,EAAWvrC,IAAKyrC,EAAWzrC,KACrDurC,EAAWrrC,KAAO6B,KAAKN,IAAI8pC,EAAWrrC,KAAMurC,EAAWvrC,MACvDqrC,EAAWtrC,OAAS8B,KAAKN,IAAI8pC,EAAWtrC,OAAQwrC,EAAWxrC,QAC3DsrC,EAAWprC,MAAQ4B,KAAKN,IAAI8pC,EAAWprC,MAAOsrC,EAAWtrC,MAC7D,CACA,SAASurC,EAAW7kC,EAAW8kC,EAAQC,EAAQ/c,GAC3C,MAAM,IAAEqc,EAAI,IAAEE,GAASQ,EACjBL,EAAa1kC,EAAU0kC,WAC7B,KAAK,IAAAzrC,GAASorC,GAAM,CACZU,EAAOje,OACP9mB,EAAUqkC,IAAQU,EAAOje,MAE7B,MAAMxb,EAAQ0c,EAAO+c,EAAOz5B,QAAU,CAClCwb,KAAM,EACNzK,MAAO,GAEX/Q,EAAMwb,KAAO5rB,KAAKN,IAAI0Q,EAAMwb,KAAMie,EAAOvP,WAAa+O,EAAI1lC,OAAS0lC,EAAI3lC,OACvEmmC,EAAOje,KAAOxb,EAAMwb,KAAOxb,EAAM+Q,MACjCrc,EAAUqkC,IAAQU,EAAOje,IAC7B,CACIyd,EAAIS,YACJL,EAAiBD,EAAYH,EAAIS,cAErC,MAAMC,EAAW/pC,KAAKN,IAAI,EAAGkqC,EAAOI,WAAaT,EAAeC,EAAY1kC,EAAW,OAAQ,UACzFmlC,EAAYjqC,KAAKN,IAAI,EAAGkqC,EAAOM,YAAcX,EAAeC,EAAY1kC,EAAW,MAAO,WAC1FqlC,EAAeJ,IAAajlC,EAAUslC,EACtCC,EAAgBJ,IAAcnlC,EAAUwlC,EAG9C,OAFAxlC,EAAUslC,EAAIL,EACdjlC,EAAUwlC,EAAIL,EACPJ,EAAOvP,WAAa,CACvBiQ,KAAMJ,EACNK,MAAOH,GACP,CACAE,KAAMF,EACNG,MAAOL,EAEf,CAaA,SAASM,EAAWnQ,EAAYx1B,GAC5B,MAAM0kC,EAAa1kC,EAAU0kC,WAa7B,OAZA,SAA4BkB,GACxB,MAAMC,EAAS,CACXxsC,KAAM,EACNF,IAAK,EACLG,MAAO,EACPF,OAAQ,GAKZ,OAHAwsC,EAAU56B,SAASq5B,IACfwB,EAAOxB,GAAOnpC,KAAKN,IAAIoF,EAAUqkC,GAAMK,EAAWL,GAAK,IAEpDwB,CACX,CACoBC,CAAbtQ,EAAgC,CACnC,OACA,SACoB,CACpB,MACA,UAER,CACA,SAASuQ,EAASC,EAAOhmC,EAAW8kC,EAAQ9c,GACxC,MAAMie,EAAa,GACnB,IAAIhtC,EAAGquB,EAAMyd,EAAQR,EAAK2B,EAAOrvB,EACjC,IAAI5d,EAAI,EAAGquB,EAAO0e,EAAM9sC,OAAQgtC,EAAQ,EAAGjtC,EAAIquB,IAAQruB,EAAE,CACrD8rC,EAASiB,EAAM/sC,GACfsrC,EAAMQ,EAAOR,IACbA,EAAIjkC,OAAOykC,EAAOnmC,OAASoB,EAAUslC,EAAGP,EAAOlmC,QAAUmB,EAAUwlC,EAAGG,EAAWZ,EAAOvP,WAAYx1B,IACpG,MAAM,KAAEylC,EAAK,MAAEC,GAAWb,EAAW7kC,EAAW8kC,EAAQC,EAAQ/c,GAChEke,GAAST,GAAQQ,EAAW/sC,OAC5B2d,EAAUA,GAAW6uB,EAChBnB,EAAI4B,UACLF,EAAWpsC,KAAKkrC,EAExB,CACA,OAAOmB,GAASH,EAASE,EAAYjmC,EAAW8kC,EAAQ9c,IAAWnR,CACvE,CACA,SAASuvB,EAAW7B,EAAKlrC,EAAMF,EAAKyF,EAAOC,GACvC0lC,EAAIprC,IAAMA,EACVorC,EAAIlrC,KAAOA,EACXkrC,EAAIjrC,MAAQD,EAAOuF,EACnB2lC,EAAInrC,OAASD,EAAM0F,EACnB0lC,EAAI3lC,MAAQA,EACZ2lC,EAAI1lC,OAASA,CACjB,CACA,SAASwnC,EAAWL,EAAOhmC,EAAW8kC,EAAQ9c,GAC1C,MAAMse,EAAcxB,EAAOyB,QAC3B,IAAI,EAAEluC,EAAE,EAAEC,GAAO0H,EACjB,IAAK,MAAM+kC,KAAUiB,EAAM,CACvB,MAAMzB,EAAMQ,EAAOR,IACbj5B,EAAQ0c,EAAO+c,EAAOz5B,QAAU,CAClC+Q,MAAO,EACPmqB,OAAQ,EACRvL,OAAQ,GAENA,EAAS8J,EAAO0B,YAAcn7B,EAAM2vB,QAAU,EACpD,GAAI8J,EAAOvP,WAAY,CACnB,MAAM52B,EAAQoB,EAAUslC,EAAIrK,EACtBp8B,EAASyM,EAAMwb,MAAQyd,EAAI1lC,QAC7B,OAAQyM,EAAM5E,SACdpO,EAAIgT,EAAM5E,OAEV69B,EAAI4B,SACJC,EAAW7B,EAAK+B,EAAYjtC,KAAMf,EAAGwsC,EAAOI,WAAaoB,EAAYhtC,MAAQgtC,EAAYjtC,KAAMwF,GAE/FunC,EAAW7B,EAAKvkC,EAAU3G,KAAOiS,EAAMk7B,OAAQluC,EAAGsG,EAAOC,GAE7DyM,EAAM5E,MAAQpO,EACdgT,EAAMk7B,QAAU5nC,EAChBtG,EAAIisC,EAAInrC,MACZ,KAAO,CACH,MAAMyF,EAASmB,EAAUwlC,EAAIvK,EACvBr8B,EAAQ0M,EAAMwb,MAAQyd,EAAI3lC,OAC5B,OAAQ0M,EAAM5E,SACdrO,EAAIiT,EAAM5E,OAEV69B,EAAI4B,SACJC,EAAW7B,EAAKlsC,EAAGiuC,EAAYntC,IAAKyF,EAAOkmC,EAAOM,YAAckB,EAAYltC,OAASktC,EAAYntC,KAEjGitC,EAAW7B,EAAKlsC,EAAG2H,EAAU7G,IAAMmS,EAAMk7B,OAAQ5nC,EAAOC,GAE5DyM,EAAM5E,MAAQrO,EACdiT,EAAMk7B,QAAU3nC,EAChBxG,EAAIksC,EAAIjrC,KACZ,CACJ,CACA0G,EAAU3H,EAAIA,EACd2H,EAAU1H,EAAIA,CAClB,CACA,IAAIouC,EAAU,CACbC,OAAQ1uC,EAAO2kB,GACH3kB,EAAM+tC,QACP/tC,EAAM+tC,MAAQ,IAElBppB,EAAKupB,SAAWvpB,EAAKupB,WAAY,EACjCvpB,EAAK2lB,SAAW3lB,EAAK2lB,UAAY,MACjC3lB,EAAKqe,OAASre,EAAKqe,QAAU,EAC7Bre,EAAKgqB,QAAUhqB,EAAKgqB,SAAW,WAC3B,MAAO,CACH,CACIC,EAAG,EACHthC,KAAMvF,GACF4c,EAAKrX,KAAKvF,EACd,GAGZ,EACA/H,EAAM+tC,MAAMnsC,KAAK+iB,EACrB,EACHkqB,UAAW7uC,EAAO8uC,GACX,MAAMj7B,EAAQ7T,EAAM+tC,MAAQ/tC,EAAM+tC,MAAM7tC,QAAQ4uC,IAAe,GAChD,IAAXj7B,GACA7T,EAAM+tC,MAAM9vB,OAAOpK,EAAO,EAElC,EACH8Z,UAAW3tB,EAAO2kB,EAAMpkB,GACjBokB,EAAKupB,SAAW3tC,EAAQ2tC,SACxBvpB,EAAK2lB,SAAW/pC,EAAQ+pC,SACxB3lB,EAAKqe,OAASziC,EAAQyiC,MAC1B,EACH36B,OAAQrI,EAAO2G,EAAOC,EAAQmoC,GACvB,IAAK/uC,EACD,OAEJ,MAAMsuC,GAAU,OAAUtuC,EAAMO,QAAQusC,OAAOwB,SACzCU,EAAiB/rC,KAAKN,IAAIgE,EAAQ2nC,EAAQ3nC,MAAO,GACjDsoC,EAAkBhsC,KAAKN,IAAIiE,EAAS0nC,EAAQ1nC,OAAQ,GACpDmnC,EAvMd,SAA0BA,GACtB,MAAMmB,EAxDV,SAAmBnB,GACf,MAAMmB,EAAc,GACpB,IAAIluC,EAAGquB,EAAMid,EAAKF,EAAK/4B,EAAOm7B,EAC9B,IAAIxtC,EAAI,EAAGquB,GAAQ0e,GAAS,IAAI9sC,OAAQD,EAAIquB,IAAQruB,EAChDsrC,EAAMyB,EAAM/sC,KACTspC,SAAU8B,EAAM7rC,SAAW8S,QAAQm7B,cAAa,IAAUlC,GAC7D4C,EAAYttC,KAAK,CACbiS,MAAO7S,EACPsrC,MACAF,MACA7O,WAAY+O,EAAIvpC,eAChBigC,OAAQsJ,EAAItJ,OACZ3vB,MAAOA,GAAS+4B,EAAM/4B,EACtBm7B,gBAGR,OAAOU,CACX,CAuCwBC,CAAUpB,GACxBG,EAAW3B,EAAa2C,EAAY1vB,QAAQ4vB,GAAOA,EAAK9C,IAAI4B,YAAW,GACvE9sC,EAAOmrC,EAAaL,EAAiBgD,EAAa,SAAS,GAC3D7tC,EAAQkrC,EAAaL,EAAiBgD,EAAa,UACnDhuC,EAAMqrC,EAAaL,EAAiBgD,EAAa,QAAQ,GACzD/tC,EAASorC,EAAaL,EAAiBgD,EAAa,WACpDG,EAAmBhD,EAA4B6C,EAAa,KAC5DI,EAAiBjD,EAA4B6C,EAAa,KAChE,MAAO,CACHhB,WACAqB,WAAYnuC,EAAK0d,OAAO5d,GACxBsuC,eAAgBnuC,EAAMyd,OAAOwwB,GAAgBxwB,OAAO3d,GAAQ2d,OAAOuwB,GACnEtnC,UAAWmkC,EAAiBgD,EAAa,aACzCO,SAAUruC,EAAK0d,OAAOzd,GAAOyd,OAAOwwB,GACpC/R,WAAYr8B,EAAI4d,OAAO3d,GAAQ2d,OAAOuwB,GAE9C,CAsLsBK,CAAiB1vC,EAAM+tC,OAC/B4B,EAAgB5B,EAAM0B,SACtBG,EAAkB7B,EAAMxQ,YAC9B,OAAKv9B,EAAM+tC,OAAQzB,IACiB,mBAArBA,EAAIuD,cACXvD,EAAIuD,cACR,IAEJ,MAAMC,EAA0BH,EAAc/kB,QAAO,CAACqX,EAAOmN,IAAOA,EAAK9C,IAAI/rC,UAAwC,IAA7B6uC,EAAK9C,IAAI/rC,QAAQ4iC,QAAoBlB,EAAQA,EAAQ,GAAG,IAAM,EAChJ4K,EAAS/rC,OAAO44B,OAAO,CACzBuT,WAAYtmC,EACZwmC,YAAavmC,EACb0nC,UACAU,iBACAC,kBACAc,aAAcf,EAAiB,EAAIc,EACnCE,cAAef,EAAkB,IAE/BxC,EAAa3rC,OAAOgR,OAAO,CAAC,EAAGw8B,GACrC5B,EAAiBD,GAAY,OAAUsC,IACvC,MAAMhnC,EAAYjH,OAAOgR,OAAO,CAC5B26B,aACAY,EAAG2B,EACHzB,EAAG0B,EACH7uC,EAAGkuC,EAAQltC,KACXf,EAAGiuC,EAAQptC,KACZotC,GACGve,EArPb,SAAuB0e,EAAS5B,GAC7B,MAAM9c,EAnBV,SAAqB0e,GACjB,MAAM1e,EAAS,CAAC,EAChB,IAAK,MAAMqf,KAAQX,EAAQ,CACvB,MAAM,MAAEp7B,EAAM,IAAE+4B,EAAI,YAAEoC,GAAiBY,EACvC,IAAK/7B,IAAU44B,EAAiBgE,SAAS7D,GACrC,SAEJ,MAAM8D,EAASngB,EAAO1c,KAAW0c,EAAO1c,GAAS,CAC7C+Q,MAAO,EACPmqB,OAAQ,EACRvL,OAAQ,EACRnU,KAAM,IAEVqhB,EAAO9rB,QACP8rB,EAAOlN,QAAUwL,CACrB,CACA,OAAOze,CACX,CAEmBogB,CAAY1B,IACrB,aAAEsB,EAAa,cAAEC,GAAmBnD,EAC1C,IAAI7rC,EAAGquB,EAAMyd,EACb,IAAI9rC,EAAI,EAAGquB,EAAOof,EAAQxtC,OAAQD,EAAIquB,IAAQruB,EAAE,CAC5C8rC,EAAS2B,EAAQztC,GACjB,MAAM,SAAEktC,GAAcpB,EAAOR,IACvBj5B,EAAQ0c,EAAO+c,EAAOz5B,OACtBgY,EAAShY,GAASy5B,EAAO0B,YAAcn7B,EAAM2vB,OAC/C8J,EAAOvP,YACPuP,EAAOnmC,MAAQ0kB,EAASA,EAAS0kB,EAAe7B,GAAYrB,EAAOmC,eACnElC,EAAOlmC,OAASopC,IAEhBlD,EAAOnmC,MAAQopC,EACfjD,EAAOlmC,OAASykB,EAASA,EAAS2kB,EAAgB9B,GAAYrB,EAAOoC,gBAE7E,CACA,OAAOlf,CACX,CAmOuBqgB,CAAcT,EAAc7wB,OAAO8wB,GAAkB/C,GACpEiB,EAASC,EAAMG,SAAUnmC,EAAW8kC,EAAQ9c,GAC5C+d,EAAS6B,EAAe5nC,EAAW8kC,EAAQ9c,GACvC+d,EAAS8B,EAAiB7nC,EAAW8kC,EAAQ9c,IAC7C+d,EAAS6B,EAAe5nC,EAAW8kC,EAAQ9c,GA3KvD,SAA0BhoB,GACtB,MAAM0kC,EAAa1kC,EAAU0kC,WAC7B,SAAS4D,EAAUjE,GACf,MAAMkE,EAASrtC,KAAKN,IAAI8pC,EAAWL,GAAOrkC,EAAUqkC,GAAM,GAE1D,OADArkC,EAAUqkC,IAAQkE,EACXA,CACX,CACAvoC,EAAU1H,GAAKgwC,EAAU,OACzBtoC,EAAU3H,GAAKiwC,EAAU,QACzBA,EAAU,SACVA,EAAU,SACd,CAkKQE,CAAiBxoC,GACjBqmC,EAAWL,EAAMwB,WAAYxnC,EAAW8kC,EAAQ9c,GAChDhoB,EAAU3H,GAAK2H,EAAUslC,EACzBtlC,EAAU1H,GAAK0H,EAAUwlC,EACzBa,EAAWL,EAAMyB,eAAgBznC,EAAW8kC,EAAQ9c,GACpD/vB,EAAM+H,UAAY,CACd3G,KAAM2G,EAAU3G,KAChBF,IAAK6G,EAAU7G,IACfG,MAAO0G,EAAU3G,KAAO2G,EAAUslC,EAClClsC,OAAQ4G,EAAU7G,IAAM6G,EAAUwlC,EAClC3mC,OAAQmB,EAAUwlC,EAClB5mC,MAAOoB,EAAUslC,IAErB,OAAKU,EAAMhmC,WAAY+kC,IACnB,MAAMR,EAAMQ,EAAOR,IACnBxrC,OAAOgR,OAAOw6B,EAAKtsC,EAAM+H,WACzBukC,EAAIjkC,OAAON,EAAUslC,EAAGtlC,EAAUwlC,EAAG,CACjCnsC,KAAM,EACNF,IAAK,EACLG,MAAO,EACPF,OAAQ,GACV,GAEV,GAGJ,MAAMqvC,GACLC,eAAepmC,EAAQu0B,GAAc,CACrC8R,eAAep+B,GACR,OAAO,CACX,CACH7I,iBAAiBzJ,EAAO2H,EAAMgpC,GAAW,CACzCrnC,oBAAoBtJ,EAAO2H,EAAMgpC,GAAW,CAC5CC,sBACO,OAAO,CACX,CACHC,eAAe75B,EAASrQ,EAAOC,EAAQg4B,GAGhC,OAFAj4B,EAAQ1D,KAAKN,IAAI,EAAGgE,GAASqQ,EAAQrQ,OACrCC,EAASA,GAAUoQ,EAAQpQ,OACpB,CACHD,QACAC,OAAQ3D,KAAKN,IAAI,EAAGi8B,EAAc37B,KAAKqpB,MAAM3lB,EAAQi4B,GAAeh4B,GAE5E,CACHkqC,WAAWzmC,GACJ,OAAO,CACX,CACH0mC,aAAavjB,GACV,EAGJ,MAAMwjB,WAAsBR,GACxBC,eAAe9rB,GACX,OAAOA,GAAQA,EAAKkR,YAAclR,EAAKkR,WAAW,OAAS,IAC/D,CACAkb,aAAavjB,GACTA,EAAOjtB,QAAQutB,WAAY,CAC/B,EAGJ,MAAMmjB,GAAc,WACbC,GAAc,CACjB/yB,WAAY,YACZC,UAAW,YACXC,SAAU,UACV8yB,aAAc,aACdr0B,YAAa,YACbC,YAAa,YACbC,UAAW,UACXo0B,aAAc,WACdl0B,WAAY,YAEVm0B,GAAiBxvB,GAAkB,OAAVA,GAA4B,KAAVA,EAoC3CyvB,KAAuB,KAA+B,CACxDC,SAAS,GAKb,SAASC,GAAexxC,EAAO2H,EAAMgpC,GACjC3wC,EAAMqK,OAAOf,oBAAoB3B,EAAMgpC,EAAUW,GACrD,CAYA,SAASG,GAAiBC,EAAUrnC,GAChC,IAAK,MAAMkL,KAAQm8B,EACf,GAAIn8B,IAASlL,GAAUkL,EAAKo8B,SAAStnC,GACjC,OAAO,CAGnB,CACA,SAASunC,GAAqB5xC,EAAO2H,EAAMgpC,GACvC,MAAMtmC,EAASrK,EAAMqK,OACfwnC,EAAW,IAAIC,kBAAkBC,IACnC,IAAIC,GAAU,EACd,IAAK,MAAMtV,KAASqV,EAChBC,EAAUA,GAAWP,GAAiB/U,EAAMuV,WAAY5nC,GACxD2nC,EAAUA,IAAYP,GAAiB/U,EAAMwV,aAAc7nC,GAE3D2nC,GACArB,GACJ,IAMJ,OAJAkB,EAASM,QAAQ5nC,SAAU,CACvB6nC,WAAW,EACXC,SAAS,IAENR,CACX,CACA,SAASS,GAAqBtyC,EAAO2H,EAAMgpC,GACvC,MAAMtmC,EAASrK,EAAMqK,OACfwnC,EAAW,IAAIC,kBAAkBC,IACnC,IAAIC,GAAU,EACd,IAAK,MAAMtV,KAASqV,EAChBC,EAAUA,GAAWP,GAAiB/U,EAAMwV,aAAc7nC,GAC1D2nC,EAAUA,IAAYP,GAAiB/U,EAAMuV,WAAY5nC,GAEzD2nC,GACArB,GACJ,IAMJ,OAJAkB,EAASM,QAAQ5nC,SAAU,CACvB6nC,WAAW,EACXC,SAAS,IAENR,CACX,CACA,MAAMU,GAAqB,IAAIxpB,IAC/B,IAAIypB,GAAsB,EAC1B,SAASC,KACL,MAAMC,EAAMpoC,OAAOqoC,iBACfD,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmBx/B,SAAQ,CAAC6/B,EAAQ5yC,KAC5BA,EAAM6yC,0BAA4BH,GAClCE,GACJ,IAER,CAaA,SAASE,GAAqB9yC,EAAO2H,EAAMgpC,GACvC,MAAMtmC,EAASrK,EAAMqK,OACf0oC,EAAY1oC,IAAU,OAAeA,GAC3C,IAAK0oC,EACD,OAEJ,MAAMH,GAAS,QAAU,CAACjsC,EAAOC,KAC7B,MAAMymC,EAAI0F,EAAUC,YACpBrC,EAAShqC,EAAOC,GACZymC,EAAI0F,EAAUC,aACdrC,GACJ,GACDrmC,QACGunC,EAAW,IAAIoB,gBAAgBlB,IACjC,MAAMrV,EAAQqV,EAAQ,GAChBprC,EAAQ+1B,EAAMwW,YAAYvsC,MAC1BC,EAAS81B,EAAMwW,YAAYtsC,OACnB,IAAVD,GAA0B,IAAXC,GAGnBgsC,EAAOjsC,EAAOC,EAAO,IAIzB,OAFAirC,EAASM,QAAQY,GAlCrB,SAAuC/yC,EAAO4yC,GACrCL,GAAmB1jB,MACpBvkB,OAAOb,iBAAiB,SAAUgpC,IAEtCF,GAAmBjwC,IAAItC,EAAO4yC,EAClC,CA8BIO,CAA8BnzC,EAAO4yC,GAC9Bf,CACX,CACA,SAASuB,GAAgBpzC,EAAO2H,EAAMkqC,GAC9BA,GACAA,EAASwB,aAEA,WAAT1rC,GApCR,SAAyC3H,GACrCuyC,GAAmB7gC,OAAO1R,GACrBuyC,GAAmB1jB,MACpBvkB,OAAOhB,oBAAoB,SAAUmpC,GAE7C,CAgCQa,CAAgCtzC,EAExC,CACA,SAASuzC,GAAqBvzC,EAAO2H,EAAMgpC,GACvC,MAAMtmC,EAASrK,EAAMqK,OACfmpC,GAAQ,QAAW7zC,IACH,OAAdK,EAAM0N,KACNijC,EAtHZ,SAAyBhxC,EAAOK,GAC5B,MAAM2H,EAAOupC,GAAYvxC,EAAMgI,OAAShI,EAAMgI,MACxC,EAAEvH,EAAE,EAAEC,IAAO,OAAoBV,EAAOK,GAC9C,MAAO,CACH2H,OACA3H,QACAyzC,OAAQ9zC,EACRS,OAASH,IAANG,EAAkBA,EAAI,KACzBC,OAASJ,IAANI,EAAkBA,EAAI,KAEjC,CA4GqBqzC,CAAgB/zC,EAAOK,GACpC,GACDA,GAEH,OAhIJ,SAAqBuV,EAAM5N,EAAMgpC,GAC7Bp7B,EAAK9L,iBAAiB9B,EAAMgpC,EAAUW,GAC1C,CA6HIqC,CAAYtpC,EAAQ1C,EAAM6rC,GACnBA,CACX,CACC,MAAMI,WAAoBpD,GAC1BC,eAAepmC,EAAQu0B,GAChB,MAAMtsB,EAAUjI,GAAUA,EAAOwrB,YAAcxrB,EAAOwrB,WAAW,MACjE,OAAIvjB,GAAWA,EAAQjI,SAAWA,GA3KzC,SAAoBA,EAAQu0B,GACzB,MAAM9d,EAAQzW,EAAOyW,MACf+yB,EAAexpC,EAAOypC,aAAa,UACnCC,EAAc1pC,EAAOypC,aAAa,SAcxC,GAbAzpC,EAAO4mC,IAAe,CAClBxnB,QAAS,CACL7iB,OAAQitC,EACRltC,MAAOotC,EACPjzB,MAAO,CACHqiB,QAASriB,EAAMqiB,QACfv8B,OAAQka,EAAMla,OACdD,MAAOma,EAAMna,SAIzBma,EAAMqiB,QAAUriB,EAAMqiB,SAAW,QACjCriB,EAAMkzB,UAAYlzB,EAAMkzB,WAAa,aACjC3C,GAAc0C,GAAc,CAC5B,MAAME,GAAe,OAAa5pC,EAAQ,cACrBpK,IAAjBg0C,IACA5pC,EAAO1D,MAAQstC,EAEvB,CACA,GAAI5C,GAAcwC,GACd,GAA4B,KAAxBxpC,EAAOyW,MAAMla,OACbyD,EAAOzD,OAASyD,EAAO1D,OAASi4B,GAAe,OAC5C,CACH,MAAMsV,GAAgB,OAAa7pC,EAAQ,eACrBpK,IAAlBi0C,IACA7pC,EAAOzD,OAASstC,EAExB,CAGR,CA0IYC,CAAW9pC,EAAQu0B,GACZtsB,GAEJ,IACX,CACHo+B,eAAep+B,GACR,MAAMjI,EAASiI,EAAQjI,OACvB,IAAKA,EAAO4mC,IACR,OAAO,EAEX,MAAMxnB,EAAUpf,EAAO4mC,IAAaxnB,QACpC,CACI,SACA,SACF1W,SAAS1P,IACP,MAAMwe,EAAQ4H,EAAQpmB,IAClB,OAAcwe,GACdxX,EAAO+pC,gBAAgB/wC,GAEvBgH,EAAOgqC,aAAahxC,EAAMwe,EAC9B,IAEJ,MAAMf,EAAQ2I,EAAQ3I,OAAS,CAAC,EAMhC,OALAhgB,OAAOC,KAAK+f,GAAO/N,SAASrT,IACxB2K,EAAOyW,MAAMphB,GAAOohB,EAAMphB,EAAI,IAElC2K,EAAO1D,MAAQ0D,EAAO1D,aACf0D,EAAO4mC,KACP,CACX,CACHxnC,iBAAiBzJ,EAAO2H,EAAMgpC,GACvBl9B,KAAKnK,oBAAoBtJ,EAAO2H,GAChC,MAAM2sC,EAAUt0C,EAAMu0C,WAAav0C,EAAMu0C,SAAW,CAAC,GAM/CnrC,EALW,CACborC,OAAQ5C,GACR6C,OAAQnC,GACRM,OAAQE,IAEanrC,IAAS4rC,GAClCe,EAAQ3sC,GAAQyB,EAAQpJ,EAAO2H,EAAMgpC,EACzC,CACHrnC,oBAAoBtJ,EAAO2H,GACpB,MAAM2sC,EAAUt0C,EAAMu0C,WAAav0C,EAAMu0C,SAAW,CAAC,GAC/Cf,EAAQc,EAAQ3sC,GACjB6rC,KAGY,CACbgB,OAAQpB,GACRqB,OAAQrB,GACRR,OAAQQ,IAEazrC,IAAS6pC,IAC1BxxC,EAAO2H,EAAM6rC,GACrBc,EAAQ3sC,QAAQ1H,EACpB,CACA2wC,sBACI,OAAOtmC,OAAOqoC,gBAClB,CACH9B,eAAexmC,EAAQ1D,EAAOC,EAAQg4B,GAC/B,OAAO,OAAev0B,EAAQ1D,EAAOC,EAAQg4B,EACjD,CACHkS,WAAWzmC,GACJ,MAAM0oC,GAAY,OAAe1oC,GACjC,SAAU0oC,IAAaA,EAAU2B,YACrC,EAUJ,MAAMC,GACF7iB,gBAAkB,CAAC,EACnBA,0BAAuB7xB,EACvBG,EACAC,EACAysB,QAAS,EACTvsB,QACA8tB,YACAumB,gBAAgBlK,GACZ,MAAM,EAAEtqC,EAAE,EAAEC,GAAOoT,KAAKg4B,SAAS,CAC7B,IACA,KACDf,GACH,MAAO,CACHtqC,IACAC,IAER,CACAw0C,WACI,OAAO,OAASphC,KAAKrT,KAAM,OAASqT,KAAKpT,EAC7C,CACAorC,SAAS3vB,EAAOg5B,GACZ,MAAM3rB,EAAQ1V,KAAK4a,YACnB,IAAKymB,IAAU3rB,EAEX,OAAO1V,KAEX,MAAMshC,EAAM,CAAC,EAIb,OAHAj5B,EAAM/I,SAAS1P,IACX0xC,EAAI1xC,GAAQ8lB,EAAM9lB,IAAS8lB,EAAM9lB,GAAMypB,SAAW3D,EAAM9lB,GAAMupB,IAAMnZ,KAAKpQ,EAAK,IAE3E0xC,CACX,EA2EH,SAASvN,GAAKjL,EAAOyY,EAAUxW,EAASyW,EAAYC,GACjD,MAAMzmC,GAAQ,IAAA/K,GAAeuxC,EAAY,GACnCt6B,EAAM1X,KAAKL,KAAI,IAAAc,GAAewxC,EAAU3Y,EAAMt7B,QAASs7B,EAAMt7B,QACnE,IACIA,EAAQD,EAAG4lC,EADXxiB,EAAQ,EAQZ,IANAoa,EAAUv7B,KAAKkyC,KAAK3W,GAChB0W,IACAj0C,EAASi0C,EAAWD,EACpBzW,EAAUv9B,EAASgC,KAAKqpB,MAAMrrB,EAASu9B,IAE3CoI,EAAOn4B,EACDm4B,EAAO,GACTxiB,IACAwiB,EAAO3jC,KAAKqB,MAAMmK,EAAQ2V,EAAQoa,GAEtC,IAAIx9B,EAAIiC,KAAKN,IAAI8L,EAAO,GAAIzN,EAAI2Z,EAAK3Z,IAC7BA,IAAM4lC,IACNoO,EAASpzC,KAAK26B,EAAMv7B,IACpBojB,IACAwiB,EAAO3jC,KAAKqB,MAAMmK,EAAQ2V,EAAQoa,GAG9C,CAeA,MACM4W,GAAiB,CAACz0C,EAAO08B,EAAMn5B,IAAkB,QAATm5B,GAA2B,SAATA,EAAkB18B,EAAM08B,GAAQn5B,EAASvD,EAAM08B,GAAQn5B,EACjHmxC,GAAgB,CAACC,EAAaC,IAAgBtyC,KAAKL,IAAI2yC,GAAiBD,EAAaA,GAC1F,SAASE,GAAOra,EAAKsa,GAClB,MAAMC,EAAS,GACTC,EAAYxa,EAAIl6B,OAASw0C,EACzBG,EAAMza,EAAIl6B,OAChB,IAAID,EAAI,EACR,KAAMA,EAAI40C,EAAK50C,GAAK20C,EAChBD,EAAO9zC,KAAKu5B,EAAIl4B,KAAKqpB,MAAMtrB,KAE/B,OAAO00C,CACX,CACC,SAASG,GAAoBl1C,EAAOkT,EAAOiiC,GACxC,MAAM70C,EAASN,EAAM47B,MAAMt7B,OACrB80C,EAAa9yC,KAAKL,IAAIiR,EAAO5S,EAAS,GACtCwN,EAAQ9N,EAAMmlC,YACdnrB,EAAMha,EAAMolC,UACZiQ,EAAU,KAChB,IACI9xC,EADA+xC,EAAYt1C,EAAM67B,gBAAgBuZ,GAEtC,KAAID,IAEI5xC,EADW,IAAXjD,EACSgC,KAAKN,IAAIszC,EAAYxnC,EAAOkM,EAAMs7B,GAC1B,IAAVpiC,GACGlT,EAAM67B,gBAAgB,GAAKyZ,GAAa,GAExCA,EAAYt1C,EAAM67B,gBAAgBuZ,EAAa,IAAM,EAEnEE,GAAaF,EAAaliC,EAAQ3P,GAAUA,EACxC+xC,EAAYxnC,EAAQunC,GAAWC,EAAYt7B,EAAMq7B,IAIzD,OAAOC,CACX,CAcC,SAASC,GAAkB31C,GACxB,OAAOA,EAAQ41C,UAAY51C,EAAQ61C,WAAa,CACpD,CACC,SAASC,GAAe91C,EAAS+C,GAC9B,IAAK/C,EAAQ4iC,QACT,OAAO,EAEX,MAAMmT,GAAO,QAAO/1C,EAAQ+1C,KAAMhzC,GAC5BgrC,GAAU,OAAU/tC,EAAQ+tC,SAElC,QADc,OAAQ/tC,EAAQ2+B,MAAQ3+B,EAAQ2+B,KAAKj+B,OAAS,GAC7Cq1C,EAAKC,WAAajI,EAAQ1nC,MAC7C,CAcA,SAAS4vC,GAAWC,EAAOnM,EAAUtb,GAChC,IAAI+lB,GAAM,QAAmB0B,GAI9B,OAHIznB,GAAwB,UAAbsb,IAAyBtb,GAAwB,UAAbsb,KAC/CyK,EA7Ea,CAAC0B,GAAkB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EA6E1EC,CAAa3B,IAEhBA,CACX,CAwCA,MAAM4B,WAAchC,GAChBhgC,YAAYoX,GACRyT,QACC/rB,KAAKhQ,GAAKsoB,EAAItoB,GACdgQ,KAAK9L,KAAOokB,EAAIpkB,KAChB8L,KAAKlT,aAAUN,EACfwT,KAAK/F,IAAMqe,EAAIre,IACf+F,KAAKzT,MAAQ+rB,EAAI/rB,MACjByT,KAAKvS,SAAMjB,EACXwT,KAAKtS,YAASlB,EACdwT,KAAKrS,UAAOnB,EACZwT,KAAKpS,WAAQpB,EACbwT,KAAK9M,WAAQ1G,EACbwT,KAAK7M,YAAS3G,EACfwT,KAAKmjC,SAAW,CACZx1C,KAAM,EACNC,MAAO,EACPH,IAAK,EACLC,OAAQ,GAEXsS,KAAKmuB,cAAW3hC,EAChBwT,KAAKouB,eAAY5hC,EACjBwT,KAAKojC,gBAAa52C,EAClBwT,KAAKqjC,mBAAgB72C,EACrBwT,KAAKsjC,iBAAc92C,EACnBwT,KAAKujC,kBAAe/2C,EACpBwT,KAAKhS,UAAOxB,EACZwT,KAAKwjC,mBAAgBh3C,EACtBwT,KAAK7Q,SAAM3C,EACXwT,KAAK9Q,SAAM1C,EACXwT,KAAKyjC,YAASj3C,EACbwT,KAAK8oB,MAAQ,GACb9oB,KAAK0jC,eAAiB,KACtB1jC,KAAK2jC,YAAc,KACnB3jC,KAAK4jC,YAAc,KACpB5jC,KAAK4oB,QAAU,EACf5oB,KAAK6jC,WAAa,EAClB7jC,KAAK8jC,kBAAoB,CAAC,EACzB9jC,KAAKqyB,iBAAc7lC,EACnBwT,KAAKsyB,eAAY9lC,EAClBwT,KAAKw2B,gBAAiB,EACtBx2B,KAAK+jC,cAAWv3C,EAChBwT,KAAKgkC,cAAWx3C,EAChBwT,KAAKikC,mBAAgBz3C,EACrBwT,KAAKkkC,mBAAgB13C,EACrBwT,KAAKmkC,aAAe,EACpBnkC,KAAKokC,aAAe,EACpBpkC,KAAKsoB,OAAS,CAAC,EACftoB,KAAKqkC,mBAAoB,EACzBrkC,KAAKkf,cAAW1yB,CACpB,CACHgZ,KAAK1Y,GACEkT,KAAKlT,QAAUA,EAAQw3C,WAAWtkC,KAAKoiB,cACvCpiB,KAAKhS,KAAOlB,EAAQkB,KACpBgS,KAAKgkC,SAAWhkC,KAAKtP,MAAM5D,EAAQqC,KACnC6Q,KAAK+jC,SAAW/jC,KAAKtP,MAAM5D,EAAQoC,KACnC8Q,KAAKkkC,cAAgBlkC,KAAKtP,MAAM5D,EAAQy3C,cACxCvkC,KAAKikC,cAAgBjkC,KAAKtP,MAAM5D,EAAQ03C,aAC5C,CACH9zC,MAAM20B,EAAKjlB,GACJ,OAAOilB,CACX,CACHnB,gBACO,IAAI,SAAE8f,EAAS,SAAED,EAAS,cAAEG,EAAc,cAAED,GAAmBjkC,KAK/D,OAJAgkC,GAAW,OAAgBA,EAAUrgB,OAAOC,mBAC5CmgB,GAAW,OAAgBA,EAAUpgB,OAAOE,mBAC5CqgB,GAAgB,OAAgBA,EAAevgB,OAAOC,mBACtDqgB,GAAgB,OAAgBA,EAAetgB,OAAOE,mBAC/C,CACH10B,KAAK,OAAgB60C,EAAUE,GAC/Bh1C,KAAK,OAAgB60C,EAAUE,GAC/BjgB,YAAY,OAAeggB,GAC3B/f,YAAY,OAAe8f,GAEnC,CACHzgB,UAAUC,GACH,IACIt0B,GADA,IAAEE,EAAI,IAAED,EAAI,WAAE80B,EAAW,WAAEC,GAAgBjkB,KAAKkkB,gBAEpD,GAAIF,GAAcC,EACd,MAAO,CACH90B,MACAD,OAGR,MAAMu1C,EAAQzkC,KAAK6c,0BACnB,IAAI,IAAItvB,EAAI,EAAGquB,EAAO6oB,EAAMj3C,OAAQD,EAAIquB,IAAQruB,EAC5C0B,EAAQw1C,EAAMl3C,GAAGwvB,WAAWuG,UAAUtjB,KAAMujB,GACvCS,IACD70B,EAAMK,KAAKL,IAAIA,EAAKF,EAAME,MAEzB80B,IACD/0B,EAAMM,KAAKN,IAAIA,EAAKD,EAAMC,MAKlC,OAFAC,EAAM80B,GAAc90B,EAAMD,EAAMA,EAAMC,EACtCD,EAAM80B,GAAc70B,EAAMD,EAAMC,EAAMD,EAC/B,CACHC,KAAK,OAAgBA,GAAK,OAAgBD,EAAKC,IAC/CD,KAAK,OAAgBA,GAAK,OAAgBC,EAAKD,IAEvD,CACHoqC,aACO,MAAO,CACH3rC,KAAMqS,KAAKsjC,aAAe,EAC1B71C,IAAKuS,KAAKojC,YAAc,EACxBx1C,MAAOoS,KAAKujC,cAAgB,EAC5B71C,OAAQsS,KAAKqjC,eAAiB,EAEtC,CACHqB,WACO,OAAO1kC,KAAK8oB,KAChB,CACH12B,YACO,MAAM4hB,EAAOhU,KAAKzT,MAAMynB,KACxB,OAAOhU,KAAKlT,QAAQ+1B,SAAW7iB,KAAK1Q,eAAiB0kB,EAAK2wB,QAAU3wB,EAAK4wB,UAAY5wB,EAAK6O,QAAU,EACxG,CACHgiB,cAAcvwC,EAAY0L,KAAKzT,MAAM+H,WAE9B,OADc0L,KAAK2jC,cAAgB3jC,KAAK2jC,YAAc3jC,KAAK8kC,mBAAmBxwC,GAElF,CACA8nC,eACIp8B,KAAKsoB,OAAS,CAAC,EACftoB,KAAKqkC,mBAAoB,CAC7B,CACArnC,gBACI,OAASgD,KAAKlT,QAAQkQ,aAAc,CAChCgD,MAER,CACHpL,OAAOu5B,EAAUC,EAAW2W,GACrB,MAAM,YAAEpV,EAAY,MAAEqV,EAAQlc,MAAOmc,GAAcjlC,KAAKlT,QAClDo4C,EAAaD,EAASC,WAC5BllC,KAAKhD,eACLgD,KAAKmuB,SAAWA,EAChBnuB,KAAKouB,UAAYA,EACjBpuB,KAAKmjC,SAAW4B,EAAU13C,OAAOgR,OAAO,CACpC1Q,KAAM,EACNC,MAAO,EACPH,IAAK,EACLC,OAAQ,GACTq3C,GACH/kC,KAAK8oB,MAAQ,KACb9oB,KAAK4jC,YAAc,KACnB5jC,KAAK0jC,eAAiB,KACtB1jC,KAAK2jC,YAAc,KACnB3jC,KAAKmlC,sBACLnlC,KAAKolC,gBACLplC,KAAKqlC,qBACLrlC,KAAK6jC,WAAa7jC,KAAK1Q,eAAiB0Q,KAAK9M,MAAQ6xC,EAAQp3C,KAAOo3C,EAAQn3C,MAAQoS,KAAK7M,OAAS4xC,EAAQt3C,IAAMs3C,EAAQr3C,OACnHsS,KAAKqkC,oBACNrkC,KAAKslC,mBACLtlC,KAAKulC,sBACLvlC,KAAKwlC,kBACLxlC,KAAKyjC,QAAS,OAAUzjC,KAAMglC,EAAOrV,GACrC3vB,KAAKqkC,mBAAoB,GAE7BrkC,KAAKylC,mBACLzlC,KAAK8oB,MAAQ9oB,KAAK0lC,cAAgB,GAClC1lC,KAAK2lC,kBACL,MAAMC,EAAkBV,EAAallC,KAAK8oB,MAAMt7B,OAChDwS,KAAK6lC,sBAAsBD,EAAkB7D,GAAO/hC,KAAK8oB,MAAOoc,GAAcllC,KAAK8oB,OACnF9oB,KAAKka,YACLla,KAAK8lC,+BACL9lC,KAAK+lC,yBACL/lC,KAAKgmC,8BACDf,EAASvV,UAAYuV,EAASgB,UAAgC,SAApBhB,EAAS5kC,UACnDL,KAAK8oB,MA3YjB,SAAkB57B,EAAO47B,GACrB,MAAMmc,EAAW/3C,EAAMJ,QAAQg8B,MACzBod,EAyBV,SAA2Bh5C,GACvB,MAAMuD,EAASvD,EAAMJ,QAAQ2D,OACvBkyC,EAAaz1C,EAAMi5C,YACnBC,EAAWl5C,EAAM07B,QAAU+Z,GAAclyC,EAAS,EAAI,GACtD41C,EAAWn5C,EAAM22C,WAAalB,EACpC,OAAOnzC,KAAKqpB,MAAMrpB,KAAKL,IAAIi3C,EAAUC,GACzC,CA/B+BC,CAAkBp5C,GACvCq5C,EAAa/2C,KAAKL,IAAI81C,EAASnD,eAAiBoE,EAAoBA,GACpEM,EAAevB,EAASwB,MAAM36C,QA6CvC,SAAyBg9B,GACtB,MAAMmZ,EAAS,GACf,IAAI10C,EAAGquB,EACP,IAAIruB,EAAI,EAAGquB,EAAOkN,EAAMt7B,OAAQD,EAAIquB,EAAMruB,IAClCu7B,EAAMv7B,GAAGk5C,OACTxE,EAAO9zC,KAAKZ,GAGpB,OAAO00C,CACX,CAtDkDyE,CAAgB5d,GAAS,GACjE6d,EAAkBH,EAAah5C,OAC/Bo5C,EAAQJ,EAAa,GACrB1+B,EAAO0+B,EAAaG,EAAkB,GACtCpF,EAAW,GACjB,GAAIoF,EAAkBJ,EAElB,OAgDP,SAAoBzd,EAAOyY,EAAUiF,EAAczb,GAChD,IAEIx9B,EAFAojB,EAAQ,EACRwiB,EAAOqT,EAAa,GAGxB,IADAzb,EAAUv7B,KAAKkyC,KAAK3W,GAChBx9B,EAAI,EAAGA,EAAIu7B,EAAMt7B,OAAQD,IACrBA,IAAM4lC,IACNoO,EAASpzC,KAAK26B,EAAMv7B,IACpBojB,IACAwiB,EAAOqT,EAAa71B,EAAQoa,GAGxC,CA7DQ8b,CAAW/d,EAAOyY,EAAUiF,EAAcG,EAAkBJ,GACrDhF,EAEX,MAAMxW,EAqBT,SAA0Byb,EAAc1d,EAAOyd,GAC5C,MAAMO,EA4DT,SAAwBpf,GACrB,MAAMya,EAAMza,EAAIl6B,OAChB,IAAID,EAAGyoC,EACP,GAAImM,EAAM,EACN,OAAO,EAEX,IAAInM,EAAOtO,EAAI,GAAIn6B,EAAI,EAAGA,EAAI40C,IAAO50C,EACjC,GAAIm6B,EAAIn6B,GAAKm6B,EAAIn6B,EAAI,KAAOyoC,EACxB,OAAO,EAGf,OAAOA,CACX,CAxE6B+Q,CAAeP,GAClCzb,EAAUjC,EAAMt7B,OAAS+4C,EAC/B,IAAKO,EACD,OAAOt3C,KAAKN,IAAI67B,EAAS,GAE7B,MAAMic,GAAU,OAAWF,GAC3B,IAAI,IAAIv5C,EAAI,EAAGquB,EAAOorB,EAAQx5C,OAAS,EAAGD,EAAIquB,EAAMruB,IAAI,CACpD,MAAMqqB,EAASovB,EAAQz5C,GACvB,GAAIqqB,EAASmT,EACT,OAAOnT,CAEf,CACA,OAAOpoB,KAAKN,IAAI67B,EAAS,EAC7B,CAnCoBkc,CAAiBT,EAAc1d,EAAOyd,GACtD,GAAII,EAAkB,EAAG,CACrB,IAAIp5C,EAAGquB,EACP,MAAMsrB,EAAkBP,EAAkB,EAAIn3C,KAAKqB,OAAOiX,EAAO8+B,IAAUD,EAAkB,IAAM,KAEnG,IADA5S,GAAKjL,EAAOyY,EAAUxW,GAAS,OAAcmc,GAAmB,EAAIN,EAAQM,EAAiBN,GACzFr5C,EAAI,EAAGquB,EAAO+qB,EAAkB,EAAGp5C,EAAIquB,EAAMruB,IAC7CwmC,GAAKjL,EAAOyY,EAAUxW,EAASyb,EAAaj5C,GAAIi5C,EAAaj5C,EAAI,IAGrE,OADAwmC,GAAKjL,EAAOyY,EAAUxW,EAASjjB,GAAM,OAAco/B,GAAmBpe,EAAMt7B,OAASsa,EAAOo/B,GACrF3F,CACX,CAEA,OADAxN,GAAKjL,EAAOyY,EAAUxW,GACfwW,CACX,CAiXyB0E,CAASjmC,KAAMA,KAAK8oB,OACjC9oB,KAAK4jC,YAAc,KACnB5jC,KAAKmnC,iBAELvB,GACA5lC,KAAK6lC,sBAAsB7lC,KAAK8oB,OAEpC9oB,KAAKonC,YACLpnC,KAAKqnC,MACLrnC,KAAKsnC,WACLtnC,KAAKunC,aACT,CACHrtB,YACO,IACI2Y,EAAYE,EADZyU,EAAgBxnC,KAAKlT,QAAQyuB,QAE7Bvb,KAAK1Q,gBACLujC,EAAa7yB,KAAKrS,KAClBolC,EAAW/yB,KAAKpS,QAEhBilC,EAAa7yB,KAAKvS,IAClBslC,EAAW/yB,KAAKtS,OAChB85C,GAAiBA,GAErBxnC,KAAKqyB,YAAcQ,EACnB7yB,KAAKsyB,UAAYS,EACjB/yB,KAAKw2B,eAAiBgR,EACtBxnC,KAAK4oB,QAAUmK,EAAWF,EAC1B7yB,KAAKynC,eAAiBznC,KAAKlT,QAAQ46C,aACvC,CACAH,eACI,OAASvnC,KAAKlT,QAAQy6C,YAAa,CAC/BvnC,MAER,CACAmlC,uBACI,OAASnlC,KAAKlT,QAAQq4C,oBAAqB,CACvCnlC,MAER,CACAolC,gBACQplC,KAAK1Q,gBACL0Q,KAAK9M,MAAQ8M,KAAKmuB,SAClBnuB,KAAKrS,KAAO,EACZqS,KAAKpS,MAAQoS,KAAK9M,QAElB8M,KAAK7M,OAAS6M,KAAKouB,UACnBpuB,KAAKvS,IAAM,EACXuS,KAAKtS,OAASsS,KAAK7M,QAEvB6M,KAAKsjC,YAAc,EACnBtjC,KAAKojC,WAAa,EAClBpjC,KAAKujC,aAAe,EACpBvjC,KAAKqjC,cAAgB,CACzB,CACAgC,sBACI,OAASrlC,KAAKlT,QAAQu4C,mBAAoB,CACtCrlC,MAER,CACA2nC,WAAWzqC,GACP8C,KAAKzT,MAAMq7C,cAAc1qC,EAAM8C,KAAKoiB,eACpC,OAASpiB,KAAKlT,QAAQoQ,GAAO,CACzB8C,MAER,CACAslC,mBACItlC,KAAK2nC,WAAW,mBACpB,CACApC,sBAAuB,CACvBC,kBACIxlC,KAAK2nC,WAAW,kBACpB,CACAlC,mBACIzlC,KAAK2nC,WAAW,mBACpB,CACHjC,aACO,MAAO,EACX,CACAC,kBACI3lC,KAAK2nC,WAAW,kBACpB,CACAE,+BACI,OAAS7nC,KAAKlT,QAAQ+6C,4BAA6B,CAC/C7nC,MAER,CACH8nC,mBAAmBhf,GACZ,MAAMmc,EAAWjlC,KAAKlT,QAAQg8B,MAC9B,IAAIv7B,EAAGquB,EAAMlF,EACb,IAAInpB,EAAI,EAAGquB,EAAOkN,EAAMt7B,OAAQD,EAAIquB,EAAMruB,IACtCmpB,EAAOoS,EAAMv7B,GACbmpB,EAAK6N,OAAQ,OAAS0gB,EAAS9/B,SAAU,CACrCuR,EAAKtI,MACL7gB,EACAu7B,GACD9oB,KAEX,CACA+nC,8BACI,OAAS/nC,KAAKlT,QAAQi7C,2BAA4B,CAC9C/nC,MAER,CACA8lC,gCACI,OAAS9lC,KAAKlT,QAAQg5C,6BAA8B,CAChD9lC,MAER,CACA+lC,yBACI,MAAMj5C,EAAUkT,KAAKlT,QACfm4C,EAAWn4C,EAAQg8B,MACnBkf,EAAWpG,GAAc5hC,KAAK8oB,MAAMt7B,OAAQV,EAAQg8B,MAAMgZ,eAC1DmG,EAAchD,EAASgD,aAAe,EACtCC,EAAcjD,EAASiD,YAC7B,IACIC,EAAW/Z,EAAWga,EADtB5E,EAAgByE,EAEpB,IAAKjoC,KAAKqoC,eAAiBpD,EAASvV,SAAWuY,GAAeC,GAAeF,GAAY,IAAMhoC,KAAK1Q,eAEhG,YADA0Q,KAAKwjC,cAAgByE,GAGzB,MAAMK,EAAatoC,KAAKuoC,iBAClBC,EAAgBF,EAAWG,OAAOv1C,MAClCw1C,EAAiBJ,EAAWK,QAAQx1C,OACpCg7B,GAAW,OAAYnuB,KAAKzT,MAAM2G,MAAQs1C,EAAe,EAAGxoC,KAAKmuB,UACvEga,EAAYr7C,EAAQ2D,OAASuP,KAAKmuB,SAAW6Z,EAAW7Z,GAAY6Z,EAAW,GAC3EQ,EAAgB,EAAIL,IACpBA,EAAYha,GAAY6Z,GAAYl7C,EAAQ2D,OAAS,GAAM,IAC3D29B,EAAYpuB,KAAKouB,UAAYqU,GAAkB31C,EAAQ8iC,MAAQqV,EAASpK,QAAU+H,GAAe91C,EAAQ87C,MAAO5oC,KAAKzT,MAAMO,QAAQ+1C,MACnIuF,EAAmB54C,KAAKuI,KAAKywC,EAAgBA,EAAgBE,EAAiBA,GAC9ElF,GAAgB,OAAUh0C,KAAKL,IAAIK,KAAKq5C,MAAK,QAAaP,EAAWK,QAAQx1C,OAAS,GAAKg1C,GAAY,EAAG,IAAK34C,KAAKq5C,MAAK,OAAYza,EAAYga,GAAmB,EAAG,IAAM54C,KAAKq5C,MAAK,OAAYH,EAAiBN,GAAmB,EAAG,MAC1O5E,EAAgBh0C,KAAKN,IAAI+4C,EAAaz4C,KAAKL,IAAI+4C,EAAa1E,KAEhExjC,KAAKwjC,cAAgBA,CACzB,CACAwC,+BACI,OAAShmC,KAAKlT,QAAQk5C,4BAA6B,CAC/ChmC,MAER,CACAmnC,gBAAiB,CACjBC,aACI,OAASpnC,KAAKlT,QAAQs6C,UAAW,CAC7BpnC,MAER,CACAqnC,MACI,MAAMpX,EAAU,CACZ/8B,MAAO,EACPC,OAAQ,IAEN,MAAE5G,EAAQO,SAAWg8B,MAAOmc,EAAW2D,MAAOE,EAAYlZ,KAAMmZ,IAAiB/oC,KACjF0vB,EAAU1vB,KAAKqoC,aACf/4C,EAAe0Q,KAAK1Q,eAC1B,GAAIogC,EAAS,CACT,MAAMsZ,EAAcpG,GAAekG,EAAWv8C,EAAMO,QAAQ+1C,MAQ5D,GAPIvzC,GACA2gC,EAAQ/8B,MAAQ8M,KAAKmuB,SACrB8B,EAAQ98B,OAASsvC,GAAkBsG,GAAYC,IAE/C/Y,EAAQ98B,OAAS6M,KAAKouB,UACtB6B,EAAQ/8B,MAAQuvC,GAAkBsG,GAAYC,GAE9C/D,EAASvV,SAAW1vB,KAAK8oB,MAAMt7B,OAAQ,CACvC,MAAM,MAAEo5C,EAAM,KAAE9+B,EAAK,OAAE2gC,EAAO,QAAEE,GAAa3oC,KAAKuoC,iBAC5CU,EAAiC,EAAnBhE,EAASpK,QACvBqO,GAAe,IAAAt8B,GAAU5M,KAAKwjC,eAC9BnW,EAAM79B,KAAK69B,IAAI6b,GACf3b,EAAM/9B,KAAK+9B,IAAI2b,GACrB,GAAI55C,EAAc,CACd,MAAM65C,EAAclE,EAASmE,OAAS,EAAI7b,EAAMkb,EAAOv1C,MAAQm6B,EAAMsb,EAAQx1C,OAC7E88B,EAAQ98B,OAAS3D,KAAKL,IAAI6Q,KAAKouB,UAAW6B,EAAQ98B,OAASg2C,EAAcF,EAC7E,KAAO,CACH,MAAMI,EAAapE,EAASmE,OAAS,EAAI/b,EAAMob,EAAOv1C,MAAQq6B,EAAMob,EAAQx1C,OAC5E88B,EAAQ/8B,MAAQ1D,KAAKL,IAAI6Q,KAAKmuB,SAAU8B,EAAQ/8B,MAAQm2C,EAAaJ,EACzE,CACAjpC,KAAKspC,kBAAkB1C,EAAO9+B,EAAMylB,EAAKF,EAC7C,CACJ,CACArtB,KAAKupC,iBACDj6C,GACA0Q,KAAK9M,MAAQ8M,KAAK4oB,QAAUr8B,EAAM2G,MAAQ8M,KAAKmjC,SAASx1C,KAAOqS,KAAKmjC,SAASv1C,MAC7EoS,KAAK7M,OAAS88B,EAAQ98B,SAEtB6M,KAAK9M,MAAQ+8B,EAAQ/8B,MACrB8M,KAAK7M,OAAS6M,KAAK4oB,QAAUr8B,EAAM4G,OAAS6M,KAAKmjC,SAAS11C,IAAMuS,KAAKmjC,SAASz1C,OAEtF,CACA47C,kBAAkB1C,EAAO9+B,EAAMylB,EAAKF,GAChC,MAAQvE,OAAO,MAAEka,EAAM,QAAEnI,GAAW,SAAEhE,GAAc72B,KAAKlT,QACnD08C,EAAmC,IAAvBxpC,KAAKwjC,cACjBiG,EAAgC,QAAb5S,GAAoC,MAAd72B,KAAKhS,KACpD,GAAIgS,KAAK1Q,eAAgB,CACrB,MAAMo6C,EAAa1pC,KAAK+oB,gBAAgB,GAAK/oB,KAAKrS,KAC5Cg8C,EAAc3pC,KAAKpS,MAAQoS,KAAK+oB,gBAAgB/oB,KAAK8oB,MAAMt7B,OAAS,GAC1E,IAAI81C,EAAc,EACdC,EAAe,EACfiG,EACIC,GACAnG,EAAcjW,EAAMuZ,EAAM1zC,MAC1BqwC,EAAehW,EAAMzlB,EAAK3U,SAE1BmwC,EAAc/V,EAAMqZ,EAAMzzC,OAC1BowC,EAAelW,EAAMvlB,EAAK5U,OAEb,UAAV8vC,EACPO,EAAez7B,EAAK5U,MACH,QAAV8vC,EACPM,EAAcsD,EAAM1zC,MACH,UAAV8vC,IACPM,EAAcsD,EAAM1zC,MAAQ,EAC5BqwC,EAAez7B,EAAK5U,MAAQ,GAEhC8M,KAAKsjC,YAAc9zC,KAAKN,KAAKo0C,EAAcoG,EAAa7O,GAAW76B,KAAK9M,OAAS8M,KAAK9M,MAAQw2C,GAAa,GAC3G1pC,KAAKujC,aAAe/zC,KAAKN,KAAKq0C,EAAeoG,EAAc9O,GAAW76B,KAAK9M,OAAS8M,KAAK9M,MAAQy2C,GAAc,EACnH,KAAO,CACH,IAAIvG,EAAat7B,EAAK3U,OAAS,EAC3BkwC,EAAgBuD,EAAMzzC,OAAS,EACrB,UAAV6vC,GACAI,EAAa,EACbC,EAAgBuD,EAAMzzC,QACL,QAAV6vC,IACPI,EAAat7B,EAAK3U,OAClBkwC,EAAgB,GAEpBrjC,KAAKojC,WAAaA,EAAavI,EAC/B76B,KAAKqjC,cAAgBA,EAAgBxI,CACzC,CACJ,CACH0O,iBACWvpC,KAAKmjC,WACLnjC,KAAKmjC,SAASx1C,KAAO6B,KAAKN,IAAI8Q,KAAKsjC,YAAatjC,KAAKmjC,SAASx1C,MAC9DqS,KAAKmjC,SAAS11C,IAAM+B,KAAKN,IAAI8Q,KAAKojC,WAAYpjC,KAAKmjC,SAAS11C,KAC5DuS,KAAKmjC,SAASv1C,MAAQ4B,KAAKN,IAAI8Q,KAAKujC,aAAcvjC,KAAKmjC,SAASv1C,OAChEoS,KAAKmjC,SAASz1C,OAAS8B,KAAKN,IAAI8Q,KAAKqjC,cAAerjC,KAAKmjC,SAASz1C,QAE1E,CACA45C,YACI,OAAStnC,KAAKlT,QAAQw6C,SAAU,CAC5BtnC,MAER,CACH1Q,eACO,MAAM,KAAEtB,EAAK,SAAE6oC,GAAc72B,KAAKlT,QAClC,MAAoB,QAAb+pC,GAAmC,WAAbA,GAAkC,MAAT7oC,CAC1D,CACH47C,aACO,OAAO5pC,KAAKlT,QAAQ2tC,QACxB,CACHoL,sBAAsB/c,GAGf,IAAIv7B,EAAGquB,EACP,IAHA5b,KAAK6nC,8BACL7nC,KAAK8nC,mBAAmBhf,GAEpBv7B,EAAI,EAAGquB,EAAOkN,EAAMt7B,OAAQD,EAAIquB,EAAMruB,KAClC,OAAcu7B,EAAMv7B,GAAGg3B,SACvBuE,EAAMte,OAAOjd,EAAG,GAChBquB,IACAruB,KAGRyS,KAAK+nC,4BACT,CACHQ,iBACO,IAAID,EAAatoC,KAAK4jC,YACtB,IAAK0E,EAAY,CACb,MAAMpD,EAAallC,KAAKlT,QAAQg8B,MAAMoc,WACtC,IAAIpc,EAAQ9oB,KAAK8oB,MACboc,EAAapc,EAAMt7B,SACnBs7B,EAAQiZ,GAAOjZ,EAAOoc,IAE1BllC,KAAK4jC,YAAc0E,EAAatoC,KAAK6pC,mBAAmB/gB,EAAOA,EAAMt7B,OAAQwS,KAAKlT,QAAQg8B,MAAMgZ,cACpG,CACA,OAAOwG,CACX,CACHuB,mBAAmB/gB,EAAOt7B,EAAQs0C,GAC3B,MAAM,IAAE7nC,EAAM6pC,kBAAmBgG,GAAY9pC,KACvC+pC,EAAS,GACTC,EAAU,GACV9H,EAAY1yC,KAAKqpB,MAAMrrB,EAASo0C,GAAcp0C,EAAQs0C,IAC5D,IAEIv0C,EAAGwpC,EAAGkT,EAAM1lB,EAAO2lB,EAAUC,EAAYzkB,EAAOod,EAAY5vC,EAAOC,EAAQi3C,EAF3EC,EAAkB,EAClBC,EAAmB,EAEvB,IAAI/8C,EAAI,EAAGA,EAAIC,EAAQD,GAAK20C,EAAU,CAUlC,GATA3d,EAAQuE,EAAMv7B,GAAGg3B,MACjB2lB,EAAWlqC,KAAKuqC,wBAAwBh9C,GACxC0M,EAAI4oC,KAAOsH,EAAaD,EAASM,OACjC9kB,EAAQokB,EAAOK,GAAcL,EAAOK,IAAe,CAC/Cn2B,KAAM,CAAC,EACPy2B,GAAI,IAER3H,EAAaoH,EAASpH,WACtB5vC,EAAQC,EAAS,GACZ,OAAcoxB,KAAW,OAAQA,IAG/B,IAAI,OAAQA,GACf,IAAIwS,EAAI,EAAGkT,EAAO1lB,EAAM/2B,OAAQupC,EAAIkT,IAAQlT,EACxCqT,EAAe7lB,EAAMwS,IAChB,OAAcqT,KAAiB,OAAQA,KACxCl3C,GAAQ,OAAa+G,EAAKyrB,EAAM1R,KAAM0R,EAAM+kB,GAAIv3C,EAAOk3C,GACvDj3C,GAAU2vC,QAPlB5vC,GAAQ,OAAa+G,EAAKyrB,EAAM1R,KAAM0R,EAAM+kB,GAAIv3C,EAAOqxB,GACvDpxB,EAAS2vC,EAUbiH,EAAO57C,KAAK+E,GACZ82C,EAAQ77C,KAAKgF,GACbk3C,EAAkB76C,KAAKN,IAAIgE,EAAOm3C,GAClCC,EAAmB96C,KAAKN,IAAIiE,EAAQm3C,EACxC,EA7iBP,SAAwBR,EAAQt8C,IAC7B,OAAKs8C,GAASpkB,IACV,MAAM+kB,EAAK/kB,EAAM+kB,GACXC,EAAQD,EAAGj9C,OAAS,EAC1B,IAAID,EACJ,GAAIm9C,EAAQl9C,EAAQ,CAChB,IAAID,EAAI,EAAGA,EAAIm9C,IAASn9C,SACbm4B,EAAM1R,KAAKy2B,EAAGl9C,IAEzBk9C,EAAGjgC,OAAO,EAAGkgC,EACjB,IAER,CAkiBQC,CAAeb,EAAQt8C,GACvB,MAAMi7C,EAASsB,EAAOt9C,QAAQ49C,GACxB1B,EAAUqB,EAAQv9C,QAAQ69C,GAC1BM,EAAWC,IAAM,CACf33C,MAAO62C,EAAOc,IAAQ,EACtB13C,OAAQ62C,EAAQa,IAAQ,IAEhC,MAAO,CACHjE,MAAOgE,EAAQ,GACf9iC,KAAM8iC,EAAQp9C,EAAS,GACvBi7C,OAAQmC,EAAQnC,GAChBE,QAASiC,EAAQjC,GACjBoB,SACAC,UAER,CACHxlB,iBAAiBpW,GACV,OAAOA,CACX,CACHtc,iBAAiBsc,EAAOhO,GACjB,OAAOijB,GACX,CACH5zB,iBAAiBq7C,GAAQ,CACzB/hB,gBAAgB3oB,GACT,MAAM0oB,EAAQ9oB,KAAK8oB,MACnB,OAAI1oB,EAAQ,GAAKA,EAAQ0oB,EAAMt7B,OAAS,EAC7B,KAEJwS,KAAKlO,iBAAiBg3B,EAAM1oB,GAAOgO,MAC9C,CACH0kB,mBAAmBiY,GACR/qC,KAAKw2B,iBACLuU,EAAU,EAAIA,GAElB,MAAMD,EAAQ9qC,KAAKqyB,YAAc0Y,EAAU/qC,KAAK4oB,QAChD,OAAO,OAAY5oB,KAAKynC,gBAAiB,OAAYznC,KAAKzT,MAAOu+C,EAAO,GAAKA,EACjF,CACHE,mBAAmBF,GACZ,MAAMC,GAAWD,EAAQ9qC,KAAKqyB,aAAeryB,KAAK4oB,QAClD,OAAO5oB,KAAKw2B,eAAiB,EAAIuU,EAAUA,CAC/C,CACHxZ,eACO,OAAOvxB,KAAKlO,iBAAiBkO,KAAKirC,eACtC,CACHA,eACO,MAAM,IAAE97C,EAAI,IAAED,GAAS8Q,KACvB,OAAO7Q,EAAM,GAAKD,EAAM,EAAIA,EAAMC,EAAM,GAAKD,EAAM,EAAIC,EAAM,CACjE,CACHizB,WAAWhiB,GACJ,MAAM0oB,EAAQ9oB,KAAK8oB,OAAS,GAC5B,GAAI1oB,GAAS,GAAKA,EAAQ0oB,EAAMt7B,OAAQ,CACpC,MAAMkpB,EAAOoS,EAAM1oB,GACnB,OAAOsW,EAAKwI,WAAaxI,EAAKwI,SAnkB1C,SAA2Bnd,EAAQ3B,EAAOsW,GACtC,OAAO,OAAc3U,EAAQ,CACzB2U,OACAtW,QACAlM,KAAM,QAEd,CA6jBqDg3C,CAAkBlrC,KAAKoiB,aAAchiB,EAAOsW,GACzF,CACA,OAAO1W,KAAKkf,WAAalf,KAAKkf,UA3kBVnd,EA2kBwC/B,KAAKzT,MAAM61B,aAAcpiB,MA1kBlF,OAAc+B,EAAQ,CACzB7U,MAykBqF8S,KAxkBrF9L,KAAM,YAHd,IAA4B6N,CA4kBxB,CACHokC,YACO,MAAMgF,EAAcnrC,KAAKlT,QAAQg8B,MAC3BsiB,GAAM,IAAAx+B,GAAU5M,KAAKwjC,eACrBnW,EAAM79B,KAAK8D,IAAI9D,KAAK69B,IAAI+d,IACxB7d,EAAM/9B,KAAK8D,IAAI9D,KAAK+9B,IAAI6d,IACxB9C,EAAatoC,KAAKuoC,iBAClB1N,EAAUsQ,EAAYE,iBAAmB,EACzCzR,EAAI0O,EAAaA,EAAWG,OAAOv1C,MAAQ2nC,EAAU,EACrDf,EAAIwO,EAAaA,EAAWK,QAAQx1C,OAAS0nC,EAAU,EAC7D,OAAO76B,KAAK1Q,eAAiBwqC,EAAIzM,EAAMuM,EAAIrM,EAAMqM,EAAIvM,EAAMyM,EAAIvM,EAAMuM,EAAIvM,EAAMqM,EAAIvM,EAAMyM,EAAIzM,EAAMuM,EAAIrM,CAC3G,CACH8a,aACO,MAAM3Y,EAAU1vB,KAAKlT,QAAQ4iC,QAC7B,MAAgB,SAAZA,IACSA,EAEN1vB,KAAK6c,0BAA0BrvB,OAAS,CACnD,CACH89C,sBAAsBh3C,GACf,MAAMtG,EAAOgS,KAAKhS,KACZzB,EAAQyT,KAAKzT,MACbO,EAAUkT,KAAKlT,SACf,KAAE8iC,EAAK,SAAEiH,EAAS,OAAE9B,GAAYjoC,EAChC2D,EAASm/B,EAAKn/B,OACdnB,EAAe0Q,KAAK1Q,eAEpBuyC,EADQ7hC,KAAK8oB,MACOt7B,QAAUiD,EAAS,EAAI,GAC3C86C,EAAK9I,GAAkB7S,GACvBrZ,EAAQ,GACRi1B,EAAazW,EAAOuP,WAAWtkC,KAAKoiB,cACpCqpB,EAAYD,EAAW9b,QAAU8b,EAAWt4C,MAAQ,EACpDw4C,EAAgBD,EAAY,EAC5BE,EAAmB,SAASb,GAC9B,OAAO,OAAYv+C,EAAOu+C,EAAOW,EACrC,EACA,IAAIG,EAAar+C,EAAGi1C,EAAWqJ,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EACpC,GAAiB,QAAbxV,EACA+U,EAAcD,EAAiB3rC,KAAKtS,QACpCq+C,EAAM/rC,KAAKtS,OAAS69C,EACpBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiBr3C,EAAU7G,KAAOi+C,EACvCW,EAAK/3C,EAAU5G,YACZ,GAAiB,WAAbmpC,EACP+U,EAAcD,EAAiB3rC,KAAKvS,KACpC0+C,EAAK73C,EAAU7G,IACf4+C,EAAKV,EAAiBr3C,EAAU5G,QAAUg+C,EAC1CK,EAAMH,EAAcF,EACpBO,EAAMjsC,KAAKvS,IAAM89C,OACd,GAAiB,SAAb1U,EACP+U,EAAcD,EAAiB3rC,KAAKpS,OACpCk+C,EAAM9rC,KAAKpS,MAAQ29C,EACnBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiBr3C,EAAU3G,MAAQ+9C,EACxCU,EAAK93C,EAAU1G,WACZ,GAAiB,UAAbipC,EACP+U,EAAcD,EAAiB3rC,KAAKrS,MACpCu+C,EAAK53C,EAAU3G,KACfy+C,EAAKT,EAAiBr3C,EAAU1G,OAAS89C,EACzCI,EAAMF,EAAcF,EACpBM,EAAMhsC,KAAKrS,KAAO49C,OACf,GAAa,MAATv9C,EAAc,CACrB,GAAiB,WAAb6oC,EACA+U,EAAcD,GAAkBr3C,EAAU7G,IAAM6G,EAAU5G,QAAU,EAAI,SACrE,IAAI,IAAAH,GAASspC,GAAW,CAC3B,MAAMyV,EAAiBj/C,OAAOC,KAAKupC,GAAU,GACvCzoB,EAAQyoB,EAASyV,GACvBV,EAAcD,EAAiB3rC,KAAKzT,MAAMY,OAAOm/C,GAAgBx6C,iBAAiBsc,GACtF,CACA+9B,EAAK73C,EAAU7G,IACf4+C,EAAK/3C,EAAU5G,OACfq+C,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,CAChB,MAAO,GAAa,MAATv9C,EAAc,CACrB,GAAiB,WAAb6oC,EACA+U,EAAcD,GAAkBr3C,EAAU3G,KAAO2G,EAAU1G,OAAS,QACjE,IAAI,IAAAL,GAASspC,GAAW,CAC3B,MAAMyV,EAAiBj/C,OAAOC,KAAKupC,GAAU,GACvCzoB,EAAQyoB,EAASyV,GACvBV,EAAcD,EAAiB3rC,KAAKzT,MAAMY,OAAOm/C,GAAgBx6C,iBAAiBsc,GACtF,CACA09B,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAK53C,EAAU3G,KACfy+C,EAAK93C,EAAU1G,KACnB,CACA,MAAMkC,GAAQ,IAAAG,GAAenD,EAAQg8B,MAAMgZ,cAAeD,GACpD0K,EAAO/8C,KAAKN,IAAI,EAAGM,KAAKkyC,KAAKG,EAAc/xC,IACjD,IAAIvC,EAAI,EAAGA,EAAIs0C,EAAat0C,GAAKg/C,EAAK,CAClC,MAAM1tC,EAAUmB,KAAKoiB,WAAW70B,GAC1Bi/C,EAAc5c,EAAK0U,WAAWzlC,GAC9B4tC,EAAoB1X,EAAOuP,WAAWzlC,GACtCrE,EAAYgyC,EAAYhyC,UACxBkyC,EAAYF,EAAY30B,MACxB80B,EAAaF,EAAkBG,MAAQ,GACvCC,EAAmBJ,EAAkBK,WACrC3E,EAAYqE,EAAYrE,UACxB4E,EAAYP,EAAYO,UACxBC,EAAiBR,EAAYQ,gBAAkB,GAC/CC,EAAuBT,EAAYS,qBACzCzK,EAAYJ,GAAoBpiC,KAAMzS,EAAGkD,QACvBjE,IAAdg2C,IAGJqJ,GAAmB,OAAYt/C,EAAOi2C,EAAWhoC,GAC7ClL,EACAw8C,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAE1Bt1B,EAAMpoB,KAAK,CACP29C,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACAn5C,MAAOsH,EACPqd,MAAO60B,EACPC,aACAE,mBACA1E,YACA4E,YACAC,iBACAC,yBAER,CAGA,OAFAjtC,KAAKmkC,aAAetC,EACpB7hC,KAAKokC,aAAewH,EACbr1B,CACX,CACHuuB,mBAAmBxwC,GACZ,MAAMtG,EAAOgS,KAAKhS,KACZlB,EAAUkT,KAAKlT,SACf,SAAE+pC,EAAW/N,MAAOqiB,GAAiBr+C,EACrCwC,EAAe0Q,KAAK1Q,eACpBw5B,EAAQ9oB,KAAK8oB,OACb,MAAEka,EAAM,WAAEkK,EAAW,QAAErS,EAAQ,OAAEuO,GAAY+B,EAC7CI,EAAK9I,GAAkB31C,EAAQ8iC,MAC/Bud,EAAiB5B,EAAK1Q,EACtBuS,EAAkBhE,GAAUvO,EAAUsS,EACtC5lC,IAAY,IAAAqF,GAAU5M,KAAKwjC,eAC3BjtB,EAAQ,GACd,IAAIhpB,EAAGquB,EAAMlF,EAAM6N,EAAO53B,EAAGC,EAAGygD,EAAWvC,EAAOjI,EAAMC,EAAYwK,EAAWC,EAC3EC,EAAe,SACnB,GAAiB,QAAb3W,EACAjqC,EAAIoT,KAAKtS,OAAS0/C,EAClBC,EAAYrtC,KAAKytC,+BACd,GAAiB,WAAb5W,EACPjqC,EAAIoT,KAAKvS,IAAM2/C,EACfC,EAAYrtC,KAAKytC,+BACd,GAAiB,SAAb5W,EAAqB,CAC5B,MAAMyK,EAAMthC,KAAK0tC,wBAAwBnC,GACzC8B,EAAY/L,EAAI+L,UAChB1gD,EAAI20C,EAAI30C,CACZ,MAAO,GAAiB,UAAbkqC,EAAsB,CAC7B,MAAMyK,EAAMthC,KAAK0tC,wBAAwBnC,GACzC8B,EAAY/L,EAAI+L,UAChB1gD,EAAI20C,EAAI30C,CACZ,MAAO,GAAa,MAATqB,EAAc,CACrB,GAAiB,WAAb6oC,EACAjqC,GAAK0H,EAAU7G,IAAM6G,EAAU5G,QAAU,EAAIy/C,OAC1C,IAAI,IAAA5/C,GAASspC,GAAW,CAC3B,MAAMyV,EAAiBj/C,OAAOC,KAAKupC,GAAU,GACvCzoB,EAAQyoB,EAASyV,GACvB1/C,EAAIoT,KAAKzT,MAAMY,OAAOm/C,GAAgBx6C,iBAAiBsc,GAAS++B,CACpE,CACAE,EAAYrtC,KAAKytC,yBACrB,MAAO,GAAa,MAATz/C,EAAc,CACrB,GAAiB,WAAb6oC,EACAlqC,GAAK2H,EAAU3G,KAAO2G,EAAU1G,OAAS,EAAIu/C,OAC1C,IAAI,IAAA5/C,GAASspC,GAAW,CAC3B,MAAMyV,EAAiBj/C,OAAOC,KAAKupC,GAAU,GACvCzoB,EAAQyoB,EAASyV,GACvB3/C,EAAIqT,KAAKzT,MAAMY,OAAOm/C,GAAgBx6C,iBAAiBsc,EAC3D,CACAi/B,EAAYrtC,KAAK0tC,wBAAwBnC,GAAI8B,SACjD,CACa,MAATr/C,IACc,UAAVg1C,EACAwK,EAAe,MACE,QAAVxK,IACPwK,EAAe,WAGvB,MAAMlF,EAAatoC,KAAKuoC,iBACxB,IAAIh7C,EAAI,EAAGquB,EAAOkN,EAAMt7B,OAAQD,EAAIquB,IAAQruB,EAAE,CAC1CmpB,EAAOoS,EAAMv7B,GACbg3B,EAAQ7N,EAAK6N,MACb,MAAMioB,EAAcrB,EAAY7G,WAAWtkC,KAAKoiB,WAAW70B,IAC3Du9C,EAAQ9qC,KAAK+oB,gBAAgBx7B,GAAK49C,EAAYwC,YAC9C9K,EAAO7iC,KAAKuqC,wBAAwBh9C,GACpCu1C,EAAaD,EAAKC,WAClBwK,GAAY,OAAQ/oB,GAASA,EAAM/2B,OAAS,EAC5C,MAAMogD,EAAYN,EAAY,EACxBz1B,EAAQ20B,EAAY30B,MACpBg2B,EAAcrB,EAAYsB,gBAC1BC,EAAcvB,EAAYwB,gBAChC,IAuCIC,EAvCAC,EAAgBb,EAwCpB,GAvCI/9C,GACA3C,EAAIm+C,EACc,UAAduC,IAEIa,EADA3gD,IAAMquB,EAAO,EACI5b,KAAKlT,QAAQyuB,QAAoB,OAAV,QAC3B,IAANhuB,EACUyS,KAAKlT,QAAQyuB,QAAmB,QAAT,OAExB,UAKhBgyB,EAFS,QAAb1W,EACmB,SAAfqW,GAAsC,IAAb3lC,GACX+lC,EAAYxK,EAAaA,EAAa,EAC9B,WAAfoK,GACO5E,EAAWK,QAAQx1C,OAAS,EAAIy6C,EAAY9K,EAAaA,GAEzDwF,EAAWK,QAAQx1C,OAAS2vC,EAAa,EAGxC,SAAfoK,GAAsC,IAAb3lC,EACZu7B,EAAa,EACJ,WAAfoK,EACM5E,EAAWK,QAAQx1C,OAAS,EAAIy6C,EAAY9K,EAE5CwF,EAAWK,QAAQx1C,OAASm6C,EAAYxK,EAGzDsG,IACAmE,IAAe,GAEF,IAAbhmC,GAAmBilC,EAAY2B,oBAC/BxhD,GAAKm2C,EAAa,EAAItzC,KAAK+9B,IAAIhmB,MAGnC3a,EAAIk+C,EACJyC,GAAc,EAAID,GAAaxK,EAAa,GAG5C0J,EAAY2B,kBAAmB,CAC/B,MAAMC,GAAe,OAAU5B,EAAY6B,iBACrCl7C,EAASm1C,EAAW0B,QAAQz8C,GAC5B2F,EAAQo1C,EAAWyB,OAAOx8C,GAChC,IAAIE,EAAM8/C,EAAaa,EAAa3gD,IAChCE,EAAO,EAAIygD,EAAazgD,KAC5B,OAAO6/C,GACH,IAAK,SACD//C,GAAO0F,EAAS,EAChB,MACJ,IAAK,SACD1F,GAAO0F,EAGf,OAAOk6C,GACH,IAAK,SACD1/C,GAAQuF,EAAQ,EAChB,MACJ,IAAK,QACDvF,GAAQuF,EAGhB+6C,EAAW,CACPtgD,OACAF,MACAyF,MAAOA,EAAQk7C,EAAal7C,MAC5BC,OAAQA,EAASi7C,EAAaj7C,OAC9B0kB,MAAO20B,EAAY8B,cAE3B,CACA/3B,EAAMpoB,KAAK,CACPo2B,QACAse,OACA0K,aACAzgD,QAAS,CACLya,WACAsQ,QACAg2B,cACAE,cACAV,UAAWa,EACXV,eACAe,YAAa,CACT5hD,EACAC,GAEJqhD,aAGZ,CACA,OAAO13B,CACX,CACAk3B,0BACI,MAAM,SAAE5W,EAAS,MAAE/N,GAAW9oB,KAAKlT,QAEnC,KADkB,IAAA8f,GAAU5M,KAAKwjC,eAE7B,MAAoB,QAAb3M,EAAqB,OAAS,QAEzC,IAAImM,EAAQ,SAQZ,MAPoB,UAAhBla,EAAMka,MACNA,EAAQ,OACe,QAAhBla,EAAMka,MACbA,EAAQ,QACe,UAAhBla,EAAMka,QACbA,EAAQ,SAELA,CACX,CACA0K,wBAAwBnC,GACpB,MAAM,SAAE1U,EAAW/N,OAAO,WAAEokB,EAAW,OAAE9D,EAAO,QAAEvO,IAAgB76B,KAAKlT,QAEjEqgD,EAAiB5B,EAAK1Q,EACtB4N,EAFazoC,KAAKuoC,iBAEEE,OAAOv1C,MACjC,IAAIm6C,EACA1gD,EAoDJ,MAnDiB,SAAbkqC,EACIuS,GACAz8C,EAAIqT,KAAKpS,MAAQitC,EACE,SAAfqS,EACAG,EAAY,OACU,WAAfH,GACPG,EAAY,SACZ1gD,GAAK87C,EAAS,IAEd4E,EAAY,QACZ1gD,GAAK87C,KAGT97C,EAAIqT,KAAKpS,MAAQu/C,EACE,SAAfD,EACAG,EAAY,QACU,WAAfH,GACPG,EAAY,SACZ1gD,GAAK87C,EAAS,IAEd4E,EAAY,OACZ1gD,EAAIqT,KAAKrS,OAGG,UAAbkpC,EACHuS,GACAz8C,EAAIqT,KAAKrS,KAAOktC,EACG,SAAfqS,EACAG,EAAY,QACU,WAAfH,GACPG,EAAY,SACZ1gD,GAAK87C,EAAS,IAEd4E,EAAY,OACZ1gD,GAAK87C,KAGT97C,EAAIqT,KAAKrS,KAAOw/C,EACG,SAAfD,EACAG,EAAY,OACU,WAAfH,GACPG,EAAY,SACZ1gD,GAAK87C,EAAS,IAEd4E,EAAY,QACZ1gD,EAAIqT,KAAKpS,QAIjBy/C,EAAY,QAET,CACHA,YACA1gD,IAER,CACH6hD,oBACO,GAAIxuC,KAAKlT,QAAQg8B,MAAMsgB,OACnB,OAEJ,MAAM78C,EAAQyT,KAAKzT,MACbsqC,EAAW72B,KAAKlT,QAAQ+pC,SAC9B,MAAiB,SAAbA,GAAoC,UAAbA,EAChB,CACHppC,IAAK,EACLE,KAAMqS,KAAKrS,KACXD,OAAQnB,EAAM4G,OACdvF,MAAOoS,KAAKpS,OAGH,QAAbipC,GAAmC,WAAbA,EACf,CACHppC,IAAKuS,KAAKvS,IACVE,KAAM,EACND,OAAQsS,KAAKtS,OACbE,MAAOrB,EAAM2G,YALrB,CAQJ,CACHu7C,iBACO,MAAM,IAAEx0C,EAAMnN,SAAS,gBAAEuN,GAAmB,KAAE1M,EAAK,IAAEF,EAAI,MAAEyF,EAAM,OAAEC,GAAY6M,KAC3E3F,IACAJ,EAAIC,OACJD,EAAIG,UAAYC,EAChBJ,EAAIK,SAAS3M,EAAMF,EAAKyF,EAAOC,GAC/B8G,EAAIW,UAEZ,CACAq4B,qBAAqB7kB,GACjB,MAAMwhB,EAAO5vB,KAAKlT,QAAQ8iC,KAC1B,IAAK5vB,KAAKqoC,eAAiBzY,EAAKF,QAC5B,OAAO,EAEX,MACMtvB,EADQJ,KAAK8oB,MACC4lB,WAAW9hC,GAAIA,EAAEwB,QAAUA,IAC/C,OAAIhO,GAAS,EACIwvB,EAAK0U,WAAWtkC,KAAKoiB,WAAWhiB,IACjC5F,UAET,CACX,CACHm0C,SAASr6C,GACF,MAAMs7B,EAAO5vB,KAAKlT,QAAQ8iC,KACpB31B,EAAM+F,KAAK/F,IACXsc,EAAQvW,KAAK0jC,iBAAmB1jC,KAAK0jC,eAAiB1jC,KAAKsrC,sBAAsBh3C,IACvF,IAAI/G,EAAGquB,EACP,MAAMgzB,EAAW,CAAC55C,EAAIoT,EAAIiF,KACjBA,EAAMna,OAAUma,EAAMwK,QAG3B5d,EAAIC,OACJD,EAAIO,UAAY6S,EAAMna,MACtB+G,EAAIQ,YAAc4S,EAAMwK,MACxB5d,EAAI40C,YAAYxhC,EAAMs/B,YAAc,IACpC1yC,EAAI60C,eAAiBzhC,EAAMw/B,iBAC3B5yC,EAAIE,YACJF,EAAI80C,OAAO/5C,EAAGrI,EAAGqI,EAAGpI,GACpBqN,EAAI+0C,OAAO5mC,EAAGzb,EAAGyb,EAAGxb,GACpBqN,EAAIg1C,SACJh1C,EAAIW,UAAS,EAEjB,GAAIg1B,EAAKF,QACL,IAAIniC,EAAI,EAAGquB,EAAOrF,EAAM/oB,OAAQD,EAAIquB,IAAQruB,EAAE,CAC1C,MAAM2jB,EAAOqF,EAAMhpB,GACfqiC,EAAKsf,iBACLN,EAAS,CACLjiD,EAAGukB,EAAKg7B,GACRt/C,EAAGskB,EAAKi7B,IACT,CACCx/C,EAAGukB,EAAKk7B,GACRx/C,EAAGskB,EAAKm7B,IACTn7B,GAEH0e,EAAK8S,WACLkM,EAAS,CACLjiD,EAAGukB,EAAK46B,IACRl/C,EAAGskB,EAAK66B,KACT,CACCp/C,EAAGukB,EAAK86B,IACRp/C,EAAGskB,EAAK+6B,KACT,CACCp0B,MAAO3G,EAAK67B,UACZ75C,MAAOge,EAAKi3B,UACZwE,WAAYz7B,EAAK87B,eACjBH,iBAAkB37B,EAAK+7B,sBAGnC,CAER,CACHkC,aACO,MAAM,MAAE5iD,EAAM,IAAE0N,EAAMnN,SAAS,OAAEioC,EAAO,KAAEnF,IAAa5vB,KACjDwrC,EAAazW,EAAOuP,WAAWtkC,KAAKoiB,cACpCqpB,EAAY1W,EAAOrF,QAAU8b,EAAWt4C,MAAQ,EACtD,IAAKu4C,EACD,OAEJ,MAAM2D,EAAgBxf,EAAK0U,WAAWtkC,KAAKoiB,WAAW,IAAI5nB,UACpDoxC,EAAc5rC,KAAKokC,aACzB,IAAI8H,EAAIE,EAAID,EAAIE,EACZrsC,KAAK1Q,gBACL48C,GAAK,OAAY3/C,EAAOyT,KAAKrS,KAAM89C,GAAaA,EAAY,EAC5DW,GAAK,OAAY7/C,EAAOyT,KAAKpS,MAAOwhD,GAAiBA,EAAgB,EACrEjD,EAAKE,EAAKT,IAEVO,GAAK,OAAY5/C,EAAOyT,KAAKvS,IAAKg+C,GAAaA,EAAY,EAC3DY,GAAK,OAAY9/C,EAAOyT,KAAKtS,OAAQ0hD,GAAiBA,EAAgB,EACtElD,EAAKE,EAAKR,GAEd3xC,EAAIC,OACJD,EAAIO,UAAYgxC,EAAWt4C,MAC3B+G,EAAIQ,YAAc+wC,EAAW3zB,MAC7B5d,EAAIE,YACJF,EAAI80C,OAAO7C,EAAIC,GACflyC,EAAI+0C,OAAO5C,EAAIC,GACfpyC,EAAIg1C,SACJh1C,EAAIW,SACR,CACHy0C,WAAW/6C,GAEJ,IADoB0L,KAAKlT,QAAQg8B,MAChB4G,QACb,OAEJ,MAAMz1B,EAAM+F,KAAK/F,IACX8qB,EAAO/kB,KAAKwuC,oBACdzpB,IACA,OAAS9qB,EAAK8qB,GAElB,MAAMxO,EAAQvW,KAAK6kC,cAAcvwC,GACjC,IAAK,MAAM4c,KAAQqF,EAAM,CACrB,MAAM+4B,EAAoBp+B,EAAKpkB,QACzBo9C,EAAWh5B,EAAK2xB,KAChBte,EAAQrT,EAAKqT,MACb33B,EAAIskB,EAAKq8B,YACf,OAAWtzC,EAAKsqB,EAAO,EAAG33B,EAAGs9C,EAAUoF,EAC3C,CACIvqB,IACA,OAAW9qB,EAEnB,CACHs1C,YACO,MAAM,IAAEt1C,EAAMnN,SAAS,SAAE+pC,EAAS,MAAE+R,EAAM,QAAErtB,IAAgBvb,KAC5D,IAAK4oC,EAAMlZ,QACP,OAEJ,MAAMmT,GAAO,QAAO+F,EAAM/F,MACpBhI,GAAU,OAAU+N,EAAM/N,SAC1BmI,EAAQ4F,EAAM5F,MACpB,IAAIvyC,EAASoyC,EAAKC,WAAa,EACd,WAAbjM,GAAsC,WAAbA,IAAyB,IAAAtpC,GAASspC,IAC3DpmC,GAAUoqC,EAAQntC,QACd,OAAQk7C,EAAMnd,QACdh7B,GAAUoyC,EAAKC,YAAc8F,EAAMnd,KAAKj+B,OAAS,KAGrDiD,GAAUoqC,EAAQptC,IAEtB,MAAM,OAAE+hD,EAAO,OAAEC,EAAO,SAAEthB,EAAS,SAAE5mB,GA5kC7C,SAAmBra,EAAOuD,EAAQomC,EAAUmM,GACxC,MAAM,IAAEv1C,EAAI,KAAEE,EAAK,OAAED,EAAO,MAAEE,EAAM,MAAErB,GAAWW,GAC3C,UAAEoH,EAAU,OAAEnH,GAAYZ,EAChC,IACI4hC,EAAUqhB,EAAQC,EADlBloC,EAAW,EAEf,MAAMpU,EAASzF,EAASD,EAClByF,EAAQtF,EAAQD,EACtB,GAAIT,EAAMoC,eAAgB,CAEtB,GADAkgD,GAAS,QAAexM,EAAOr1C,EAAMC,IACjC,IAAAL,GAASspC,GAAW,CACpB,MAAMyV,EAAiBj/C,OAAOC,KAAKupC,GAAU,GACvCzoB,EAAQyoB,EAASyV,GACvBmD,EAAStiD,EAAOm/C,GAAgBx6C,iBAAiBsc,GAASjb,EAAS1C,CACvE,MACIg/C,EADoB,WAAb5Y,GACGviC,EAAU5G,OAAS4G,EAAU7G,KAAO,EAAI0F,EAAS1C,EAElDkxC,GAAez0C,EAAO2pC,EAAUpmC,GAE7C09B,EAAWvgC,EAAQD,CACvB,KAAO,CACH,IAAI,IAAAJ,GAASspC,GAAW,CACpB,MAAMyV,EAAiBj/C,OAAOC,KAAKupC,GAAU,GACvCzoB,EAAQyoB,EAASyV,GACvBkD,EAASriD,EAAOm/C,GAAgBx6C,iBAAiBsc,GAASlb,EAAQzC,CACtE,MACI++C,EADoB,WAAb3Y,GACGviC,EAAU3G,KAAO2G,EAAU1G,OAAS,EAAIsF,EAAQzC,EAEjDkxC,GAAez0C,EAAO2pC,EAAUpmC,GAE7Cg/C,GAAS,QAAezM,EAAOt1C,EAAQD,GACvC8Z,EAAwB,SAAbsvB,GAAuB,EAAA/I,EAAU,EAAAA,CAChD,CACA,MAAO,CACH0hB,SACAC,SACAthB,WACA5mB,WAER,CAsiC2DmoC,CAAU1vC,KAAMvP,EAAQomC,EAAUmM,IACrF,OAAW/oC,EAAK2uC,EAAMnd,KAAM,EAAG,EAAGoX,EAAM,CACpChrB,MAAO+wB,EAAM/wB,MACbsW,WACA5mB,WACA8lC,UAAWtK,GAAWC,EAAOnM,EAAUtb,GACvCiyB,aAAc,SACde,YAAa,CACTiB,EACAC,IAGZ,CACA51C,KAAKvF,GACI0L,KAAKqoC,eAGVroC,KAAKyuC,iBACLzuC,KAAK2uC,SAASr6C,GACd0L,KAAKmvC,aACLnvC,KAAKuvC,YACLvvC,KAAKqvC,WAAW/6C,GACpB,CACH4mC,UACO,MAAMrvC,EAAOmU,KAAKlT,QACZ6iD,EAAK9jD,EAAKi9B,OAASj9B,EAAKi9B,MAAMqS,GAAK,EACnCyU,GAAK,IAAA3/C,GAAepE,EAAK+jC,MAAQ/jC,EAAK+jC,KAAKuL,GAAI,GAC/C0U,GAAK,IAAA5/C,GAAepE,EAAKkpC,QAAUlpC,EAAKkpC,OAAOoG,EAAG,GACxD,OAAKn7B,KAAKqoC,cAAgBroC,KAAKnG,OAASqpC,GAAMhoC,UAAUrB,KAUjD,CACH,CACIshC,EAAGyU,EACH/1C,KAAOvF,IACH0L,KAAKyuC,iBACLzuC,KAAK2uC,SAASr6C,GACd0L,KAAKuvC,WAAW,GAGxB,CACIpU,EAAG0U,EACHh2C,KAAM,KACFmG,KAAKmvC,YAAY,GAGzB,CACIhU,EAAGwU,EACH91C,KAAOvF,IACH0L,KAAKqvC,WAAW/6C,EAAU,IA3B3B,CACH,CACI6mC,EAAGwU,EACH91C,KAAOvF,IACH0L,KAAKnG,KAAKvF,EAAU,GA2BxC,CACHuoB,wBAAwB3oB,GACjB,MAAMuwC,EAAQzkC,KAAKzT,MAAMuqC,+BACnBgZ,EAAS9vC,KAAKhS,KAAO,SACrBi0C,EAAS,GACf,IAAI10C,EAAGquB,EACP,IAAIruB,EAAI,EAAGquB,EAAO6oB,EAAMj3C,OAAQD,EAAIquB,IAAQruB,EAAE,CAC1C,MAAM4uB,EAAOsoB,EAAMl3C,GACf4uB,EAAK2zB,KAAY9vC,KAAKhQ,IAAQkE,GAAQioB,EAAKjoB,OAASA,GACpD+tC,EAAO9zC,KAAKguB,EAEpB,CACA,OAAO8lB,CACX,CACHsI,wBAAwBnqC,GACjB,MAAMvU,EAAOmU,KAAKlT,QAAQg8B,MAAMwb,WAAWtkC,KAAKoiB,WAAWhiB,IAC3D,OAAO,QAAOvU,EAAKg3C,KACvB,CACHkN,aACO,MAAMC,EAAWhwC,KAAKuqC,wBAAwB,GAAGzH,WACjD,OAAQ9iC,KAAK1Q,eAAiB0Q,KAAK9M,MAAQ8M,KAAK7M,QAAU68C,CAC9D,EAGJ,MAAMC,GACF/uC,YAAYhN,EAAMg8C,EAAOC,GACrBnwC,KAAK9L,KAAOA,EACZ8L,KAAKkwC,MAAQA,EACblwC,KAAKmwC,SAAWA,EAChBnwC,KAAKuW,MAAQlpB,OAAO4T,OAAO,KAC/B,CACAmvC,UAAUl8C,GACN,OAAO7G,OAAO6N,UAAUm1C,cAAcj1C,KAAK4E,KAAK9L,KAAKgH,UAAWhH,EAAKgH,UACzE,CACHo1C,SAASp/B,GACF,MAAMq/B,EAAQljD,OAAOmjD,eAAet/B,GACpC,IAAIu/B,GAiEZ,SAA2BF,GACvB,MAAO,OAAQA,GAAS,aAAcA,CAC1C,EAlEYG,CAAkBH,KAClBE,EAAczwC,KAAKswC,SAASC,IAEhC,MAAMh6B,EAAQvW,KAAKuW,MACbvmB,EAAKkhB,EAAKlhB,GACVkgD,EAAQlwC,KAAKkwC,MAAQ,IAAMlgD,EACjC,IAAKA,EACD,MAAM,IAAI2P,MAAM,2BAA6BuR,GAEjD,OAAIlhB,KAAMumB,IAGVA,EAAMvmB,GAAMkhB,EAyBpB,SAA0BA,EAAMg/B,EAAOO,GACnC,MAAME,GAAe,QAAMtjD,OAAO4T,OAAO,MAAO,CAC5CwvC,EAAc,EAAAr2B,EAAS5rB,IAAIiiD,GAAe,CAAC,EAC3C,EAAAr2B,EAAS5rB,IAAI0hD,GACbh/B,EAAKnW,WAET,EAAAqf,EAASvrB,IAAIqhD,EAAOS,GAChBz/B,EAAK0/B,eAOb,SAAuBV,EAAOW,GAC1BxjD,OAAOC,KAAKujD,GAAQvxC,SAAS2D,IACzB,MAAM6tC,EAAgB7tC,EAASZ,MAAM,KAC/B0uC,EAAaD,EAAcn6B,MAC3Bq6B,EAAc,CAChBd,GACF7kC,OAAOylC,GAAejiC,KAAK,KACvBoiC,EAAQJ,EAAO5tC,GAAUZ,MAAM,KAC/B6uC,EAAaD,EAAMt6B,MACnBw6B,EAAcF,EAAMpiC,KAAK,KAC/B,EAAAuL,EAASg3B,MAAMJ,EAAaD,EAAYI,EAAaD,EAAW,GAExE,CAlBQG,CAAcnB,EAAOh/B,EAAK0/B,eAE1B1/B,EAAKogC,aACL,EAAAl3B,EAASm3B,SAASrB,EAAOh/B,EAAKogC,YAEtC,CArCQE,CAAiBtgC,EAAMg/B,EAAOO,GAC1BzwC,KAAKmwC,UACL,EAAA/1B,EAAS+1B,SAASj/B,EAAKlhB,GAAIkhB,EAAKugC,YALzBvB,CAQf,CACH1hD,IAAIwB,GACG,OAAOgQ,KAAKuW,MAAMvmB,EACtB,CACH0hD,WAAWxgC,GACJ,MAAMqF,EAAQvW,KAAKuW,MACbvmB,EAAKkhB,EAAKlhB,GACVkgD,EAAQlwC,KAAKkwC,MACflgD,KAAMumB,UACCA,EAAMvmB,GAEbkgD,GAASlgD,KAAM,EAAAoqB,EAAS81B,YACjB,EAAA91B,EAAS81B,GAAOlgD,GACnBgQ,KAAKmwC,iBACE,KAAUngD,GAG7B,EAiCJ,MAAM2hD,GACFzwC,cACIlB,KAAK4wB,YAAc,IAAIqf,GAAc7xB,EAAmB,YAAY,GACpEpe,KAAK8kB,SAAW,IAAImrB,GAAc/O,GAAS,YAC3ClhC,KAAKorB,QAAU,IAAI6kB,GAAc5iD,OAAQ,WACzC2S,KAAK7S,OAAS,IAAI8iD,GAAc/M,GAAO,UACvCljC,KAAK4xC,iBAAmB,CACpB5xC,KAAK4wB,YACL5wB,KAAK7S,OACL6S,KAAK8kB,SAEb,CACHtpB,OAAOY,GACA4D,KAAK6xC,MAAM,WAAYz1C,EAC3B,CACA2B,UAAU3B,GACN4D,KAAK6xC,MAAM,aAAcz1C,EAC7B,CACH01C,kBAAkB11C,GACX4D,KAAK6xC,MAAM,WAAYz1C,EAAM4D,KAAK4wB,YACtC,CACHnR,eAAerjB,GACR4D,KAAK6xC,MAAM,WAAYz1C,EAAM4D,KAAK8kB,SACtC,CACHitB,cAAc31C,GACP4D,KAAK6xC,MAAM,WAAYz1C,EAAM4D,KAAKorB,QACtC,CACH4mB,aAAa51C,GACN4D,KAAK6xC,MAAM,WAAYz1C,EAAM4D,KAAK7S,OACtC,CACH8kD,cAAcjiD,GACP,OAAOgQ,KAAKkyC,KAAKliD,EAAIgQ,KAAK4wB,YAAa,aAC3C,CACH+E,WAAW3lC,GACJ,OAAOgQ,KAAKkyC,KAAKliD,EAAIgQ,KAAK8kB,SAAU,UACxC,CACHqtB,UAAUniD,GACH,OAAOgQ,KAAKkyC,KAAKliD,EAAIgQ,KAAKorB,QAAS,SACvC,CACHgnB,SAASpiD,GACF,OAAOgQ,KAAKkyC,KAAKliD,EAAIgQ,KAAK7S,OAAQ,QACtC,CACHklD,qBAAqBj2C,GACd4D,KAAK6xC,MAAM,aAAcz1C,EAAM4D,KAAK4wB,YACxC,CACH0hB,kBAAkBl2C,GACX4D,KAAK6xC,MAAM,aAAcz1C,EAAM4D,KAAK8kB,SACxC,CACHytB,iBAAiBn2C,GACV4D,KAAK6xC,MAAM,aAAcz1C,EAAM4D,KAAKorB,QACxC,CACHonB,gBAAgBp2C,GACT4D,KAAK6xC,MAAM,aAAcz1C,EAAM4D,KAAK7S,OACxC,CACH0kD,MAAMryC,EAAQpD,EAAMq2C,GACb,IACOr2C,GACLkD,SAASN,IACP,MAAM0zC,EAAMD,GAAiBzyC,KAAK2yC,oBAAoB3zC,GAClDyzC,GAAiBC,EAAItC,UAAUpxC,IAAQ0zC,IAAQ1yC,KAAKorB,SAAWpsB,EAAIhP,GACnEgQ,KAAK4yC,MAAMpzC,EAAQkzC,EAAK1zC,IAExB,OAAKA,GAAMkS,IACP,MAAM2hC,EAAUJ,GAAiBzyC,KAAK2yC,oBAAoBzhC,GAC1DlR,KAAK4yC,MAAMpzC,EAAQqzC,EAAS3hC,EAAK,GAEzC,GAER,CACH0hC,MAAMpzC,EAAQk2B,EAAUod,GACjB,MAAMC,GAAc,QAAYvzC,IAChC,OAASszC,EAAU,SAAWC,GAAc,GAAID,GAChDpd,EAASl2B,GAAQszC,IACjB,OAASA,EAAU,QAAUC,GAAc,GAAID,EACnD,CACHH,oBAAoBz+C,GACb,IAAI,IAAI3G,EAAI,EAAGA,EAAIyS,KAAK4xC,iBAAiBpkD,OAAQD,IAAI,CACjD,MAAMmlD,EAAM1yC,KAAK4xC,iBAAiBrkD,GAClC,GAAImlD,EAAItC,UAAUl8C,GACd,OAAOw+C,CAEf,CACA,OAAO1yC,KAAKorB,OAChB,CACH8mB,KAAKliD,EAAIyiD,EAAev+C,GACjB,MAAMgd,EAAOuhC,EAAcjkD,IAAIwB,GAC/B,QAAaxD,IAAT0kB,EACA,MAAM,IAAIvR,MAAM,IAAM3P,EAAK,yBAA2BkE,EAAO,KAEjE,OAAOgd,CACX,EAEJ,IAAIwkB,GAA2B,IAAIic,GAEnC,MAAMqB,GACF9xC,cACIlB,KAAKizC,MAAQ,EACjB,CACHC,OAAO3mD,EAAO4mD,EAAM/2C,EAAM2P,GACN,eAATonC,IACAnzC,KAAKizC,MAAQjzC,KAAKozC,mBAAmB7mD,GAAO,GAC5CyT,KAAKyV,QAAQzV,KAAKizC,MAAO1mD,EAAO,YAEpC,MAAM+kD,EAAcvlC,EAAS/L,KAAKqzC,aAAa9mD,GAAOwf,OAAOA,GAAU/L,KAAKqzC,aAAa9mD,GACnF01C,EAASjiC,KAAKyV,QAAQ67B,EAAa/kD,EAAO4mD,EAAM/2C,GAKtD,MAJa,iBAAT+2C,IACAnzC,KAAKyV,QAAQ67B,EAAa/kD,EAAO,QACjCyT,KAAKyV,QAAQzV,KAAKizC,MAAO1mD,EAAO,cAE7B01C,CACX,CACHxsB,QAAQ67B,EAAa/kD,EAAO4mD,EAAM/2C,GAC3BA,EAAOA,GAAQ,CAAC,EAChB,IAAK,MAAMk3C,KAAchC,EAAY,CACjC,MAAMz2C,EAASy4C,EAAWz4C,OACpB2E,EAAS3E,EAAOs4C,GAChB/Z,EAAS,CACX7sC,EACA6P,EACAk3C,EAAWxmD,SAEf,IAAyC,KAArC,OAAS0S,EAAQ45B,EAAQv+B,IAAqBuB,EAAKlE,WACnD,OAAO,CAEf,CACA,OAAO,CACX,CACAq7C,cACS,OAAcvzC,KAAKsoB,UACpBtoB,KAAKwzC,UAAYxzC,KAAKsoB,OACtBtoB,KAAKsoB,YAAS97B,EAEtB,CACH6mD,aAAa9mD,GACN,GAAIyT,KAAKsoB,OACL,OAAOtoB,KAAKsoB,OAEhB,MAAMgpB,EAActxC,KAAKsoB,OAAStoB,KAAKozC,mBAAmB7mD,GAE1D,OADAyT,KAAKyzC,oBAAoBlnD,GAClB+kD,CACX,CACA8B,mBAAmB7mD,EAAO0e,GACtB,MAAM8O,EAASxtB,GAASA,EAAMwtB,OACxBjtB,GAAU,IAAAmD,GAAe8pB,EAAOjtB,SAAWitB,EAAOjtB,QAAQs+B,QAAS,CAAC,GACpEA,EAWb,SAAoBrR,GACjB,MAAM25B,EAAW,CAAC,EACZtoB,EAAU,GACV99B,EAAOD,OAAOC,KAAKooC,GAAStK,QAAQ7U,OAC1C,IAAI,IAAIhpB,EAAI,EAAGA,EAAID,EAAKE,OAAQD,IAC5B69B,EAAQj9B,KAAKunC,GAASyc,UAAU7kD,EAAKC,KAEzC,MAAMomD,EAAQ55B,EAAOqR,SAAW,GAChC,IAAI,IAAI79B,EAAI,EAAGA,EAAIomD,EAAMnmD,OAAQD,IAAI,CACjC,MAAMsN,EAAS84C,EAAMpmD,IACY,IAA7B69B,EAAQ3+B,QAAQoO,KAChBuwB,EAAQj9B,KAAK0M,GACb64C,EAAS74C,EAAO7K,KAAM,EAE9B,CACA,MAAO,CACHo7B,UACAsoB,WAER,CA9BwBE,CAAW75B,GAC3B,OAAmB,IAAZjtB,GAAsBme,EAuCrC,SAA2B1e,GAAO,QAAE6+B,EAAQ,SAAEsoB,GAAa5mD,EAASme,GAChE,MAAMg3B,EAAS,GACTpjC,EAAUtS,EAAM61B,aACtB,IAAK,MAAMvnB,KAAUuwB,EAAQ,CACzB,MAAMp7B,EAAK6K,EAAO7K,GACZnE,EAAOgoD,GAAQ/mD,EAAQkD,GAAKib,GACrB,OAATpf,GAGJo2C,EAAO9zC,KAAK,CACR0M,SACA/N,QAASgnD,GAAWvnD,EAAMwtB,OAAQ,CAC9Blf,SACA84C,MAAOD,EAAS1jD,IACjBnE,EAAMgT,IAEjB,CACA,OAAOojC,CACX,CAzDgD8R,CAAkBxnD,EAAO6+B,EAASt+B,EAASme,GAAhD,EACvC,CACHwoC,oBAAoBlnD,GACb,MAAMynD,EAAsBh0C,KAAKwzC,WAAa,GACxClC,EAActxC,KAAKsoB,OACnB0N,EAAO,CAAClzB,EAAGC,IAAID,EAAEiJ,QAAQpf,IAAKoW,EAAEkxC,MAAMrnD,GAAID,EAAEkO,OAAO7K,KAAOpD,EAAEiO,OAAO7K,OACzEgQ,KAAKyV,QAAQugB,EAAKge,EAAqB1C,GAAc/kD,EAAO,QAC5DyT,KAAKyV,QAAQugB,EAAKsb,EAAa0C,GAAsBznD,EAAO,QAChE,EAsBJ,SAASsnD,GAAQ/mD,EAASme,GACtB,OAAKA,IAAmB,IAAZne,GAGI,IAAZA,EACO,CAAC,EAELA,EALI,IAMf,CAoBA,SAASgnD,GAAW/5B,GAAQ,OAAElf,EAAO,MAAE84C,GAAU9nD,EAAMgT,GACnD,MAAMvR,EAAOysB,EAAOm6B,gBAAgBr5C,GAC9BonB,EAASlI,EAAOmI,gBAAgBr2B,EAAMyB,GAI5C,OAHIqmD,GAAS94C,EAAOE,UAChBknB,EAAO9zB,KAAK0M,EAAOE,UAEhBgf,EAAOoI,eAAeF,EAAQpjB,EAAS,CAC1C,IACD,CACCs1C,YAAY,EACZC,WAAW,EACXC,SAAS,GAEjB,CAEA,SAASC,GAAapgD,EAAMpH,GACxB,MAAMynD,EAAkB,EAAAn6B,EAAS2G,SAAS7sB,IAAS,CAAC,EAEpD,QADwBpH,EAAQi0B,UAAY,CAAC,GAAG7sB,IAAS,CAAC,GACpCosB,WAAaxzB,EAAQwzB,WAAai0B,EAAgBj0B,WAAa,GACzF,CAaA,SAASk0B,GAAcxkD,GACnB,GAAW,MAAPA,GAAqB,MAAPA,GAAqB,MAAPA,EAC5B,OAAOA,CAEf,CASA,SAASykD,GAAczkD,KAAOuM,GAC1B,GAAIi4C,GAAcxkD,GACd,OAAOA,EAEX,IAAK,MAAMnE,KAAQ0Q,EAAa,CAC5B,MAAMvO,EAAOnC,EAAKmC,OAZL,SADK6oC,EAayBhrC,EAAKgrC,WAZb,WAAbA,EACf,IAEM,SAAbA,GAAoC,UAAbA,EAChB,SADX,IASiE7mC,EAAGxC,OAAS,GAAKgnD,GAAcxkD,EAAG,GAAGoa,eAClG,GAAIpc,EACA,OAAOA,CAEf,CAjBJ,IAA0B6oC,EAkBtB,MAAM,IAAIl3B,MAAM,6BAA6B3P,uDACjD,CACA,SAAS0kD,GAAmB1kD,EAAIhC,EAAM6xB,GAClC,GAAIA,EAAQ7xB,EAAO,YAAcgC,EAC7B,MAAO,CACHhC,OAGZ,CAgEA,SAAS2mD,GAAY56B,GACjB,MAAMjtB,EAAUitB,EAAOjtB,UAAYitB,EAAOjtB,QAAU,CAAC,GACrDA,EAAQs+B,SAAU,IAAAn7B,GAAenD,EAAQs+B,QAAS,CAAC,GACnDt+B,EAAQK,OAzDZ,SAA0B4sB,EAAQjtB,GAC9B,MAAM8nD,EAAgB,KAAU76B,EAAO7lB,OAAS,CAC5C/G,OAAQ,CAAC,GAEP0nD,EAAe/nD,EAAQK,QAAU,CAAC,EAClC2nD,EAAiBR,GAAav6B,EAAO7lB,KAAMpH,GAC3CK,EAASE,OAAO4T,OAAO,MA8C7B,OA7CA5T,OAAOC,KAAKunD,GAAcv1C,SAAStP,IAC/B,MAAM+kD,EAAYF,EAAa7kD,GAC/B,KAAK,IAAAzC,GAASwnD,GACV,OAAO15C,QAAQ25C,MAAM,0CAA0ChlD,KAEnE,GAAI+kD,EAAUE,OACV,OAAO55C,QAAQC,KAAK,kDAAkDtL,KAE1E,MAAMhC,EAAOymD,GAAczkD,EAAI+kD,EAxBvC,SAAkC/kD,EAAI+pB,GAClC,GAAIA,EAAO/F,MAAQ+F,EAAO/F,KAAK+M,SAAU,CACrC,MAAMm0B,EAAUn7B,EAAO/F,KAAK+M,SAAShV,QAAQqO,GAAIA,EAAE6F,UAAYjwB,GAAMoqB,EAAE+F,UAAYnwB,IACnF,GAAIklD,EAAQ1nD,OACR,OAAOknD,GAAmB1kD,EAAI,IAAKklD,EAAQ,KAAOR,GAAmB1kD,EAAI,IAAKklD,EAAQ,GAE9F,CACA,MAAO,CAAC,CACZ,CAgBkDC,CAAyBnlD,EAAI+pB,GAAS,EAAAK,EAASjtB,OAAO4nD,EAAU7gD,OACpGkhD,EA5Dd,SAAmCpnD,EAAMsyB,GACrC,OAAOtyB,IAASsyB,EAAY,UAAY,SAC5C,CA0D0B+0B,CAA0BrnD,EAAM8mD,GAC5CQ,EAAsBV,EAAcznD,QAAU,CAAC,EACrDA,EAAO6C,IAAM,QAAQ3C,OAAO4T,OAAO,MAAO,CACtC,CACIjT,QAEJ+mD,EACAO,EAAoBtnD,GACpBsnD,EAAoBF,IACtB,IAENr7B,EAAO/F,KAAK+M,SAASzhB,SAASugB,IAC1B,MAAM3rB,EAAO2rB,EAAQ3rB,MAAQ6lB,EAAO7lB,KAC9BosB,EAAYT,EAAQS,WAAag0B,GAAapgD,EAAMpH,GAEpDwoD,GADkB,KAAUphD,IAAS,CAAC,GACA/G,QAAU,CAAC,EACvDE,OAAOC,KAAKgoD,GAAqBh2C,SAASi2C,IACtC,MAAMvnD,EAtFlB,SAAmCgC,EAAIswB,GACnC,IAAItyB,EAAOgC,EAMX,MALW,YAAPA,EACAhC,EAAOsyB,EACO,YAAPtwB,IACPhC,EAAqB,MAAdsyB,EAAoB,IAAM,KAE9BtyB,CACX,CA8EyBwnD,CAA0BD,EAAWj1B,GAC5CtwB,EAAK6vB,EAAQ7xB,EAAO,WAAaA,EACvCb,EAAO6C,GAAM7C,EAAO6C,IAAO3C,OAAO4T,OAAO,OACzC,QAAQ9T,EAAO6C,GAAK,CAChB,CACIhC,QAEJ6mD,EAAa7kD,GACbslD,EAAoBC,IACtB,GACJ,IAENloD,OAAOC,KAAKH,GAAQmS,SAASrT,IACzB,MAAMiB,EAAQC,EAAOlB,IACrB,QAAQiB,EAAO,CACX,EAAAktB,EAASjtB,OAAOD,EAAMgH,MACtB,EAAAkmB,EAASltB,OACX,IAECC,CACX,CAIqBsoD,CAAiB17B,EAAQjtB,EAC9C,CACA,SAAS4oD,GAAS1hC,GAId,OAHAA,EAAOA,GAAQ,CAAC,GACX+M,SAAW/M,EAAK+M,UAAY,GACjC/M,EAAK6O,OAAS7O,EAAK6O,QAAU,GACtB7O,CACX,CAOA,MAAM2hC,GAAW,IAAIrgC,IACfsgC,GAAa,IAAIC,IACvB,SAASC,GAAWnwB,EAAUowB,GAC1B,IAAIzoD,EAAOqoD,GAASnnD,IAAIm3B,GAMxB,OALKr4B,IACDA,EAAOyoD,IACPJ,GAAS9mD,IAAI82B,EAAUr4B,GACvBsoD,GAAWp6C,IAAIlO,IAEZA,CACX,CACA,MAAM0oD,GAAa,CAACnnD,EAAKuQ,EAAKnT,KAC1B,MAAMJ,GAAO,OAAiBuT,EAAKnT,QACtBO,IAATX,GACAgD,EAAI2M,IAAI3P,EACZ,EAEJ,MAAMoqD,GACF/0C,YAAY6Y,GACR/Z,KAAKk2C,QAzBb,SAAoBn8B,GAIhB,OAHAA,EAASA,GAAU,CAAC,GACb/F,KAAO0hC,GAAS37B,EAAO/F,MAC9B2gC,GAAY56B,GACLA,CACX,CAoBuBo8B,CAAWp8B,GAC1B/Z,KAAKo2C,YAAc,IAAI9gC,IACvBtV,KAAKq2C,eAAiB,IAAI/gC,GAC9B,CACIghC,eACA,OAAOt2C,KAAKk2C,QAAQI,QACxB,CACIpiD,WACA,OAAO8L,KAAKk2C,QAAQhiD,IACxB,CACIA,SAAKA,GACL8L,KAAKk2C,QAAQhiD,KAAOA,CACxB,CACI8f,WACA,OAAOhU,KAAKk2C,QAAQliC,IACxB,CACIA,SAAKA,GACLhU,KAAKk2C,QAAQliC,KAAO0hC,GAAS1hC,EACjC,CACIlnB,cACA,OAAOkT,KAAKk2C,QAAQppD,OACxB,CACIA,YAAQA,GACRkT,KAAKk2C,QAAQppD,QAAUA,CAC3B,CACIs+B,cACA,OAAOprB,KAAKk2C,QAAQ9qB,OACxB,CACAx2B,SACI,MAAMmlB,EAAS/Z,KAAKk2C,QACpBl2C,KAAKu2C,aACL5B,GAAY56B,EAChB,CACAw8B,aACIv2C,KAAKo2C,YAAYI,QACjBx2C,KAAKq2C,eAAeG,OACxB,CACHx0B,iBAAiBy0B,GACV,OAAOX,GAAWW,GAAa,IAAI,CAC3B,CACI,YAAYA,IACZ,MAGhB,CACHtwB,0BAA0BswB,EAAaliD,GAChC,OAAOuhD,GAAW,GAAGW,gBAA0BliD,KAAc,IAAI,CACzD,CACI,YAAYkiD,iBAA2BliD,IACvC,eAAeA,KAEnB,CACI,YAAYkiD,IACZ,MAGhB,CACH5wB,wBAAwB4wB,EAAahxB,GAC9B,OAAOqwB,GAAW,GAAGW,KAAehxB,KAAe,IAAI,CAC/C,CACI,YAAYgxB,cAAwBhxB,IACpC,YAAYgxB,IACZ,YAAYhxB,IACZ,MAGhB,CACHyuB,gBAAgBr5C,GACT,MAAM7K,EAAK6K,EAAO7K,GAElB,OAAO8lD,GAAW,GADL91C,KAAK9L,eACkBlE,KAAM,IAAI,CACtC,CACI,WAAWA,OACR6K,EAAO67C,wBAA0B,MAGpD,CACHC,cAAcC,EAAWC,GAClB,MAAMT,EAAcp2C,KAAKo2C,YACzB,IAAI1wB,EAAQ0wB,EAAY5nD,IAAIooD,GAK5B,OAJKlxB,IAASmxB,IACVnxB,EAAQ,IAAIpQ,IACZ8gC,EAAYvnD,IAAI+nD,EAAWlxB,IAExBA,CACX,CACHxD,gBAAgB00B,EAAWE,EAAUD,GAC9B,MAAM,QAAE/pD,EAAQ,KAAEoH,GAAU8L,KACtB0lB,EAAQ1lB,KAAK22C,cAAcC,EAAWC,GACtC34B,EAASwH,EAAMl3B,IAAIsoD,GACzB,GAAI54B,EACA,OAAOA,EAEX,MAAM+D,EAAS,IAAI4zB,IACnBiB,EAASx3C,SAAShS,IACVspD,IACA30B,EAAOzmB,IAAIo7C,GACXtpD,EAAKgS,SAASrT,GAAM+pD,GAAW/zB,EAAQ20B,EAAW3qD,MAEtDqB,EAAKgS,SAASrT,GAAM+pD,GAAW/zB,EAAQn1B,EAASb,KAChDqB,EAAKgS,SAASrT,GAAM+pD,GAAW/zB,EAAQ,KAAU/tB,IAAS,CAAC,EAAGjI,KAC9DqB,EAAKgS,SAASrT,GAAM+pD,GAAW/zB,EAAQ,EAAA7H,EAAUnuB,KACjDqB,EAAKgS,SAASrT,GAAM+pD,GAAW/zB,EAAQ,KAAah2B,IAAK,IAE7D,MAAMysC,EAAQz5B,MAAMzM,KAAKyvB,GAOzB,OANqB,IAAjByW,EAAMlrC,QACNkrC,EAAMvqC,KAAKd,OAAO4T,OAAO,OAEzB20C,GAAW1+B,IAAI4/B,IACfpxB,EAAM72B,IAAIioD,EAAUpe,GAEjBA,CACX,CACHqe,oBACO,MAAM,QAAEjqD,EAAQ,KAAEoH,GAAU8L,KAC5B,MAAO,CACHlT,EACA,KAAUoH,IAAS,CAAC,EACpB,EAAAkmB,EAAS2G,SAAS7sB,IAAS,CAAC,EAC5B,CACIA,QAEJ,EAAAkmB,EACA,KAER,CACH4L,oBAAoB/D,EAAQ8D,EAAOlnB,EAASinB,EAAW,CAChD,KAEA,MAAMmc,EAAS,CACXtnB,SAAS,IAEP,SAAEq8B,EAAS,YAAEC,GAAiBC,GAAYl3C,KAAKq2C,eAAgBp0B,EAAQ6D,GAC7E,IAAIh5B,EAAUkqD,EACd,GAqCR,SAAqBjX,EAAOha,GACxB,MAAM,aAAEoxB,EAAa,YAAEC,IAAiB,QAAarX,GACrD,IAAK,MAAMnwC,KAAQm2B,EAAM,CACrB,MAAMouB,EAAagD,EAAavnD,GAC1BwkD,EAAYgD,EAAYxnD,GACxBwe,GAASgmC,GAAaD,IAAepU,EAAMnwC,GACjD,GAAIukD,KAAe,QAAW/lC,IAAUipC,GAAYjpC,KAAWgmC,IAAa,OAAQhmC,GAChF,OAAO,CAEf,CACA,OAAO,CACX,CAhDYkpC,CAAYN,EAAUjxB,GAAQ,CAC9Bkc,EAAOtnB,SAAU,EACjB9b,GAAU,QAAWA,GAAWA,IAAYA,EAC5C,MAAM04C,EAAcv3C,KAAKmiB,eAAeF,EAAQpjB,EAASo4C,GACzDnqD,GAAU,QAAekqD,EAAUn4C,EAAS04C,EAChD,CACA,IAAK,MAAM3nD,KAAQm2B,EACfkc,EAAOryC,GAAQ9C,EAAQ8C,GAE3B,OAAOqyC,CACX,CACH9f,eAAeF,EAAQpjB,EAASinB,EAAW,CACpC,IACD0xB,GACC,MAAM,SAAER,GAAcE,GAAYl3C,KAAKq2C,eAAgBp0B,EAAQ6D,GAC/D,OAAO,IAAAv4B,GAASsR,IAAW,QAAem4C,EAAUn4C,OAASrS,EAAWgrD,GAAsBR,CAClG,EAEJ,SAASE,GAAYO,EAAex1B,EAAQ6D,GACxC,IAAIJ,EAAQ+xB,EAAcjpD,IAAIyzB,GACzByD,IACDA,EAAQ,IAAIpQ,IACZmiC,EAAc5oD,IAAIozB,EAAQyD,IAE9B,MAAMC,EAAWG,EAASjX,OAC1B,IAAIqP,EAASwH,EAAMl3B,IAAIm3B,GASvB,OARKzH,IAEDA,EAAS,CACL84B,UAFa,QAAgB/0B,EAAQ6D,GAGrCmxB,YAAanxB,EAAS/Z,QAAQxS,IAAKA,EAAE6Q,cAAcoyB,SAAS,YAEhE9W,EAAM72B,IAAI82B,EAAUzH,IAEjBA,CACX,CACA,MAAMm5B,GAAejpC,IAAQ,IAAA7gB,GAAS6gB,IAAU/gB,OAAOktB,oBAAoBnM,GAAO+I,QAAO,CAACC,EAAKnrB,IAAMmrB,IAAO,QAAWhJ,EAAMniB,MAAO,GAgB9HyrD,GAAkB,CACpB,MACA,SACA,OACA,QACA,aAEJ,SAASC,GAAqB9gB,EAAU7oC,GACpC,MAAoB,QAAb6oC,GAAmC,WAAbA,IAAgE,IAAvC6gB,GAAgBjrD,QAAQoqC,IAA6B,MAAT7oC,CACtG,CACA,SAAS4pD,GAAcC,EAAIC,GACvB,OAAO,SAASh1C,EAAGC,GACf,OAAOD,EAAE+0C,KAAQ90C,EAAE80C,GAAM/0C,EAAEg1C,GAAM/0C,EAAE+0C,GAAMh1C,EAAE+0C,GAAM90C,EAAE80C,EACvD,CACJ,CACA,SAASE,GAAqBl5C,GAC1B,MAAMtS,EAAQsS,EAAQtS,MAChB4tB,EAAmB5tB,EAAMO,QAAQutB,UACvC9tB,EAAMq7C,cAAc,gBACpB,OAASztB,GAAoBA,EAAiB69B,WAAY,CACtDn5C,GACDtS,EACP,CACA,SAAS0rD,GAAoBp5C,GACzB,MAAMtS,EAAQsS,EAAQtS,MAChB4tB,EAAmB5tB,EAAMO,QAAQutB,WACvC,OAASF,GAAoBA,EAAiB+9B,WAAY,CACtDr5C,GACDtS,EACP,CACC,SAAS4rD,GAAUjnC,GAShB,OARI,UAAqC,iBAATA,EAC5BA,EAAOpa,SAASshD,eAAelnC,GACxBA,GAAQA,EAAK1jB,SACpB0jB,EAAOA,EAAK,IAEZA,GAAQA,EAAKta,SACbsa,EAAOA,EAAKta,QAETsa,CACX,CACA,MAAMmnC,GAAY,CAAC,EACbC,GAAYrsD,IACd,MAAM2K,EAASuhD,GAAUlsD,GACzB,OAAOoB,OAAOwV,OAAOw1C,IAAWtsC,QAAQgM,GAAIA,EAAEnhB,SAAWA,IAAQ+f,KAAK,EAE1E,SAAS4hC,GAAgBn5C,EAAKpE,EAAOysB,GACjC,MAAMn6B,EAAOD,OAAOC,KAAK8R,GACzB,IAAK,MAAMnT,KAAOqB,EAAK,CACnB,MAAMkrD,GAAUvsD,EAChB,GAAIusD,GAAUx9C,EAAO,CACjB,MAAMoT,EAAQhP,EAAInT,UACXmT,EAAInT,IACPw7B,EAAO,GAAK+wB,EAASx9C,KACrBoE,EAAIo5C,EAAS/wB,GAAQrZ,EAE7B,CACJ,CACJ,CAqBA,MAAMqqC,GACFp6B,gBAAkB,EAAAjE,EAClBiE,iBAAmBg6B,GACnBh6B,iBAAmB,KACnBA,gBAAkBqX,GAClBrX,eAtFU,QAuFVA,gBAAkBi6B,GAClBj6B,mBAAmB9H,GACfmf,GAASl6B,OAAO+a,GAChBmiC,IACJ,CACAr6B,qBAAqB9H,GACjBmf,GAAS33B,UAAUwY,GACnBmiC,IACJ,CACAx3C,YAAYgQ,EAAMynC,GACd,MAAM5+B,EAAS/Z,KAAK+Z,OAAS,IAAIk8B,GAAO0C,GAClCC,EAAgBT,GAAUjnC,GAC1B2nC,EAAgBP,GAASM,GAC/B,GAAIC,EACA,MAAM,IAAIl5C,MAAM,4CAA+Ck5C,EAAc7oD,GAA7D,kDAA6H6oD,EAAcjiD,OAAO5G,GAAK,oBAE3K,MAAMlD,EAAUitB,EAAOoI,eAAepI,EAAOg9B,oBAAqB/2C,KAAKoiB,cACvEpiB,KAAKs2C,SAAW,IAAKv8B,EAAOu8B,UAvmEpC,SAAyB1/C,GACrB,QAAK,UAAgD,oBAApBkiD,iBAAmCliD,aAAkBkiD,gBAC3Evb,GAEJ4C,EACX,CAkmEgD4Y,CAAgBH,IACxD54C,KAAKs2C,SAAShZ,aAAavjB,GAC3B,MAAMlb,EAAUmB,KAAKs2C,SAAStZ,eAAe4b,EAAe9rD,EAAQq+B,aAC9Dv0B,EAASiI,GAAWA,EAAQjI,OAC5BzD,EAASyD,GAAUA,EAAOzD,OAC1BD,EAAQ0D,GAAUA,EAAO1D,MAC/B8M,KAAKhQ,IAAK,UACVgQ,KAAK/F,IAAM4E,EACXmB,KAAKpJ,OAASA,EACdoJ,KAAK9M,MAAQA,EACb8M,KAAK7M,OAASA,EACd6M,KAAKg5C,SAAWlsD,EAChBkT,KAAKi5C,aAAej5C,KAAKmrB,YACzBnrB,KAAKk7B,QAAU,GACfl7B,KAAKk5C,UAAY,GACjBl5C,KAAKkd,aAAU1wB,EACfwT,KAAKs6B,MAAQ,GACbt6B,KAAKo/B,6BAA0B5yC,EAC/BwT,KAAK1L,eAAY9H,EACjBwT,KAAKwW,QAAU,GACfxW,KAAKm5C,gBAAa3sD,EAClBwT,KAAKo5C,WAAa,CAAC,EAClBp5C,KAAKq5C,0BAAuB7sD,EAC7BwT,KAAKs5C,gBAAkB,GACvBt5C,KAAK7S,OAAS,CAAC,EACf6S,KAAKu5C,SAAW,IAAIvG,GACpBhzC,KAAK8gC,SAAW,CAAC,EACjB9gC,KAAKw5C,eAAiB,CAAC,EACvBx5C,KAAKy5C,UAAW,EAChBz5C,KAAKwmB,yBAAsBh6B,EAC3BwT,KAAKkf,cAAW1yB,EAChBwT,KAAK05C,WAAY,SAAUrtD,GAAO2T,KAAKpL,OAAOvI,IAAOS,EAAQ6sD,aAAe,GAC5E35C,KAAK8nB,aAAe,GACpBuwB,GAAUr4C,KAAKhQ,IAAMgQ,KAChBnB,GAAYjI,GAIjB4gB,EAASR,OAAOhX,KAAM,WAAY+3C,IAClCvgC,EAASR,OAAOhX,KAAM,WAAYi4C,IAClCj4C,KAAK45C,cACD55C,KAAKy5C,UACLz5C,KAAKpL,UAPLyG,QAAQ25C,MAAM,oEAStB,CACI7pB,kBACA,MAAQr+B,SAAS,YAAEq+B,EAAY,oBAAE0uB,GAAuB,MAAE3mD,EAAM,OAAEC,EAAO,aAAE8lD,GAAkBj5C,KAC7F,OAAK,OAAcmrB,GAGf0uB,GAAuBZ,EAChBA,EAEJ9lD,EAASD,EAAQC,EAAS,KALtBg4B,CAMf,CACInX,WACA,OAAOhU,KAAK+Z,OAAO/F,IACvB,CACIA,SAAKA,GACLhU,KAAK+Z,OAAO/F,KAAOA,CACvB,CACIlnB,cACA,OAAOkT,KAAKg5C,QAChB,CACIlsD,YAAQA,GACRkT,KAAK+Z,OAAOjtB,QAAUA,CAC1B,CACI4oC,eACA,OAAOA,EACX,CACHkkB,cASO,OARA55C,KAAK4nC,cAAc,cACf5nC,KAAKlT,QAAQgtD,WACb95C,KAAKm/B,UAEL,QAAYn/B,KAAMA,KAAKlT,QAAQoyC,kBAEnCl/B,KAAK+5C,aACL/5C,KAAK4nC,cAAc,aACZ5nC,IACX,CACAw2C,QAEI,OADA,QAAYx2C,KAAKpJ,OAAQoJ,KAAK/F,KACvB+F,IACX,CACAnC,OAEI,OADA2Z,EAAS3Z,KAAKmC,MACPA,IACX,CACHm/B,OAAOjsC,EAAOC,GACFqkB,EAASlB,QAAQtW,MAGlBA,KAAKg6C,kBAAoB,CACrB9mD,QACAC,UAJJ6M,KAAKi6C,QAAQ/mD,EAAOC,EAO5B,CACA8mD,QAAQ/mD,EAAOC,GACX,MAAMrG,EAAUkT,KAAKlT,QACf8J,EAASoJ,KAAKpJ,OACdu0B,EAAcr+B,EAAQ+sD,qBAAuB75C,KAAKmrB,YAClD+uB,EAAUl6C,KAAKs2C,SAASlZ,eAAexmC,EAAQ1D,EAAOC,EAAQg4B,GAC9DgvB,EAAWrtD,EAAQoyC,kBAAoBl/B,KAAKs2C,SAASnZ,sBACrD9wC,EAAO2T,KAAK9M,MAAQ,SAAW,SACrC8M,KAAK9M,MAAQgnD,EAAQhnD,MACrB8M,KAAK7M,OAAS+mD,EAAQ/mD,OACtB6M,KAAKi5C,aAAej5C,KAAKmrB,aACpB,QAAYnrB,KAAMm6C,GAAU,KAGjCn6C,KAAK4nC,cAAc,SAAU,CACzBxsB,KAAM8+B,KAEV,OAASptD,EAAQstD,SAAU,CACvBp6C,KACAk6C,GACDl6C,MACCA,KAAKy5C,UACDz5C,KAAK05C,UAAUrtD,IACf2T,KAAKq6C,SAGjB,CACAC,sBACI,MACMC,EADUv6C,KAAKlT,QACSK,QAAU,CAAC,GACzC,OAAKotD,GAAe,CAACC,EAAa1K,KAC9B0K,EAAYxqD,GAAK8/C,CAAM,GAE/B,CACH2K,sBACO,MAAM3tD,EAAUkT,KAAKlT,QACfsD,EAAYtD,EAAQK,OACpBA,EAAS6S,KAAK7S,OACdutD,EAAUrtD,OAAOC,KAAKH,GAAQgqB,QAAO,CAAC/X,EAAKpP,KAC7CoP,EAAIpP,IAAM,EACHoP,IACR,CAAC,GACJ,IAAImX,EAAQ,GACRnmB,IACAmmB,EAAQA,EAAMlL,OAAOhe,OAAOC,KAAK8C,GAAWo7B,KAAKx7B,IAC7C,MAAMuM,EAAenM,EAAUJ,GACzBhC,EAAOymD,GAAczkD,EAAIuM,GACzBo+C,EAAoB,MAAT3sD,EACXsB,EAAwB,MAATtB,EACrB,MAAO,CACHlB,QAASyP,EACTq+C,UAAWD,EAAW,YAAcrrD,EAAe,SAAW,OAC9DurD,MAAOF,EAAW,eAAiBrrD,EAAe,WAAa,SAClE,OAGT,OAAKinB,GAAQrF,IACT,MAAM3U,EAAe2U,EAAKpkB,QACpBkD,EAAKuM,EAAavM,GAClBhC,EAAOymD,GAAczkD,EAAIuM,GACzBu+C,GAAY,IAAA7qD,GAAesM,EAAarI,KAAMgd,EAAK2pC,YAC3BruD,IAA1B+P,EAAas6B,UAA0B8gB,GAAqBp7C,EAAas6B,SAAU7oC,KAAU2pD,GAAqBzmC,EAAK0pC,aACvHr+C,EAAas6B,SAAW3lB,EAAK0pC,WAEjCF,EAAQ1qD,IAAM,EACd,IAAI9C,EAAQ,KACR8C,KAAM7C,GAAUA,EAAO6C,GAAIkE,OAAS4mD,EACpC5tD,EAAQC,EAAO6C,IAGf9C,EAAQ,IADWwoC,GAAS0c,SAAS0I,GAC7B,CAAe,CACnB9qD,KACAkE,KAAM4mD,EACN7gD,IAAK+F,KAAK/F,IACV1N,MAAOyT,OAEX7S,EAAOD,EAAM8C,IAAM9C,GAEvBA,EAAMsY,KAAKjJ,EAAczP,EAAQ,KAErC,OAAK4tD,GAAS,CAACK,EAAY/qD,KAClB+qD,UACM5tD,EAAO6C,EAClB,KAEJ,OAAK7C,GAASD,IACV8tC,EAAQ9gB,UAAUla,KAAM9S,EAAOA,EAAMJ,SACrCkuC,EAAQC,OAAOj7B,KAAM9S,EAAM,GAEnC,CACH8tD,kBACO,MAAMt/B,EAAW1b,KAAKk5C,UAChB5xB,EAAUtnB,KAAKgU,KAAK+M,SAASvzB,OAC7B65B,EAAU3L,EAASluB,OAEzB,GADAkuB,EAAS/Y,MAAK,CAACG,EAAGC,IAAID,EAAE1C,MAAQ2C,EAAE3C,QAC9BinB,EAAUC,EAAS,CACnB,IAAI,IAAI/5B,EAAI+5B,EAAS/5B,EAAI85B,IAAW95B,EAChCyS,KAAKi7C,oBAAoB1tD,GAE7BmuB,EAASlR,OAAO8c,EAASD,EAAUC,EACvC,CACAtnB,KAAKs5C,gBAAkB59B,EAASjZ,MAAM,GAAGE,KAAKi1C,GAAc,QAAS,SACzE,CACHsD,8BACO,MAAQhC,UAAWx9B,EAAW1H,MAAM,SAAE+M,IAAiB/gB,KACnD0b,EAASluB,OAASuzB,EAASvzB,eACpBwS,KAAKkd,QAEhBxB,EAASpc,SAAQ,CAAC6c,EAAM/b,KACqC,IAArD2gB,EAAShV,QAAQpf,GAAIA,IAAMwvB,EAAKiY,WAAU5mC,QAC1CwS,KAAKi7C,oBAAoB76C,EAC7B,GAER,CACA+6C,2BACI,MAAMC,EAAiB,GACjBr6B,EAAW/gB,KAAKgU,KAAK+M,SAC3B,IAAIxzB,EAAGquB,EAEP,IADA5b,KAAKk7C,8BACD3tD,EAAI,EAAGquB,EAAOmF,EAASvzB,OAAQD,EAAIquB,EAAMruB,IAAI,CAC7C,MAAMsyB,EAAUkB,EAASxzB,GACzB,IAAI4uB,EAAOnc,KAAKghB,eAAezzB,GAC/B,MAAM2G,EAAO2rB,EAAQ3rB,MAAQ8L,KAAK+Z,OAAO7lB,KAWzC,GAVIioB,EAAKjoB,MAAQioB,EAAKjoB,OAASA,IAC3B8L,KAAKi7C,oBAAoB1tD,GACzB4uB,EAAOnc,KAAKghB,eAAezzB,IAE/B4uB,EAAKjoB,KAAOA,EACZioB,EAAKmE,UAAYT,EAAQS,WAAag0B,GAAapgD,EAAM8L,KAAKlT,SAC9DqvB,EAAKk/B,MAAQx7B,EAAQw7B,OAAS,EAC9Bl/B,EAAK/b,MAAQ7S,EACb4uB,EAAKoI,MAAQ,GAAK1E,EAAQ0E,MAC1BpI,EAAKm/B,QAAUt7C,KAAKysB,iBAAiBl/B,GACjC4uB,EAAKY,WACLZ,EAAKY,WAAW6C,YAAYryB,GAC5B4uB,EAAKY,WAAWwC,iBACb,CACH,MAAMg8B,EAAkB7lB,GAASuc,cAAc/9C,IACzC,mBAAEkrB,EAAmB,gBAAEC,GAAqB,EAAAjF,EAAS2G,SAAS7sB,GACpE7G,OAAOgR,OAAOk9C,EAAiB,CAC3Bl8B,gBAAiBqW,GAASC,WAAWtW,GACrCD,mBAAoBA,GAAsBsW,GAASC,WAAWvW,KAElEjD,EAAKY,WAAa,IAAIw+B,EAAgBv7C,KAAMzS,GAC5C6tD,EAAejtD,KAAKguB,EAAKY,WAC7B,CACJ,CAEA,OADA/c,KAAKg7C,kBACEI,CACX,CACHI,kBACO,OAAKx7C,KAAKgU,KAAK+M,UAAU,CAAClB,EAAS7D,KAC/Bhc,KAAKghB,eAAehF,GAAce,WAAWjL,OAAO,GACrD9R,KACP,CACH8R,QACO9R,KAAKw7C,iBACLx7C,KAAK4nC,cAAc,QACvB,CACAhzC,OAAOvI,GACH,MAAM0tB,EAAS/Z,KAAK+Z,OACpBA,EAAOnlB,SACP,MAAM9H,EAAUkT,KAAKg5C,SAAWj/B,EAAOoI,eAAepI,EAAOg9B,oBAAqB/2C,KAAKoiB,cACjFq5B,EAAgBz7C,KAAKwmB,qBAAuB15B,EAAQutB,UAK1D,GAJAra,KAAK07C,gBACL17C,KAAK27C,sBACL37C,KAAK47C,uBACL57C,KAAKu5C,SAAShG,cAIP,IAHHvzC,KAAK4nC,cAAc,eAAgB,CACnCv7C,OACA6L,YAAY,IAEZ,OAEJ,MAAMkjD,EAAiBp7C,KAAKm7C,2BAC5Bn7C,KAAK4nC,cAAc,wBACnB,IAAItM,EAAa,EACjB,IAAI,IAAI/tC,EAAI,EAAGquB,EAAO5b,KAAKgU,KAAK+M,SAASvzB,OAAQD,EAAIquB,EAAMruB,IAAI,CAC3D,MAAM,WAAEwvB,GAAgB/c,KAAKghB,eAAezzB,GACtCukB,GAAS2pC,IAAyD,IAAxCL,EAAe3uD,QAAQswB,GACvDA,EAAW2E,sBAAsB5P,GACjCwpB,EAAa9rC,KAAKN,KAAK6tB,EAAWsH,iBAAkBiX,EACxD,CACAA,EAAat7B,KAAK67C,YAAc/uD,EAAQusC,OAAOyiB,YAAcxgB,EAAa,EAC1Et7B,KAAK+7C,cAAczgB,GACdmgB,IACD,OAAKL,GAAiBr+B,IAClBA,EAAWjL,OAAO,IAG1B9R,KAAKg8C,gBAAgB3vD,GACrB2T,KAAK4nC,cAAc,cAAe,CAC9Bv7C,SAEJ2T,KAAKk7B,QAAQv4B,KAAKi1C,GAAc,IAAK,SACrC,MAAM,QAAEphC,EAAQ,WAAE2iC,GAAgBn5C,KAC9Bm5C,EACAn5C,KAAKi8C,cAAc9C,GAAY,GACxB3iC,EAAQhpB,QACfwS,KAAKk8C,mBAAmB1lC,EAASA,GAAS,GAE9CxW,KAAKq6C,QACT,CACHqB,iBACO,OAAK17C,KAAK7S,QAASD,IACf8tC,EAAQI,UAAUp7B,KAAM9S,EAAM,IAElC8S,KAAKs6C,sBACLt6C,KAAKy6C,qBACT,CACHkB,sBACO,MAAM7uD,EAAUkT,KAAKlT,QACfqvD,EAAiB,IAAItG,IAAIxoD,OAAOC,KAAK0S,KAAKo5C,aAC1CgD,EAAY,IAAIvG,IAAI/oD,EAAQgnB,SAC7B,QAAUqoC,EAAgBC,MAAgBp8C,KAAKq5C,uBAAyBvsD,EAAQgtD,aACjF95C,KAAKq8C,eACLr8C,KAAK+5C,aAEb,CACH6B,uBACO,MAAM,eAAEpC,GAAoBx5C,KACtBs8C,EAAUt8C,KAAKu8C,0BAA4B,GACjD,IAAK,MAAM,OAAE/8C,EAAO,MAAExE,EAAM,MAAE2V,KAAY2rC,EAEtC/D,GAAgBiB,EAAgBx+C,EADR,oBAAXwE,GAAgCmR,EAAQA,EAG7D,CACH4rC,yBACO,MAAMz0B,EAAe9nB,KAAK8nB,aAC1B,IAAKA,IAAiBA,EAAat6B,OAC/B,OAEJwS,KAAK8nB,aAAe,GACpB,MAAM00B,EAAex8C,KAAKgU,KAAK+M,SAASvzB,OAClCivD,EAAW5R,GAAM,IAAIgL,IAAI/tB,EAAa/b,QAAQgM,GAAIA,EAAE,KAAO8yB,IAAKrf,KAAI,CAACzT,EAAGxqB,IAAIA,EAAI,IAAMwqB,EAAEvN,OAAO,GAAGqE,KAAK,QACvG6tC,EAAYD,EAAQ,GAC1B,IAAI,IAAIlvD,EAAI,EAAGA,EAAIivD,EAAcjvD,IAC7B,KAAK,QAAUmvD,EAAWD,EAAQlvD,IAC9B,OAGR,OAAO0R,MAAMzM,KAAKkqD,GAAWlxB,KAAKzT,GAAIA,EAAE1V,MAAM,OAAMmpB,KAAK1oB,IAAI,CACrDtD,OAAQsD,EAAE,GACV9H,OAAQ8H,EAAE,GACV6N,OAAQ7N,EAAE,MAEtB,CACHi5C,cAAczgB,GACP,IAEO,IAFHt7B,KAAK4nC,cAAc,eAAgB,CACnC1vC,YAAY,IAEZ,OAEJ8iC,EAAQpmC,OAAOoL,KAAMA,KAAK9M,MAAO8M,KAAK7M,OAAQmoC,GAC9C,MAAMvW,EAAO/kB,KAAK1L,UACZqoD,EAAS53B,EAAK7xB,OAAS,GAAK6xB,EAAK5xB,QAAU,EACjD6M,KAAKk7B,QAAU,IACf,OAAKl7B,KAAKs6B,OAAQzB,IACV8jB,GAA2B,cAAjB9jB,EAAIhC,WAGdgC,EAAI3e,WACJ2e,EAAI3e,YAERla,KAAKk7B,QAAQ/sC,QAAQ0qC,EAAIqC,WAAU,GACpCl7B,MACHA,KAAKk7B,QAAQ57B,SAAQ,CAAC4R,EAAM9Q,KACxB8Q,EAAK0rC,KAAOx8C,CAAK,IAErBJ,KAAK4nC,cAAc,cACvB,CACHoU,gBAAgB3vD,GACT,IAGO,IAHH2T,KAAK4nC,cAAc,uBAAwB,CAC3Cv7C,OACA6L,YAAY,IAFhB,CAMA,IAAI,IAAI3K,EAAI,EAAGquB,EAAO5b,KAAKgU,KAAK+M,SAASvzB,OAAQD,EAAIquB,IAAQruB,EACzDyS,KAAKghB,eAAezzB,GAAGwvB,WAAW7C,YAEtC,IAAI,IAAI3sB,EAAI,EAAGquB,EAAO5b,KAAKgU,KAAK+M,SAASvzB,OAAQD,EAAIquB,IAAQruB,EACzDyS,KAAK68C,eAAetvD,GAAG,QAAWlB,GAAQA,EAAK,CAC3C2vB,aAAczuB,IACblB,GAET2T,KAAK4nC,cAAc,sBAAuB,CACtCv7C,QAVJ,CAYJ,CACHwwD,eAAez8C,EAAO/T,GACf,MAAM8vB,EAAOnc,KAAKghB,eAAe5gB,GAC3BhE,EAAO,CACT+f,OACA/b,QACA/T,OACA6L,YAAY,IAEwC,IAApD8H,KAAK4nC,cAAc,sBAAuBxrC,KAG9C+f,EAAKY,WAAW3G,QAAQ/pB,GACxB+P,EAAKlE,YAAa,EAClB8H,KAAK4nC,cAAc,qBAAsBxrC,GAC7C,CACAi+C,UAGW,IAFHr6C,KAAK4nC,cAAc,eAAgB,CACnC1vC,YAAY,MAIZsf,EAASN,IAAIlX,MACTA,KAAKy5C,WAAajiC,EAASlB,QAAQtW,OACnCwX,EAASxc,MAAMgF,OAGnBA,KAAKnG,OACLk+C,GAAqB,CACjBxrD,MAAOyT,QAGnB,CACAnG,OACI,IAAItM,EACJ,GAAIyS,KAAKg6C,kBAAmB,CACxB,MAAM,MAAE9mD,EAAM,OAAEC,GAAY6M,KAAKg6C,kBACjCh6C,KAAKi6C,QAAQ/mD,EAAOC,GACpB6M,KAAKg6C,kBAAoB,IAC7B,CAEA,GADAh6C,KAAKw2C,QACDx2C,KAAK9M,OAAS,GAAK8M,KAAK7M,QAAU,EAClC,OAEJ,IAEO,IAFH6M,KAAK4nC,cAAc,aAAc,CACjC1vC,YAAY,IAEZ,OAEJ,MAAM4kD,EAAS98C,KAAKk7B,QACpB,IAAI3tC,EAAI,EAAGA,EAAIuvD,EAAOtvD,QAAUsvD,EAAOvvD,GAAG4tC,GAAK,IAAK5tC,EAChDuvD,EAAOvvD,GAAGsM,KAAKmG,KAAK1L,WAGxB,IADA0L,KAAK+8C,gBACCxvD,EAAIuvD,EAAOtvD,SAAUD,EACvBuvD,EAAOvvD,GAAGsM,KAAKmG,KAAK1L,WAExB0L,KAAK4nC,cAAc,YACvB,CACHjsB,uBAAuBF,GAChB,MAAMC,EAAW1b,KAAKs5C,gBAChBrX,EAAS,GACf,IAAI10C,EAAGquB,EACP,IAAIruB,EAAI,EAAGquB,EAAOF,EAASluB,OAAQD,EAAIquB,IAAQruB,EAAE,CAC7C,MAAM4uB,EAAOT,EAASnuB,GACjBkuB,IAAiBU,EAAKm/B,SACvBrZ,EAAO9zC,KAAKguB,EAEpB,CACA,OAAO8lB,CACX,CACHnL,+BACO,OAAO92B,KAAK2b,wBAAuB,EACvC,CACHohC,gBACO,IAEO,IAFH/8C,KAAK4nC,cAAc,qBAAsB,CACzC1vC,YAAY,IAEZ,OAEJ,MAAMwjB,EAAW1b,KAAK82B,+BACtB,IAAI,IAAIvpC,EAAImuB,EAASluB,OAAS,EAAGD,GAAK,IAAKA,EACvCyS,KAAKg9C,aAAathC,EAASnuB,IAE/ByS,KAAK4nC,cAAc,oBACvB,CACHoV,aAAa7gC,GACN,MAAMliB,EAAM+F,KAAK/F,IACX2qB,EAAOzI,EAAKsI,MACZw4B,GAAWr4B,EAAKF,SAChBK,EA/fd,SAAwB5I,GACpB,MAAM,OAAEwE,EAAO,OAAEE,GAAY1E,EAC7B,GAAIwE,GAAUE,EACV,MAAO,CACHlzB,KAAMgzB,EAAOhzB,KACbC,MAAO+yB,EAAO/yB,MACdH,IAAKozB,EAAOpzB,IACZC,OAAQmzB,EAAOnzB,OAG3B,CAqfqBwvD,CAAe/gC,IAASnc,KAAK1L,UACpC8H,EAAO,CACT+f,OACA/b,MAAO+b,EAAK/b,MACZlI,YAAY,IAEsC,IAAlD8H,KAAK4nC,cAAc,oBAAqBxrC,KAGxC6gD,IACA,OAAShjD,EAAK,CACVtM,MAAoB,IAAdi3B,EAAKj3B,KAAiB,EAAIo3B,EAAKp3B,KAAOi3B,EAAKj3B,KACjDC,OAAsB,IAAfg3B,EAAKh3B,MAAkBoS,KAAK9M,MAAQ6xB,EAAKn3B,MAAQg3B,EAAKh3B,MAC7DH,KAAkB,IAAbm3B,EAAKn3B,IAAgB,EAAIs3B,EAAKt3B,IAAMm3B,EAAKn3B,IAC9CC,QAAwB,IAAhBk3B,EAAKl3B,OAAmBsS,KAAK7M,OAAS4xB,EAAKr3B,OAASk3B,EAAKl3B,SAGzEyuB,EAAKY,WAAWljB,OACZojD,IACA,OAAWhjD,GAEfmC,EAAKlE,YAAa,EAClB8H,KAAK4nC,cAAc,mBAAoBxrC,GAC3C,CACH+6B,cAAcpqC,GACP,OAAO,OAAeA,EAAOiT,KAAK1L,UAAW0L,KAAK67C,YACtD,CACAsB,0BAA0BlkD,EAAG5M,EAAMS,EAASmqC,GACxC,MAAMz3B,EAAS64B,EAAYC,MAAMjsC,GACjC,MAAsB,mBAAXmT,EACAA,EAAOQ,KAAM/G,EAAGnM,EAASmqC,GAE7B,EACX,CACAjW,eAAehF,GACX,MAAM6D,EAAU7f,KAAKgU,KAAK+M,SAAS/E,GAC7BN,EAAW1b,KAAKk5C,UACtB,IAAI/8B,EAAOT,EAAS3P,QAAQpf,GAAIA,GAAKA,EAAEynC,WAAavU,IAASlJ,MAkB7D,OAjBKwF,IACDA,EAAO,CACHjoB,KAAM,KACN8f,KAAM,GACN6L,QAAS,KACT9C,WAAY,KACZ0G,OAAQ,KACRxD,QAAS,KACTE,QAAS,KACTk7B,MAAOx7B,GAAWA,EAAQw7B,OAAS,EACnCj7C,MAAO4b,EACPoY,SAAUvU,EACV9B,QAAS,GACTwE,SAAS,GAEb7G,EAASvtB,KAAKguB,IAEXA,CACX,CACAiG,aACI,OAAOpiB,KAAKkf,WAAalf,KAAKkf,UAAW,OAAc,KAAM,CACzD3yB,MAAOyT,KACP9L,KAAM,UAEd,CACAi8B,yBACI,OAAOnwB,KAAK82B,+BAA+BtpC,MAC/C,CACAi/B,iBAAiBzQ,GACb,MAAM6D,EAAU7f,KAAKgU,KAAK+M,SAAS/E,GACnC,IAAK6D,EACD,OAAO,EAEX,MAAM1D,EAAOnc,KAAKghB,eAAehF,GACjC,MAA8B,kBAAhBG,EAAKsH,QAAwBtH,EAAKsH,QAAU5D,EAAQ4D,MACtE,CACA25B,qBAAqBphC,EAAcs/B,GAClBt7C,KAAKghB,eAAehF,GAC5ByH,QAAU63B,CACnB,CACAxvB,qBAAqB1rB,GACjBJ,KAAKw5C,eAAep5C,IAAUJ,KAAKw5C,eAAep5C,EACtD,CACAurB,kBAAkBvrB,GACd,OAAQJ,KAAKw5C,eAAep5C,EAChC,CACHi9C,kBAAkBrhC,EAAcoJ,EAAWk2B,GACpC,MAAMjvD,EAAOivD,EAAU,OAAS,OAC1Bn/B,EAAOnc,KAAKghB,eAAehF,GAC3BtG,EAAQyG,EAAKY,WAAWmJ,wBAAmB15B,EAAWH,IACxD,OAAQ+4B,IACRjJ,EAAKnI,KAAKoR,GAAW3B,QAAU63B,EAC/Bt7C,KAAKpL,WAELoL,KAAKo9C,qBAAqBphC,EAAcs/B,GACxC5lC,EAAM9gB,OAAOunB,EAAM,CACfm/B,YAEJt7C,KAAKpL,QAAQqF,GAAMA,EAAI+hB,eAAiBA,EAAe3vB,OAAOG,IAEtE,CACA8wD,KAAKthC,EAAcoJ,GACfplB,KAAKq9C,kBAAkBrhC,EAAcoJ,GAAW,EACpD,CACAm4B,KAAKvhC,EAAcoJ,GACfplB,KAAKq9C,kBAAkBrhC,EAAcoJ,GAAW,EACpD,CACH61B,oBAAoBj/B,GACb,MAAMG,EAAOnc,KAAKk5C,UAAUl9B,GACxBG,GAAQA,EAAKY,YACbZ,EAAKY,WAAWoE,kBAEbnhB,KAAKk5C,UAAUl9B,EAC1B,CACAwhC,QACI,IAAIjwD,EAAGquB,EAGP,IAFA5b,KAAKnC,OACL2Z,EAASzZ,OAAOiC,MACZzS,EAAI,EAAGquB,EAAO5b,KAAKgU,KAAK+M,SAASvzB,OAAQD,EAAIquB,IAAQruB,EACrDyS,KAAKi7C,oBAAoB1tD,EAEjC,CACAyQ,UACIgC,KAAK4nC,cAAc,iBACnB,MAAM,OAAEhxC,EAAO,IAAEqD,GAAS+F,KAC1BA,KAAKw9C,QACLx9C,KAAK+Z,OAAOw8B,aACR3/C,IACAoJ,KAAKq8C,gBACL,QAAYzlD,EAAQqD,GACpB+F,KAAKs2C,SAASrZ,eAAehjC,GAC7B+F,KAAKpJ,OAAS,KACdoJ,KAAK/F,IAAM,aAERo+C,GAAUr4C,KAAKhQ,IACtBgQ,KAAK4nC,cAAc,eACvB,CACA6V,iBAAiBrhD,GACb,OAAO4D,KAAKpJ,OAAO8mD,aAAathD,EACpC,CACH29C,aACO/5C,KAAK29C,iBACD39C,KAAKlT,QAAQgtD,WACb95C,KAAK49C,uBAEL59C,KAAKy5C,UAAW,CAExB,CACHkE,iBACO,MAAM9nC,EAAY7V,KAAKo5C,WACjB9C,EAAWt2C,KAAKs2C,SAChBuH,EAAO,CAAC3pD,EAAMgpC,KAChBoZ,EAAStgD,iBAAiBgK,KAAM9L,EAAMgpC,GACtCrnB,EAAU3hB,GAAQgpC,CAAQ,EAExBA,EAAW,CAACjkC,EAAGtM,EAAGC,KACpBqM,EAAEizB,QAAUv/B,EACZsM,EAAEkzB,QAAUv/B,EACZoT,KAAKi8C,cAAchjD,EAAE,GAEzB,OAAK+G,KAAKlT,QAAQgnB,QAAS5f,GAAO2pD,EAAK3pD,EAAMgpC,IACjD,CACH0gB,uBACY59C,KAAKq5C,uBACNr5C,KAAKq5C,qBAAuB,CAAC,GAEjC,MAAMxjC,EAAY7V,KAAKq5C,qBACjB/C,EAAWt2C,KAAKs2C,SAChBuH,EAAO,CAAC3pD,EAAMgpC,KAChBoZ,EAAStgD,iBAAiBgK,KAAM9L,EAAMgpC,GACtCrnB,EAAU3hB,GAAQgpC,CAAQ,EAExB4gB,EAAU,CAAC5pD,EAAMgpC,KACfrnB,EAAU3hB,KACVoiD,EAASzgD,oBAAoBmK,KAAM9L,EAAMgpC,UAClCrnB,EAAU3hB,GACrB,EAEEgpC,EAAW,CAAChqC,EAAOC,KACjB6M,KAAKpJ,QACLoJ,KAAKm/B,OAAOjsC,EAAOC,EACvB,EAEJ,IAAI4qD,EACJ,MAAMtE,EAAW,KACbqE,EAAQ,SAAUrE,GAClBz5C,KAAKy5C,UAAW,EAChBz5C,KAAKm/B,SACL0e,EAAK,SAAU3gB,GACf2gB,EAAK,SAAUE,EAAS,EAE5BA,EAAW,KACP/9C,KAAKy5C,UAAW,EAChBqE,EAAQ,SAAU5gB,GAClBl9B,KAAKw9C,QACLx9C,KAAKi6C,QAAQ,EAAG,GAChB4D,EAAK,SAAUpE,EAAS,EAExBnD,EAASjZ,WAAWr9B,KAAKpJ,QACzB6iD,IAEAsE,GAER,CACH1B,gBACO,OAAKr8C,KAAKo5C,YAAY,CAAClc,EAAUhpC,KAC7B8L,KAAKs2C,SAASzgD,oBAAoBmK,KAAM9L,EAAMgpC,EAAS,IAE3Dl9B,KAAKo5C,WAAa,CAAC,GACnB,OAAKp5C,KAAKq5C,sBAAsB,CAACnc,EAAUhpC,KACvC8L,KAAKs2C,SAASzgD,oBAAoBmK,KAAM9L,EAAMgpC,EAAS,IAE3Dl9B,KAAKq5C,0BAAuB7sD,CAChC,CACAwxD,iBAAiBznC,EAAOlqB,EAAMP,GAC1B,MAAMoX,EAASpX,EAAU,MAAQ,SACjC,IAAIqwB,EAAMjL,EAAM3jB,EAAGquB,EAKnB,IAJa,YAATvvB,IACA8vB,EAAOnc,KAAKghB,eAAezK,EAAM,GAAGyF,cACpCG,EAAKY,WAAW,IAAM7Z,EAAS,wBAE/B3V,EAAI,EAAGquB,EAAOrF,EAAM/oB,OAAQD,EAAIquB,IAAQruB,EAAE,CAC1C2jB,EAAOqF,EAAMhpB,GACb,MAAMwvB,EAAa7L,GAAQlR,KAAKghB,eAAe9P,EAAK8K,cAAce,WAC9DA,GACAA,EAAW7Z,EAAS,cAAcgO,EAAK3N,QAAS2N,EAAK8K,aAAc9K,EAAK9Q,MAEhF,CACJ,CACH69C,oBACO,OAAOj+C,KAAKwW,SAAW,EAC3B,CACH0nC,kBAAkBC,GACX,MAAMC,EAAap+C,KAAKwW,SAAW,GAC7B6C,EAAS8kC,EAAe3yB,KAAI,EAAGxP,eAAe5b,YAChD,MAAM+b,EAAOnc,KAAKghB,eAAehF,GACjC,IAAKG,EACD,MAAM,IAAIxc,MAAM,6BAA+Bqc,GAEnD,MAAO,CACHA,eACAzY,QAAS4Y,EAAKnI,KAAK5T,GACnBA,QACH,MAEY,QAAeiZ,EAAQ+kC,KAEpCp+C,KAAKwW,QAAU6C,EACfrZ,KAAKm5C,WAAa,KAClBn5C,KAAKk8C,mBAAmB7iC,EAAQ+kC,GAExC,CACHxW,cAAcuL,EAAM/2C,EAAM2P,GACnB,OAAO/L,KAAKu5C,SAASrG,OAAOlzC,KAAMmzC,EAAM/2C,EAAM2P,EAClD,CACH4T,gBAAgB0+B,GACT,OAA6E,IAAtEr+C,KAAKu5C,SAASjxB,OAAOvc,QAAQxS,GAAIA,EAAEsB,OAAO7K,KAAOquD,IAAU7wD,MACtE,CACH0uD,mBAAmB7iC,EAAQ+kC,EAAYE,GAChC,MAAMC,EAAev+C,KAAKlT,QAAQ0xD,MAC5BxoB,EAAO,CAAClzB,EAAGC,IAAID,EAAEiJ,QAAQpf,IAAKoW,EAAEkxC,MAAMrnD,GAAID,EAAEqvB,eAAiBpvB,EAAEovB,cAAgBrvB,EAAEyT,QAAUxT,EAAEwT,UAC7Fq+C,EAAczoB,EAAKooB,EAAY/kC,GAC/BqlC,EAAYJ,EAASjlC,EAAS2c,EAAK3c,EAAQ+kC,GAC7CK,EAAYjxD,QACZwS,KAAKg+C,iBAAiBS,EAAaF,EAAalyD,MAAM,GAEtDqyD,EAAUlxD,QAAU+wD,EAAalyD,MACjC2T,KAAKg+C,iBAAiBU,EAAWH,EAAalyD,MAAM,EAE5D,CACH4vD,cAAchjD,EAAGqlD,GACV,MAAMliD,EAAO,CACTlQ,MAAO+M,EACPqlD,SACApmD,YAAY,EACZymD,YAAa3+C,KAAKm3B,cAAcl+B,IAE9B2lD,EAAe/jD,IAAUA,EAAO/N,QAAQgnB,QAAU9T,KAAKlT,QAAQgnB,QAAQ0oB,SAASvjC,EAAE+mC,OAAO9rC,MAC/F,IAA6D,IAAzD8L,KAAK4nC,cAAc,cAAexrC,EAAMwiD,GACxC,OAEJ,MAAMzzC,EAAUnL,KAAK6+C,aAAa5lD,EAAGqlD,EAAQliD,EAAKuiD,aAMlD,OALAviD,EAAKlE,YAAa,EAClB8H,KAAK4nC,cAAc,aAAcxrC,EAAMwiD,IACnCzzC,GAAW/O,EAAK+O,UAChBnL,KAAKq6C,SAEFr6C,IACX,CACH6+C,aAAa5lD,EAAGqlD,EAAQK,GACjB,MAAQnoC,QAAS4nC,EAAa,GAAG,QAAEtxD,GAAakT,KAC1Ci3B,EAAmBqnB,EACnBjlC,EAASrZ,KAAK8+C,mBAAmB7lD,EAAGmlD,EAAYO,EAAa1nB,GAC7D8nB,GAAU,QAAc9lD,GACxB+lD,EA5yBb,SAA4B/lD,EAAG+lD,EAAWL,EAAaI,GACpD,OAAKJ,GAA0B,aAAX1lD,EAAE/E,KAGlB6qD,EACOC,EAEJ/lD,EALI,IAMf,CAoyB0BgmD,CAAmBhmD,EAAG+G,KAAKm5C,WAAYwF,EAAaI,GAClEJ,IACA3+C,KAAKm5C,WAAa,MAClB,OAASrsD,EAAQoyD,QAAS,CACtBjmD,EACAogB,EACArZ,MACDA,MACC++C,IACA,OAASjyD,EAAQ8+B,QAAS,CACtB3yB,EACAogB,EACArZ,MACDA,OAGX,MAAMmL,IAAW,QAAekO,EAAQ+kC,GAMxC,OALIjzC,GAAWmzC,KACXt+C,KAAKwW,QAAU6C,EACfrZ,KAAKk8C,mBAAmB7iC,EAAQ+kC,EAAYE,IAEhDt+C,KAAKm5C,WAAa6F,EACX7zC,CACX,CACH2zC,mBAAmB7lD,EAAGmlD,EAAYO,EAAa1nB,GACxC,GAAe,aAAXh+B,EAAE/E,KACF,MAAO,GAEX,IAAKyqD,EACD,OAAOP,EAEX,MAAMG,EAAev+C,KAAKlT,QAAQ0xD,MAClC,OAAOx+C,KAAKm9C,0BAA0BlkD,EAAGslD,EAAalyD,KAAMkyD,EAActnB,EAC9E,EAEJ,SAASyhB,KACL,OAAO,OAAKD,GAAMJ,WAAY9rD,GAAQA,EAAMgtD,SAAShG,cACzD,CAoDI,SAAS4L,GAAWhpC,EAAGipC,EAAOzyD,EAAGC,GACjC,MAAO,CACHD,EAAGA,EAAIwpB,EAAI3mB,KAAK69B,IAAI+xB,GACpBxyD,EAAGA,EAAIupB,EAAI3mB,KAAK+9B,IAAI6xB,GAE5B,CAcI,SAASC,GAAQplD,EAAKsJ,EAAS9S,EAAQs6B,EAAS7jB,EAAK2oB,GACrD,MAAM,EAAEljC,EAAE,EAAEC,EAAIsgC,WAAYlyB,EAAM,YAAEskD,EAActzB,YAAauzB,GAAYh8C,EACrE0oB,EAAcz8B,KAAKN,IAAIqU,EAAQ0oB,YAAclB,EAAUt6B,EAAS6uD,EAAa,GAC7EtzB,EAAcuzB,EAAS,EAAIA,EAASx0B,EAAUt6B,EAAS6uD,EAAc,EAC3E,IAAIE,EAAgB,EACpB,MAAMC,EAAQv4C,EAAMlM,EACpB,GAAI+vB,EAAS,CAIT,MAEM20B,IAFuBH,EAAS,EAAIA,EAASx0B,EAAU,IAChCkB,EAAc,EAAIA,EAAclB,EAAU,IACI,EAE3Ey0B,GAAiBC,GAD4B,IAAvBC,EAA2BD,EAAQC,GAAsBA,EAAqB30B,GAAW00B,IACrE,CAC9C,CACA,MACME,GAAeF,EADRjwD,KAAKN,IAAI,KAAOuwD,EAAQxzB,EAAcx7B,EAAS,EAAAu9B,GAAM/B,GAC7B,EAC/BiB,EAAalyB,EAAQ2kD,EAAcH,EACnCryB,EAAWjmB,EAAMy4C,EAAcH,GAC/B,WAAEI,EAAW,SAAEC,EAAS,WAAEC,EAAW,SAAEC,GA/D7C,SAA6B/wB,EAAKhD,EAAaC,EAAa+zB,GAC5D,MAAMC,GAXe7xC,EAWK4gB,EAAIliC,QAAQozD,cAV/B,QAAkB9xC,EAAO,CAC5B,aACA,WACA,aACA,cALR,IAAyBA,EAYrB,MAAM+xC,GAAiBl0B,EAAcD,GAAe,EAC9Co0B,EAAa5wD,KAAKL,IAAIgxD,EAAeH,EAAah0B,EAAc,GAQhEq0B,EAAqBh/C,IACvB,MAAMi/C,GAAiBr0B,EAAcz8B,KAAKL,IAAIgxD,EAAe9+C,IAAQ2+C,EAAa,EAClF,OAAO,OAAY3+C,EAAK,EAAG7R,KAAKL,IAAIgxD,EAAeG,GAAe,EAEtE,MAAO,CACHV,WAAYS,EAAkBJ,EAAEL,YAChCC,SAAUQ,EAAkBJ,EAAEJ,UAC9BC,YAAY,OAAYG,EAAEH,WAAY,EAAGM,GACzCL,UAAU,OAAYE,EAAEF,SAAU,EAAGK,GAE7C,CA0C+DG,CAAoBh9C,EAASyoB,EAAaC,EAAakB,EAAWD,GACvHszB,EAA2Bv0B,EAAc2zB,EACzCa,EAAyBx0B,EAAc4zB,EACvCa,EAA0BxzB,EAAa0yB,EAAaY,EACpDG,EAAwBxzB,EAAW0yB,EAAWY,EAC9CG,EAA2B50B,EAAc8zB,EACzCe,EAAyB70B,EAAc+zB,EACvCe,EAA0B5zB,EAAa4yB,EAAac,EACpDG,EAAwB5zB,EAAW4yB,EAAWc,EAEpD,GADA5mD,EAAIE,YACA01B,EAAU,CAEV,MAAMmxB,GAAyBN,EAA0BC,GAAyB,EAIlF,GAHA1mD,EAAI+0B,IAAIriC,EAAGC,EAAGq/B,EAAay0B,EAAyBM,GACpD/mD,EAAI+0B,IAAIriC,EAAGC,EAAGq/B,EAAa+0B,EAAuBL,GAE9Cd,EAAW,EAAG,CACd,MAAMnvC,EAAUyuC,GAAWsB,EAAwBE,EAAuBh0D,EAAGC,GAC7EqN,EAAI+0B,IAAIte,EAAQ/jB,EAAG+jB,EAAQ9jB,EAAGizD,EAAUc,EAAuBxzB,EAAW,EAAAW,EAC9E,CAEA,MAAMmzB,EAAK9B,GAAW0B,EAAwB1zB,EAAUxgC,EAAGC,GAG3D,GAFAqN,EAAI+0C,OAAOiS,EAAGt0D,EAAGs0D,EAAGr0D,GAEhBmzD,EAAW,EAAG,CACd,MAAMrvC,EAAUyuC,GAAW0B,EAAwBE,EAAuBp0D,EAAGC,GAC7EqN,EAAI+0B,IAAIte,EAAQ/jB,EAAG+jB,EAAQ9jB,EAAGmzD,EAAU5yB,EAAW,EAAAW,EAASizB,EAAwBvxD,KAAK+Y,GAC7F,CAEA,MAAM24C,GAAyB/zB,EAAW4yB,EAAW/zB,GAAekB,EAAa4yB,EAAa9zB,IAAgB,EAI9G,GAHA/xB,EAAI+0B,IAAIriC,EAAGC,EAAGo/B,EAAamB,EAAW4yB,EAAW/zB,EAAak1B,GAAuB,GACrFjnD,EAAI+0B,IAAIriC,EAAGC,EAAGo/B,EAAak1B,EAAuBh0B,EAAa4yB,EAAa9zB,GAAa,GAErF8zB,EAAa,EAAG,CAChB,MAAMpvC,EAAUyuC,GAAWyB,EAA0BE,EAAyBn0D,EAAGC,GACjFqN,EAAI+0B,IAAIte,EAAQ/jB,EAAG+jB,EAAQ9jB,EAAGkzD,EAAYgB,EAA0BtxD,KAAK+Y,GAAI2kB,EAAa,EAAAY,EAC9F,CAEA,MAAMqzB,EAAKhC,GAAWqB,EAA0BtzB,EAAYvgC,EAAGC,GAG/D,GAFAqN,EAAI+0C,OAAOmS,EAAGx0D,EAAGw0D,EAAGv0D,GAEhBgzD,EAAa,EAAG,CAChB,MAAMlvC,EAAUyuC,GAAWqB,EAA0BE,EAAyB/zD,EAAGC,GACjFqN,EAAI+0B,IAAIte,EAAQ/jB,EAAG+jB,EAAQ9jB,EAAGgzD,EAAY1yB,EAAa,EAAAY,EAAS4yB,EACpE,CACJ,KAAO,CACHzmD,EAAI80C,OAAOpiD,EAAGC,GACd,MAAMw0D,EAAc5xD,KAAK69B,IAAIqzB,GAA2Bz0B,EAAct/B,EAChE00D,EAAc7xD,KAAK+9B,IAAImzB,GAA2Bz0B,EAAcr/B,EACtEqN,EAAI+0C,OAAOoS,EAAaC,GACxB,MAAMC,EAAY9xD,KAAK69B,IAAIszB,GAAyB10B,EAAct/B,EAC5D40D,EAAY/xD,KAAK+9B,IAAIozB,GAAyB10B,EAAcr/B,EAClEqN,EAAI+0C,OAAOsS,EAAWC,EAC1B,CACAtnD,EAAIunD,WACR,CA+JA,SAASC,GAASxnD,EAAKnN,EAASugB,EAAQvgB,GACpCmN,EAAIynD,SAAU,IAAAzxD,GAAeod,EAAMs0C,eAAgB70D,EAAQ60D,gBAC3D1nD,EAAI40C,aAAY,IAAA5+C,GAAeod,EAAMs/B,WAAY7/C,EAAQ6/C,aACzD1yC,EAAI60C,gBAAiB,IAAA7+C,GAAeod,EAAMw/B,iBAAkB//C,EAAQ+/C,kBACpE5yC,EAAI2nD,UAAW,IAAA3xD,GAAeod,EAAMw0C,gBAAiB/0D,EAAQ+0D,iBAC7D5nD,EAAIO,WAAY,IAAAvK,GAAeod,EAAM9S,YAAazN,EAAQyN,aAC1DN,EAAIQ,aAAc,IAAAxK,GAAeod,EAAM3S,YAAa5N,EAAQ4N,YAChE,CACA,SAASs0C,GAAO/0C,EAAKpG,EAAU+B,GAC3BqE,EAAI+0C,OAAOp5C,EAAOjJ,EAAGiJ,EAAOhJ,EAChC,CAUA,SAASk1D,GAASluB,EAAQY,EAAS4E,EAAS,CAAC,GACzC,MAAMzoB,EAAQijB,EAAOpmC,QACbwN,MAAO+mD,EAAc,EAAI76C,IAAK86C,EAAYrxC,EAAQ,GAAOyoB,GACzDp+B,MAAOinD,EAAe/6C,IAAKg7C,GAAgB1tB,EAC7Cx5B,EAAQxL,KAAKN,IAAI6yD,EAAaE,GAC9B/6C,EAAM1X,KAAKL,IAAI6yD,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAClH,MAAO,CACHvxC,QACA3V,QACA+d,KAAMyb,EAAQzb,KACd6C,KAAM1U,EAAMlM,IAAUmnD,EAAUxxC,EAAQzJ,EAAMlM,EAAQkM,EAAMlM,EAEpE,CACC,SAASonD,GAAYnoD,EAAKk6B,EAAMK,EAAS4E,GACtC,MAAM,OAAExF,EAAO,QAAE9mC,GAAaqnC,GACxB,MAAExjB,EAAM,MAAE3V,EAAM,KAAE+d,EAAK,KAAE6C,GAAUkmC,GAASluB,EAAQY,EAAS4E,GAC7DipB,EA1BT,SAAuBv1D,GACpB,OAAIA,EAAQw1D,QACD,KAEPx1D,EAAQy1D,SAA8C,aAAnCz1D,EAAQ01D,uBACpB,KAEJxT,EACX,CAkBuByT,CAAc31D,GACjC,IACIS,EAAGR,EAAOy1B,GADV,KAAEiF,GAAM,EAAK,QAAElM,GAAa6d,GAAU,CAAC,EAE3C,IAAI7rC,EAAI,EAAGA,GAAKquB,IAAQruB,EACpBR,EAAQ6mC,GAAQ54B,GAASugB,EAAUK,EAAOruB,EAAIA,IAAMojB,GAChD5jB,EAAMgnC,OAECtM,GACPxtB,EAAI80C,OAAOhiD,EAAMJ,EAAGI,EAAMH,GAC1B66B,GAAO,GAEP46B,EAAWpoD,EAAKuoB,EAAMz1B,EAAOwuB,EAASzuB,EAAQw1D,SAElD9/B,EAAOz1B,GAMX,OAJIgsB,IACAhsB,EAAQ6mC,GAAQ54B,GAASugB,EAAUK,EAAO,IAAMjL,GAChD0xC,EAAWpoD,EAAKuoB,EAAMz1B,EAAOwuB,EAASzuB,EAAQw1D,YAEzCvpC,CACb,CACC,SAAS2pC,GAAgBzoD,EAAKk6B,EAAMK,EAAS4E,GAC1C,MAAMxF,EAASO,EAAKP,QACd,MAAEjjB,EAAM,MAAE3V,EAAM,KAAE4gB,GAAUkmC,GAASluB,EAAQY,EAAS4E,IACtD,KAAE3R,GAAM,EAAK,QAAElM,GAAa6d,GAAU,CAAC,EAC7C,IAEI7rC,EAAGR,EAAO41D,EAAO10B,EAAMJ,EAAM+0B,EAF7BC,EAAO,EACPC,EAAS,EAEb,MAAMC,EAAc3iD,IAASpF,GAASugB,EAAUK,EAAOxb,EAAQA,IAAUuQ,EACnEqyC,EAAQ,KACN/0B,IAASJ,IACT5zB,EAAI+0C,OAAO6T,EAAMh1B,GACjB5zB,EAAI+0C,OAAO6T,EAAM50B,GACjBh0B,EAAI+0C,OAAO6T,EAAMD,GACrB,EAMJ,IAJIn7B,IACA16B,EAAQ6mC,EAAOmvB,EAAW,IAC1B9oD,EAAI80C,OAAOhiD,EAAMJ,EAAGI,EAAMH,IAE1BW,EAAI,EAAGA,GAAKquB,IAAQruB,EAAE,CAEtB,GADAR,EAAQ6mC,EAAOmvB,EAAWx1D,IACtBR,EAAMgnC,KACN,SAEJ,MAAMpnC,EAAII,EAAMJ,EACVC,EAAIG,EAAMH,EACVq2D,EAAa,EAAJt2D,EACXs2D,IAAWN,GACP/1D,EAAIqhC,EACJA,EAAOrhC,EACAA,EAAIihC,IACXA,EAAOjhC,GAEXi2D,GAAQC,EAASD,EAAOl2D,KAAOm2D,IAE/BE,IACA/oD,EAAI+0C,OAAOriD,EAAGC,GACd+1D,EAAQM,EACRH,EAAS,EACT70B,EAAOJ,EAAOjhC,GAElBg2D,EAAQh2D,CACZ,CACAo2D,GACJ,CACC,SAASE,GAAkB/uB,GACxB,MAAMtoC,EAAOsoC,EAAKrnC,QACZ6/C,EAAa9gD,EAAK8gD,YAAc9gD,EAAK8gD,WAAWn/C,OAEtD,OADqB2mC,EAAKI,YAAeJ,EAAKrb,OAAUjtB,EAAK02D,SAA2C,aAAhC12D,EAAK22D,wBAA0C32D,EAAKy2D,SAAY3V,EACjGyV,GAAlBM,EACzB,CAoCA,MAAMS,GAA8B,mBAAXC,OAQzB,MAAMC,WAAoBniB,GACtB7iB,UAAY,OACfA,gBAAkB,CACXsjC,eAAgB,OAChBhV,WAAY,GACZE,iBAAkB,EAClBgV,gBAAiB,QACjBtnD,YAAa,EACb+oD,iBAAiB,EACjBd,uBAAwB,UACxB9iC,MAAM,EACNwU,UAAU,EACVouB,SAAS,EACTC,QAAS,GAEhBlkC,qBAAuB,CAChBhkB,gBAAiB,kBACjBK,YAAa,eAEjB2jB,mBAAqB,CACjB2M,aAAa,EACbC,WAAa/tB,GAAgB,eAATA,GAAkC,SAATA,GAEjDgE,YAAYoX,GACRyT,QACA/rB,KAAKy0B,UAAW,EAChBz0B,KAAKlT,aAAUN,EACfwT,KAAKga,YAASxtB,EACdwT,KAAK8Y,WAAQtsB,EACbwT,KAAKq1B,eAAY7oC,EACjBwT,KAAKujD,WAAQ/2D,EACbwT,KAAKwjD,aAAUh3D,EACfwT,KAAKyjD,eAAYj3D,EACjBwT,KAAKu0B,YAAa,EAClBv0B,KAAK0jD,gBAAiB,EACtB1jD,KAAKs0B,mBAAgB9nC,EACjB8rB,GACAjrB,OAAOgR,OAAO2B,KAAMsY,EAE5B,CACA4c,oBAAoB5gC,EAAWgsB,GAC3B,MAAMxzB,EAAUkT,KAAKlT,QACrB,IAAKA,EAAQy1D,SAA8C,aAAnCz1D,EAAQ01D,0BAA2C11D,EAAQw1D,UAAYtiD,KAAK0jD,eAAgB,CAChH,MAAM3qC,EAAOjsB,EAAQonC,SAAWl0B,KAAK8Y,MAAQ9Y,KAAKq1B,WAClD,QAA2Br1B,KAAKwjD,QAAS12D,EAASwH,EAAWykB,EAAMuH,GACnEtgB,KAAK0jD,gBAAiB,CAC1B,CACJ,CACI9vB,WAAOA,GACP5zB,KAAKwjD,QAAU5vB,SACR5zB,KAAKyjD,iBACLzjD,KAAKujD,MACZvjD,KAAK0jD,gBAAiB,CAC1B,CACI9vB,aACA,OAAO5zB,KAAKwjD,OAChB,CACIG,eACA,OAAO3jD,KAAKyjD,YAAczjD,KAAKyjD,WAAY,QAAiBzjD,KAAMA,KAAKlT,QAAQ0nC,SACnF,CACHoS,QACO,MAAM+c,EAAW3jD,KAAK2jD,SAChB/vB,EAAS5zB,KAAK4zB,OACpB,OAAO+vB,EAASn2D,QAAUomC,EAAO+vB,EAAS,GAAG3oD,MACjD,CACH8M,OACO,MAAM67C,EAAW3jD,KAAK2jD,SAChB/vB,EAAS5zB,KAAK4zB,OACdjjB,EAAQgzC,EAASn2D,OACvB,OAAOmjB,GAASijB,EAAO+vB,EAAShzC,EAAQ,GAAGzJ,IAC/C,CACH08C,YAAY72D,EAAOkW,GACZ,MAAMnW,EAAUkT,KAAKlT,QACfshB,EAAQrhB,EAAMkW,GACd2wB,EAAS5zB,KAAK4zB,OACd+vB,GAAW,QAAe3jD,KAAM,CAClCiD,WACAjI,MAAOoT,EACPlH,IAAKkH,IAET,IAAKu1C,EAASn2D,OACV,OAEJ,MAAMy0C,EAAS,GACT4hB,EA/Hb,SAAiC/2D,GAC9B,OAAIA,EAAQw1D,QACD,KAEPx1D,EAAQy1D,SAA8C,aAAnCz1D,EAAQ01D,uBACpB,KAEJ,IACX,CAuH6BsB,CAAwBh3D,GAC7C,IAAIS,EAAGquB,EACP,IAAIruB,EAAI,EAAGquB,EAAO+nC,EAASn2D,OAAQD,EAAIquB,IAAQruB,EAAE,CAC7C,MAAM,MAAEyN,EAAM,IAAEkM,GAASy8C,EAASp2D,GAC5ByH,EAAK4+B,EAAO54B,GACZoN,EAAKwrB,EAAO1sB,GAClB,GAAIlS,IAAOoT,EAAI,CACX65B,EAAO9zC,KAAK6G,GACZ,QACJ,CACA,MACM+uD,EAAeF,EAAa7uD,EAAIoT,EAD5B5Y,KAAK8D,KAAK8a,EAAQpZ,EAAGiO,KAAcmF,EAAGnF,GAAYjO,EAAGiO,KAClBnW,EAAQw1D,SACrDyB,EAAa9gD,GAAYlW,EAAMkW,GAC/Bg/B,EAAO9zC,KAAK41D,EAChB,CACA,OAAyB,IAAlB9hB,EAAOz0C,OAAey0C,EAAO,GAAKA,CAC7C,CACHmgB,YAAYnoD,EAAKu6B,EAAS4E,GAEnB,OADsB8pB,GAAkBljD,KACjCgkD,CAAc/pD,EAAK+F,KAAMw0B,EAAS4E,EAC7C,CACH6qB,KAAKhqD,EAAKe,EAAO2V,GACV,MAAMgzC,EAAW3jD,KAAK2jD,SAChBK,EAAgBd,GAAkBljD,MACxC,IAAI+Y,EAAO/Y,KAAK8Y,MAChB9d,EAAQA,GAAS,EACjB2V,EAAQA,GAAS3Q,KAAK4zB,OAAOpmC,OAASwN,EACtC,IAAK,MAAMw5B,KAAWmvB,EAClB5qC,GAAQirC,EAAc/pD,EAAK+F,KAAMw0B,EAAS,CACtCx5B,QACAkM,IAAKlM,EAAQ2V,EAAQ,IAG7B,QAASoI,CACb,CACHlf,KAAKI,EAAK3F,EAAW0G,EAAO2V,GACrB,MAAM7jB,EAAUkT,KAAKlT,SAAW,CAAC,GAClBkT,KAAK4zB,QAAU,IACnBpmC,QAAUV,EAAQyN,cACzBN,EAAIC,OAlIhB,SAAcD,EAAKk6B,EAAMn5B,EAAO2V,GACxBwyC,KAAchvB,EAAKrnC,QAAQ0nC,QA5BnC,SAA6Bv6B,EAAKk6B,EAAMn5B,EAAO2V,GAC3C,IAAIszC,EAAO9vB,EAAKovB,MACXU,IACDA,EAAO9vB,EAAKovB,MAAQ,IAAIH,OACpBjvB,EAAK8vB,KAAKA,EAAMjpD,EAAO2V,IACvBszC,EAAKzC,aAGbC,GAASxnD,EAAKk6B,EAAKrnC,SACnBmN,EAAIg1C,OAAOgV,EACf,CAmBQC,CAAoBjqD,EAAKk6B,EAAMn5B,EAAO2V,GAlB9C,SAA0B1W,EAAKk6B,EAAMn5B,EAAO2V,GACxC,MAAM,SAAEgzC,EAAS,QAAE72D,GAAaqnC,EAC1B6vB,EAAgBd,GAAkB/uB,GACxC,IAAK,MAAMK,KAAWmvB,EAClBlC,GAASxnD,EAAKnN,EAAS0nC,EAAQnnB,OAC/BpT,EAAIE,YACA6pD,EAAc/pD,EAAKk6B,EAAMK,EAAS,CAClCx5B,QACAkM,IAAKlM,EAAQ2V,EAAQ,KAErB1W,EAAIunD,YAERvnD,EAAIg1C,QAEZ,CAMQkV,CAAiBlqD,EAAKk6B,EAAMn5B,EAAO2V,EAE3C,CA6HY9W,CAAKI,EAAK+F,KAAMhF,EAAO2V,GACvB1W,EAAIW,WAEJoF,KAAKy0B,WACLz0B,KAAK0jD,gBAAiB,EACtB1jD,KAAKujD,WAAQ/2D,EAErB,EAGJ,SAAS43D,GAAU3tB,EAAIkC,EAAK3qC,EAAMipC,GAC9B,MAAMnqC,EAAU2pC,EAAG3pC,SACX,CAACkB,GAAOogB,GAAWqoB,EAAGuB,SAAS,CACnChqC,GACDipC,GACH,OAAOznC,KAAK8D,IAAIqlC,EAAMvqB,GAASthB,EAAQg+B,OAASh+B,EAAQu3D,SAC5D,CAiFA,SAASC,GAAaC,EAAKttB,GACvB,MAAM,EAAEtqC,EAAE,EAAEC,EAAE,KAAEiU,EAAK,MAAE3N,EAAM,OAAEC,GAAaoxD,EAAIvsB,SAAS,CACrD,IACA,IACA,OACA,QACA,UACDf,GACH,IAAItpC,EAAMC,EAAOH,EAAKC,EAAQ82D,EAc9B,OAbID,EAAIz6B,YACJ06B,EAAOrxD,EAAS,EAChBxF,EAAO6B,KAAKL,IAAIxC,EAAGkU,GACnBjT,EAAQ4B,KAAKN,IAAIvC,EAAGkU,GACpBpT,EAAMb,EAAI43D,EACV92D,EAASd,EAAI43D,IAEbA,EAAOtxD,EAAQ,EACfvF,EAAOhB,EAAI63D,EACX52D,EAAQjB,EAAI63D,EACZ/2D,EAAM+B,KAAKL,IAAIvC,EAAGiU,GAClBnT,EAAS8B,KAAKN,IAAItC,EAAGiU,IAElB,CACHlT,OACAF,MACAG,QACAF,SAER,CACA,SAAS+2D,GAAY1wB,EAAM3lB,EAAOjf,EAAKD,GACnC,OAAO6kC,EAAO,GAAI,OAAY3lB,EAAOjf,EAAKD,EAC9C,CAwDA,SAASkoC,GAAQmtB,EAAK53D,EAAGC,EAAGqqC,GACxB,MAAMytB,EAAc,OAAN/3D,EACRg4D,EAAc,OAAN/3D,EAERg4D,EAASL,KADEG,GAASC,IACSL,GAAaC,EAAKttB,GACrD,OAAO2tB,IAAWF,IAAS,QAAW/3D,EAAGi4D,EAAOj3D,KAAMi3D,EAAOh3D,UAAY+2D,IAAS,QAAW/3D,EAAGg4D,EAAOn3D,IAAKm3D,EAAOl3D,QACvH,CAIC,SAASm3D,GAAkB5qD,EAAKtC,GAC7BsC,EAAItC,KAAKA,EAAKhL,EAAGgL,EAAK/K,EAAG+K,EAAKiiC,EAAGjiC,EAAKmiC,EAC1C,CACA,SAASgrB,GAAYntD,EAAM3D,EAAQ+wD,EAAU,CAAC,GAC1C,MAAMp4D,EAAIgL,EAAKhL,IAAMo4D,EAAQp4D,GAAKqH,EAAS,EACrCpH,EAAI+K,EAAK/K,IAAMm4D,EAAQn4D,GAAKoH,EAAS,EACrC4lC,GAAKjiC,EAAKhL,EAAIgL,EAAKiiC,IAAMmrB,EAAQp4D,EAAIo4D,EAAQnrB,EAAI5lC,EAAS,GAAKrH,EAC/DmtC,GAAKniC,EAAK/K,EAAI+K,EAAKmiC,IAAMirB,EAAQn4D,EAAIm4D,EAAQjrB,EAAI9lC,EAAS,GAAKpH,EACrE,MAAO,CACHD,EAAGgL,EAAKhL,EAAIA,EACZC,EAAG+K,EAAK/K,EAAIA,EACZgtC,EAAGjiC,EAAKiiC,EAAIA,EACZE,EAAGniC,EAAKmiC,EAAIA,EACZhP,OAAQnzB,EAAKmzB,OAErB,CAuEA,IAAI,GAAwBz9B,OAAO44B,OAAO,CAC1C4K,UAAW,KACXm0B,WA1pBA,cAAyB9jB,GACrB7iB,UAAY,MACZA,gBAAkB,CACd8Q,YAAa,SACbz0B,YAAa,OACbiyC,WAAY,GACZE,iBAAkB,EAClBgV,qBAAiBr1D,EACjB0zD,aAAc,EACd3lD,YAAa,EACb9J,OAAQ,EACRs6B,QAAS,EACTtkB,WAAOja,EACPqjC,UAAU,GAEdxR,qBAAuB,CACnBhkB,gBAAiB,mBAErBgkB,mBAAqB,CACjB2M,aAAa,EACbC,WAAa/tB,GAAgB,eAATA,GAExB2tB,cACAsC,SACA83B,YACAj5B,YACAC,YACAqzB,YACApyB,WACAhsB,YAAYoX,GACRyT,QACA/rB,KAAKlT,aAAUN,EACfwT,KAAK6qB,mBAAgBr+B,EACrBwT,KAAKktB,gBAAa1gC,EAClBwT,KAAKmtB,cAAW3gC,EAChBwT,KAAKgsB,iBAAcx/B,EACnBwT,KAAKisB,iBAAcz/B,EACnBwT,KAAKs/C,YAAc,EACnBt/C,KAAKilD,YAAc,EACf3sC,GACAjrB,OAAOgR,OAAO2B,KAAMsY,EAE5B,CACA8e,QAAQ8tB,EAAQC,EAAQluB,GACpB,MAAMlqC,EAAQiT,KAAKg4B,SAAS,CACxB,IACA,KACDf,IACG,MAAExwB,EAAM,SAAE3O,IAAc,OAAkB/K,EAAO,CACnDJ,EAAGu4D,EACHt4D,EAAGu4D,KAED,WAAEj4B,EAAW,SAAEC,EAAS,YAAEnB,EAAY,YAAEC,EAAY,cAAEpB,GAAmB7qB,KAAKg4B,SAAS,CACzF,aACA,WACA,cACA,cACA,iBACDf,GACGmuB,GAAWplD,KAAKlT,QAAQi+B,QAAU/qB,KAAKlT,QAAQyN,aAAe,EAE9D8qD,GADiB,IAAAp1D,GAAe46B,EAAesC,EAAWD,IACxB,EAAAV,IAAO,OAAc/lB,EAAOymB,EAAYC,GAC1Em4B,GAAe,QAAWxtD,EAAUk0B,EAAco5B,EAASn5B,EAAcm5B,GAC/E,OAAOC,GAAiBC,CAC5B,CACAxtB,eAAeb,GACX,MAAM,EAAEtqC,EAAE,EAAEC,EAAE,WAAEsgC,EAAW,SAAEC,EAAS,YAAEnB,EAAY,YAAEC,GAAiBjsB,KAAKg4B,SAAS,CACjF,IACA,IACA,aACA,WACA,cACA,eACDf,IACG,OAAExmC,EAAO,QAAEs6B,GAAa/qB,KAAKlT,QAC7By4D,GAAar4B,EAAaC,GAAY,EACtCq4B,GAAcx5B,EAAcC,EAAclB,EAAUt6B,GAAU,EACpE,MAAO,CACH9D,EAAGA,EAAI6C,KAAK69B,IAAIk4B,GAAaC,EAC7B54D,EAAGA,EAAI4C,KAAK+9B,IAAIg4B,GAAaC,EAErC,CACArkB,gBAAgBlK,GACZ,OAAOj3B,KAAK83B,eAAeb,EAC/B,CACAp9B,KAAKI,GACD,MAAM,QAAEnN,EAAQ,cAAE+9B,GAAmB7qB,KAC/BvP,GAAU3D,EAAQ2D,QAAU,GAAK,EACjCs6B,GAAWj+B,EAAQi+B,SAAW,GAAK,EACnC8E,EAAW/iC,EAAQ+iC,SAGzB,GAFA7vB,KAAKs/C,YAAsC,UAAxBxyD,EAAQqiC,YAA0B,IAAO,EAC5DnvB,KAAKilD,YAAcp6B,EAAgB,EAAA2B,EAAMh9B,KAAKqpB,MAAMgS,EAAgB,EAAA2B,GAAO,EACrD,IAAlB3B,GAAuB7qB,KAAKgsB,YAAc,GAAKhsB,KAAKisB,YAAc,EAClE,OAEJhyB,EAAIC,OACJ,MAAMqrD,GAAavlD,KAAKktB,WAAaltB,KAAKmtB,UAAY,EACtDlzB,EAAIwrD,UAAUj2D,KAAK69B,IAAIk4B,GAAa90D,EAAQjB,KAAK+9B,IAAIg4B,GAAa90D,GAClE,MACMi1D,EAAej1D,GADT,EAAIjB,KAAK+9B,IAAI/9B,KAAKL,IAAI,EAAA6+B,EAAInD,GAAiB,KAEvD5wB,EAAIG,UAAYtN,EAAQuN,gBACxBJ,EAAIQ,YAAc3N,EAAQ4N,YAvJlC,SAAiBT,EAAKsJ,EAAS9S,EAAQs6B,EAAS8E,GAC5C,MAAM,YAAEo1B,EAAY,WAAE/3B,EAAW,cAAErC,GAAmBtnB,EACtD,IAAI4pB,EAAW5pB,EAAQ4pB,SACvB,GAAI83B,EAAa,CACb5F,GAAQplD,EAAKsJ,EAAS9S,EAAQs6B,EAASoC,EAAU0C,GACjD,IAAI,IAAItiC,EAAI,EAAGA,EAAI03D,IAAe13D,EAC9B0M,EAAIylB,OAEH9uB,MAAMi6B,KACPsC,EAAWD,GAAcrC,EAAgB,EAAA2B,GAAO,EAAAA,GAExD,CACA6yB,GAAQplD,EAAKsJ,EAAS9S,EAAQs6B,EAASoC,EAAU0C,GACjD51B,EAAIylB,MAER,CAyIQimC,CAAQ1rD,EAAK+F,KAAM0lD,EAAc36B,EAAS8E,GAxIlD,SAAoB51B,EAAKsJ,EAAS9S,EAAQs6B,EAAS8E,GAC/C,MAAM,YAAEo1B,EAAY,WAAE/3B,EAAW,cAAErC,EAAc,QAAE/9B,GAAayW,GAC1D,YAAEhJ,EAAY,gBAAEsnD,EAAgB,WAAElV,EAAW,iBAAEE,GAAsB//C,EACrE84D,EAAgC,UAAxB94D,EAAQqiC,YACtB,IAAK50B,EACD,OAEJN,EAAI40C,YAAYlC,GAAc,IAC9B1yC,EAAI60C,eAAiBjC,EACjB+Y,GACA3rD,EAAIO,UAA0B,EAAdD,EAChBN,EAAI2nD,SAAWC,GAAmB,UAElC5nD,EAAIO,UAAYD,EAChBN,EAAI2nD,SAAWC,GAAmB,SAEtC,IAAI10B,EAAW5pB,EAAQ4pB,SACvB,GAAI83B,EAAa,CACb5F,GAAQplD,EAAKsJ,EAAS9S,EAAQs6B,EAASoC,EAAU0C,GACjD,IAAI,IAAItiC,EAAI,EAAGA,EAAI03D,IAAe13D,EAC9B0M,EAAIg1C,SAEHr+C,MAAMi6B,KACPsC,EAAWD,GAAcrC,EAAgB,EAAA2B,GAAO,EAAAA,GAExD,CACIo5B,GA3LR,SAAiB3rD,EAAKsJ,EAAS4pB,GAC3B,MAAM,WAAED,EAAW,YAAEoyB,EAAY,EAAE3yD,EAAE,EAAEC,EAAE,YAAEq/B,EAAY,YAAED,GAAiBzoB,EAC1E,IAAIsiD,EAAcvG,EAAcrzB,EAGhChyB,EAAIE,YACJF,EAAI+0B,IAAIriC,EAAGC,EAAGq/B,EAAaiB,EAAa24B,EAAa14B,EAAW04B,GAC5D75B,EAAcszB,GACduG,EAAcvG,EAActzB,EAC5B/xB,EAAI+0B,IAAIriC,EAAGC,EAAGo/B,EAAamB,EAAW04B,EAAa34B,EAAa24B,GAAa,IAE7E5rD,EAAI+0B,IAAIriC,EAAGC,EAAG0yD,EAAanyB,EAAW,EAAAW,EAASZ,EAAa,EAAAY,GAEhE7zB,EAAIunD,YACJvnD,EAAI2qB,MACR,CA6KQkhC,CAAQ7rD,EAAKsJ,EAAS4pB,GAErB83B,IACD5F,GAAQplD,EAAKsJ,EAAS9S,EAAQs6B,EAASoC,EAAU0C,GACjD51B,EAAIg1C,SAEZ,CAwGQE,CAAWl1C,EAAK+F,KAAM0lD,EAAc36B,EAAS8E,GAC7C51B,EAAIW,SACR,GAkjBJmrD,WAzEA,cAAyB7kB,GACrB7iB,UAAY,MACfA,gBAAkB,CACXwL,cAAe,QACftvB,YAAa,EACb2lD,aAAc,EACd51B,cAAe,OACfiB,gBAAY/+B,GAEnB6xB,qBAAuB,CAChBhkB,gBAAiB,kBACjBK,YAAa,eAEjBwG,YAAYoX,GACRyT,QACA/rB,KAAKlT,aAAUN,EACfwT,KAAK8pB,gBAAat9B,EAClBwT,KAAKa,UAAOrU,EACZwT,KAAK9M,WAAQ1G,EACbwT,KAAK7M,YAAS3G,EACdwT,KAAKsqB,mBAAgB99B,EACjB8rB,GACAjrB,OAAOgR,OAAO2B,KAAMsY,EAE5B,CACAze,KAAKI,GACD,MAAM,cAAEqwB,EAAgBx9B,SAAS,YAAE4N,EAAY,gBAAEL,IAAwB2F,MACnE,MAAE4lD,EAAM,MAAEI,GAjFxB,SAAuBzB,GACnB,MAAMK,EAASN,GAAaC,GACtBrxD,EAAQ0xD,EAAOh3D,MAAQg3D,EAAOj3D,KAC9BwF,EAASyxD,EAAOl3D,OAASk3D,EAAOn3D,IAChCsnC,EA/BV,SAA0BwvB,EAAK0B,EAAMC,GACjC,MAAM93C,EAAQm2C,EAAIz3D,QAAQyN,YACpBw5B,EAAOwwB,EAAI16B,cACXo2B,GAAI,QAAO7xC,GACjB,MAAO,CACHxB,EAAG63C,GAAY1wB,EAAKtmC,IAAKwyD,EAAExyD,IAAK,EAAGy4D,GACnC/vC,EAAGsuC,GAAY1wB,EAAKnmC,MAAOqyD,EAAEryD,MAAO,EAAGq4D,GACvCljD,EAAG0hD,GAAY1wB,EAAKrmC,OAAQuyD,EAAEvyD,OAAQ,EAAGw4D,GACzCzkC,EAAGgjC,GAAY1wB,EAAKpmC,KAAMsyD,EAAEtyD,KAAM,EAAGs4D,GAE7C,CAqBmBE,CAAiB5B,EAAKrxD,EAAQ,EAAGC,EAAS,GACnD23B,EArBV,SAA2By5B,EAAK0B,EAAMC,GAClC,MAAM,mBAAEl8B,GAAwBu6B,EAAIvsB,SAAS,CACzC,uBAEE5pB,EAAQm2C,EAAIz3D,QAAQozD,aACpBD,GAAI,QAAc7xC,GAClBg4C,EAAO52D,KAAKL,IAAI82D,EAAMC,GACtBnyB,EAAOwwB,EAAI16B,cACXw8B,EAAer8B,IAAsB,IAAAz8B,GAAS6gB,GACpD,MAAO,CACHk4C,QAAS7B,IAAa4B,GAAgBtyB,EAAKtmC,KAAOsmC,EAAKpmC,KAAMsyD,EAAEqG,QAAS,EAAGF,GAC3EG,SAAU9B,IAAa4B,GAAgBtyB,EAAKtmC,KAAOsmC,EAAKnmC,MAAOqyD,EAAEsG,SAAU,EAAGH,GAC9EI,WAAY/B,IAAa4B,GAAgBtyB,EAAKrmC,QAAUqmC,EAAKpmC,KAAMsyD,EAAEuG,WAAY,EAAGJ,GACpFK,YAAahC,IAAa4B,GAAgBtyB,EAAKrmC,QAAUqmC,EAAKnmC,MAAOqyD,EAAEwG,YAAa,EAAGL,GAE/F,CAMmBM,CAAkBnC,EAAKrxD,EAAQ,EAAGC,EAAS,GAC1D,MAAO,CACH6yD,MAAO,CACHr5D,EAAGi4D,EAAOj3D,KACVf,EAAGg4D,EAAOn3D,IACVmsC,EAAG1mC,EACH4mC,EAAG3mC,EACH23B,UAEJ86B,MAAO,CACHj5D,EAAGi4D,EAAOj3D,KAAOonC,EAAOtT,EACxB70B,EAAGg4D,EAAOn3D,IAAMsnC,EAAOnoB,EACvBgtB,EAAG1mC,EAAQ6hC,EAAOtT,EAAIsT,EAAO5e,EAC7B2jB,EAAG3mC,EAAS4hC,EAAOnoB,EAAImoB,EAAOhyB,EAC9B+nB,OAAQ,CACJw7B,QAAS92D,KAAKN,IAAI,EAAG47B,EAAOw7B,QAAU92D,KAAKN,IAAI6lC,EAAOnoB,EAAGmoB,EAAOtT,IAChE8kC,SAAU/2D,KAAKN,IAAI,EAAG47B,EAAOy7B,SAAW/2D,KAAKN,IAAI6lC,EAAOnoB,EAAGmoB,EAAO5e,IAClEqwC,WAAYh3D,KAAKN,IAAI,EAAG47B,EAAO07B,WAAah3D,KAAKN,IAAI6lC,EAAOhyB,EAAGgyB,EAAOtT,IACtEglC,YAAaj3D,KAAKN,IAAI,EAAG47B,EAAO27B,YAAcj3D,KAAKN,IAAI6lC,EAAOhyB,EAAGgyB,EAAO5e,MAIxF,CAsDmCwwC,CAAc3mD,MACnC4mD,GA/CK97B,EA+CmBk7B,EAAMl7B,QA9C1Bw7B,SAAWx7B,EAAOy7B,UAAYz7B,EAAO07B,YAAc17B,EAAO27B,YA8CtB,KAAqB5B,GA/C3E,IAAmB/5B,EAgDX7wB,EAAIC,OACA8rD,EAAMpsB,IAAMgsB,EAAMhsB,GAAKosB,EAAMlsB,IAAM8rB,EAAM9rB,IACzC7/B,EAAIE,YACJysD,EAAY3sD,EAAK6qD,GAAYkB,EAAO17B,EAAes7B,IACnD3rD,EAAI2qB,OACJgiC,EAAY3sD,EAAK6qD,GAAYc,GAAQt7B,EAAe07B,IACpD/rD,EAAIG,UAAYM,EAChBT,EAAIylB,KAAK,YAEbzlB,EAAIE,YACJysD,EAAY3sD,EAAK6qD,GAAYc,EAAOt7B,IACpCrwB,EAAIG,UAAYC,EAChBJ,EAAIylB,OACJzlB,EAAIW,SACR,CACAw8B,QAAQyvB,EAAQC,EAAQ7vB,GACpB,OAAOG,GAAQp3B,KAAM6mD,EAAQC,EAAQ7vB,EACzC,CACA8vB,SAASF,EAAQ5vB,GACb,OAAOG,GAAQp3B,KAAM6mD,EAAQ,KAAM5vB,EACvC,CACA+vB,SAASF,EAAQ7vB,GACb,OAAOG,GAAQp3B,KAAM,KAAM8mD,EAAQ7vB,EACvC,CACAa,eAAeb,GACX,MAAM,EAAEtqC,EAAE,EAAEC,EAAE,KAAEiU,EAAK,WAAEipB,GAAiB9pB,KAAKg4B,SAAS,CAClD,IACA,IACA,OACA,cACDf,GACH,MAAO,CACHtqC,EAAGm9B,GAAcn9B,EAAIkU,GAAQ,EAAIlU,EACjCC,EAAGk9B,EAAal9B,GAAKA,EAAIiU,GAAQ,EAEzC,CACA/N,SAAS9E,GACL,MAAgB,MAATA,EAAegS,KAAK9M,MAAQ,EAAI8M,KAAK7M,OAAS,CACzD,GAOJkwD,YAAaA,GACb4D,aA5QA,cAA2B/lB,GACvB7iB,UAAY,QACZrB,OACA+W,KACAl2B,KAGEwgB,gBAAkB,CAChB9jB,YAAa,EACb8pD,UAAW,EACXj1B,iBAAkB,EAClB83B,YAAa,EACb37B,WAAY,SACZT,OAAQ,EACRvjB,SAAU,GAIZ8W,qBAAuB,CACrBhkB,gBAAiB,kBACjBK,YAAa,eAEjBwG,YAAYoX,GACRyT,QACA/rB,KAAKlT,aAAUN,EACfwT,KAAKgd,YAASxwB,EACdwT,KAAK+zB,UAAOvnC,EACZwT,KAAKnC,UAAOrR,EACR8rB,GACAjrB,OAAOgR,OAAO2B,KAAMsY,EAE5B,CACA8e,QAAQyvB,EAAQC,EAAQ7vB,GACpB,MAAMnqC,EAAUkT,KAAKlT,SACf,EAAEH,EAAE,EAAEC,GAAOoT,KAAKg4B,SAAS,CAC7B,IACA,KACDf,GACH,OAAOznC,KAAKmoC,IAAIkvB,EAASl6D,EAAG,GAAK6C,KAAKmoC,IAAImvB,EAASl6D,EAAG,GAAK4C,KAAKmoC,IAAI7qC,EAAQu3D,UAAYv3D,EAAQg+B,OAAQ,EAC5G,CACAi8B,SAASF,EAAQ5vB,GACb,OAAOmtB,GAAUpkD,KAAM6mD,EAAQ,IAAK5vB,EACxC,CACA+vB,SAASF,EAAQ7vB,GACb,OAAOmtB,GAAUpkD,KAAM8mD,EAAQ,IAAK7vB,EACxC,CACAa,eAAeb,GACX,MAAM,EAAEtqC,EAAE,EAAEC,GAAOoT,KAAKg4B,SAAS,CAC7B,IACA,KACDf,GACH,MAAO,CACHtqC,IACAC,IAER,CACAwuB,KAAKtuB,GAED,IAAIg+B,GADJh+B,EAAUA,GAAWkT,KAAKlT,SAAW,CAAC,GACjBg+B,QAAU,EAG/B,OAFAA,EAASt7B,KAAKN,IAAI47B,EAAQA,GAAUh+B,EAAQo6D,aAAe,GAE3B,GAAxBp8B,GADYA,GAAUh+B,EAAQyN,aAAe,GAEzD,CACAV,KAAKI,EAAK8qB,GACN,MAAMj4B,EAAUkT,KAAKlT,QACjBkT,KAAK+zB,MAAQjnC,EAAQg+B,OAAS,MAAQ,OAAe9qB,KAAM+kB,EAAM/kB,KAAKob,KAAKtuB,GAAW,KAG1FmN,EAAIQ,YAAc3N,EAAQ4N,YAC1BT,EAAIO,UAAY1N,EAAQyN,YACxBN,EAAIG,UAAYtN,EAAQuN,iBACxB,QAAUJ,EAAKnN,EAASkT,KAAKrT,EAAGqT,KAAKpT,GACzC,CACAkG,WACI,MAAMhG,EAAUkT,KAAKlT,SAAW,CAAC,EAEjC,OAAOA,EAAQg+B,OAASh+B,EAAQu3D,SACpC,KAkMJ,MAAM8C,GAAgB,CAClB,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,sBAGEC,GAAoCD,GAAc37B,KAAK3T,GAAQA,EAAMhY,QAAQ,OAAQ,SAASA,QAAQ,IAAK,YACjH,SAASwnD,GAAe95D,GACpB,OAAO45D,GAAc55D,EAAI45D,GAAc35D,OAC3C,CACA,SAAS85D,GAAmB/5D,GACxB,OAAO65D,GAAkB75D,EAAI65D,GAAkB55D,OACnD,CA2BA,SAAS+5D,GAA0BjW,GAC/B,IAAIkW,EACJ,IAAIA,KAAKlW,EACL,GAAIA,EAAYkW,GAAG9sD,aAAe42C,EAAYkW,GAAGntD,gBAC7C,OAAO,EAGf,OAAO,CACX,CAIA,IAAIotD,GAAgB,CAChBz3D,GAAI,SACJ+K,SAAU,CACNjP,SAAS,EACT47D,eAAe,GAEnBtrB,aAAc7vC,EAAO0O,EAAOnO,GACxB,IAAKA,EAAQhB,QACT,OAEJ,MAAQkoB,MAAM,SAAE+M,GAAcj0B,QAAS66D,GAAkBp7D,EAAMwtB,QACzD,SAAE+K,GAAc6iC,EACtB,IAAK76D,EAAQ46D,gBAAkBH,GAA0BxmC,KAf/BuyB,EAeqEqU,KAd7ErU,EAAW54C,aAAe44C,EAAWj5C,kBAcyDyqB,GAAYyiC,GAA0BziC,IAClJ,OAhBZ,IAAkCwuB,EAkB1B,MAAMsU,EAxCd,SAAsBr7D,GAClB,IAAIgB,EAAI,EACR,MAAO,CAACsyB,EAAS7D,KACb,MAAMe,EAAaxwB,EAAMy0B,eAAehF,GAAce,WAClDA,aAAsByN,EACtBj9B,EAbZ,SAAiCsyB,EAAStyB,GAEtC,OADAsyB,EAAQxlB,gBAAkBwlB,EAAQ7L,KAAKwX,KAAI,IAAI67B,GAAe95D,OACvDA,CACX,CAUgBs6D,CAAwBhoC,EAAStyB,GAC9BwvB,aAAsByS,EAC7BjiC,EAXZ,SAAkCsyB,EAAStyB,GAEvC,OADAsyB,EAAQxlB,gBAAkBwlB,EAAQ7L,KAAKwX,KAAI,IAAI87B,GAAmB/5D,OAC3DA,CACX,CAQgBu6D,CAAyBjoC,EAAStyB,GAC/BwvB,IACPxvB,EAtBZ,SAAgCsyB,EAAStyB,GAGrC,OAFAsyB,EAAQnlB,YAAc2sD,GAAe95D,GACrCsyB,EAAQxlB,gBAAkBitD,GAAmB/5D,KACpCA,CACb,CAkBgBw6D,CAAuBloC,EAAStyB,GACxC,CAER,CA4B0By6D,CAAaz7D,GAC/Bw0B,EAASzhB,QAAQsoD,EACrB,GAmGJ,SAASK,GAAsBpoC,GAC3B,GAAIA,EAAQ0U,WAAY,CACpB,MAAMvgB,EAAO6L,EAAQlB,aACdkB,EAAQ0U,kBACR1U,EAAQlB,MACftxB,OAAO66D,eAAeroC,EAAS,OAAQ,CACnCsoC,cAAc,EACdC,YAAY,EACZC,UAAU,EACVj6C,MAAO4F,GAEf,CACJ,CACA,SAASs0C,GAAmB/7D,GACxBA,EAAMynB,KAAK+M,SAASzhB,SAASugB,IACzBooC,GAAsBpoC,EAAQ,GAEtC,CAoBA,IAAI0oC,GAAoB,CACpBv4D,GAAI,aACJ+K,SAAU,CACNytD,UAAW,UACX18D,SAAS,GAEb28D,qBAAsB,CAACl8D,EAAO6P,EAAMtP,KAChC,IAAKA,EAAQhB,QAET,YADAw8D,GAAmB/7D,GAGvB,MAAMgvC,EAAiBhvC,EAAM2G,MAC7B3G,EAAMynB,KAAK+M,SAASzhB,SAAQ,CAACugB,EAAS7D,KAClC,MAAM,MAAE2C,EAAM,UAAE2B,GAAeT,EACzB1D,EAAO5vB,EAAMy0B,eAAehF,GAC5BhI,EAAO2K,GAASkB,EAAQ7L,KAC9B,GAGO,OAHH,OAAQ,CACRsM,EACA/zB,EAAMO,QAAQwzB,YAEd,OAEJ,IAAKnE,EAAKY,WAAWkC,mBACjB,OAEJ,MAAMypC,EAAQn8D,EAAMY,OAAOgvB,EAAK8D,SAChC,GAAmB,WAAfyoC,EAAMx0D,MAAoC,SAAfw0D,EAAMx0D,KACjC,OAEJ,GAAI3H,EAAMO,QAAQu1B,QACd,OAEJ,IAoBIsmC,GApBA,MAAE3tD,EAAM,MAAE2V,GAnD1B,SAAmDwL,EAAMyX,GACrD,MAAMg1B,EAAah1B,EAAOpmC,OAC1B,IACImjB,EADA3V,EAAQ,EAEZ,MAAM,OAAEmiB,GAAYhB,GACd,IAAEhtB,EAAI,IAAED,EAAI,WAAE80B,EAAW,WAAEC,GAAgB9G,EAAO+G,gBASxD,OARIF,IACAhpB,GAAQ,QAAY,OAAa44B,EAAQzW,EAAOnvB,KAAMmB,GAAKunC,GAAI,EAAGkyB,EAAa,IAG/Ej4C,EADAsT,GACQ,QAAY,OAAa2P,EAAQzW,EAAOnvB,KAAMkB,GAAKynC,GAAK,EAAG37B,EAAO4tD,GAAc5tD,EAEhF4tD,EAAa5tD,EAElB,CACHA,QACA2V,QAER,CAiCqCk4C,CAA0C1sC,EAAMnI,GAEzE,GAAIrD,IADc7jB,EAAQ4K,WAAa,EAAI6jC,GAEvC0sB,GAAsBpoC,OAD1B,CAmBA,QAfI,OAAclB,KACdkB,EAAQlB,MAAQ3K,SACT6L,EAAQ7L,KACf3mB,OAAO66D,eAAeroC,EAAS,OAAQ,CACnCsoC,cAAc,EACdC,YAAY,EACZ55D,IAAK,WACD,OAAOwR,KAAKu0B,UAChB,EACA1lC,IAAK,SAASurB,GACVpa,KAAK2e,MAAQvE,CACjB,KAIDttB,EAAQ07D,WACX,IAAK,OACDG,EA5LpB,SAAwB30C,EAAMhZ,EAAO2V,EAAO4qB,EAAgBzuC,GAC3D,MAAMg8D,EAAUh8D,EAAQg8D,SAAWvtB,EAChC,GAAIutB,GAAWn4C,EACX,OAAOqD,EAAKvR,MAAMzH,EAAOA,EAAQ2V,GAErC,MAAMg4C,EAAY,GACZI,GAAep4C,EAAQ,IAAMm4C,EAAU,GAC7C,IAAIE,EAAe,EACnB,MAAMC,EAAWjuD,EAAQ2V,EAAQ,EACjC,IACIpjB,EAAG27D,EAAcC,EAASpkC,EAAMqkC,EADhCtmD,EAAI9H,EAGR,IADA2tD,EAAUK,KAAkBh1C,EAAKlR,GAC7BvV,EAAI,EAAGA,EAAIu7D,EAAU,EAAGv7D,IAAI,CAC5B,IAEIwpC,EAFA8rB,EAAO,EACPwG,EAAO,EAEX,MAAMC,EAAgB95D,KAAKqpB,OAAOtrB,EAAI,GAAKw7D,GAAe,EAAI/tD,EACxDuuD,EAAc/5D,KAAKL,IAAIK,KAAKqpB,OAAOtrB,EAAI,GAAKw7D,GAAe,EAAGp4C,GAAS3V,EACvEwuD,EAAiBD,EAAcD,EACrC,IAAIvyB,EAAIuyB,EAAevyB,EAAIwyB,EAAaxyB,IACpC8rB,GAAQ7uC,EAAK+iB,GAAGpqC,EAChB08D,GAAQr1C,EAAK+iB,GAAGnqC,EAEpBi2D,GAAQ2G,EACRH,GAAQG,EACR,MAAMC,EAAYj6D,KAAKqpB,MAAMtrB,EAAIw7D,GAAe,EAAI/tD,EAC9C0uD,EAAUl6D,KAAKL,IAAIK,KAAKqpB,OAAOtrB,EAAI,GAAKw7D,GAAe,EAAGp4C,GAAS3V,GACjErO,EAAGg9D,EAAU/8D,EAAGg9D,GAAa51C,EAAKlR,GAE1C,IADAqmD,EAAUpkC,GAAQ,EACdgS,EAAI0yB,EAAW1yB,EAAI2yB,EAAS3yB,IAC5BhS,EAAO,GAAMv1B,KAAK8D,KAAKq2D,EAAU9G,IAAS7uC,EAAK+iB,GAAGnqC,EAAIg9D,IAAYD,EAAU31C,EAAK+iB,GAAGpqC,IAAM08D,EAAOO,IAC7F7kC,EAAOokC,IACPA,EAAUpkC,EACVmkC,EAAel1C,EAAK+iB,GACpBqyB,EAAQryB,GAGhB4xB,EAAUK,KAAkBE,EAC5BpmD,EAAIsmD,CACR,CAEA,OADAT,EAAUK,KAAkBh1C,EAAKi1C,GAC1BN,CACX,CAkJgCkB,CAAe71C,EAAMhZ,EAAO2V,EAAO4qB,EAAgBzuC,GAC/D,MACJ,IAAK,UACD67D,EApJpB,SAA0B30C,EAAMhZ,EAAO2V,EAAO4qB,GAC1C,IAEIhuC,EAAGR,EAAOJ,EAAGC,EAAG+1D,EAAOmH,EAAU33D,EAAU43D,EAAY97B,EAAMJ,EAF7Dg1B,EAAO,EACPC,EAAS,EAEb,MAAM6F,EAAY,GACZM,EAAWjuD,EAAQ2V,EAAQ,EAC3Bq5C,EAAOh2C,EAAKhZ,GAAOrO,EAEnBkgB,EADOmH,EAAKi1C,GAAUt8D,EACVq9D,EAClB,IAAIz8D,EAAIyN,EAAOzN,EAAIyN,EAAQ2V,IAASpjB,EAAE,CAClCR,EAAQinB,EAAKzmB,GACbZ,GAAKI,EAAMJ,EAAIq9D,GAAQn9C,EAAK0uB,EAC5B3uC,EAAIG,EAAMH,EACV,MAAMq2D,EAAa,EAAJt2D,EACf,GAAIs2D,IAAWN,EACP/1D,EAAIqhC,GACJA,EAAOrhC,EACPk9D,EAAWv8D,GACJX,EAAIihC,IACXA,EAAOjhC,EACPuF,EAAW5E,GAEfs1D,GAAQC,EAASD,EAAO91D,EAAMJ,KAAOm2D,MAClC,CACH,MAAMmH,EAAY18D,EAAI,EACtB,KAAK,OAAcu8D,MAAc,OAAc33D,GAAW,CACtD,MAAM+3D,EAAqB16D,KAAKL,IAAI26D,EAAU33D,GACxCg4D,EAAqB36D,KAAKN,IAAI46D,EAAU33D,GAC1C+3D,IAAuBH,GAAcG,IAAuBD,GAC5DtB,EAAUx6D,KAAK,IACR6lB,EAAKk2C,GACRv9D,EAAGk2D,IAGPsH,IAAuBJ,GAAcI,IAAuBF,GAC5DtB,EAAUx6D,KAAK,IACR6lB,EAAKm2C,GACRx9D,EAAGk2D,GAGf,CACIt1D,EAAI,GAAK08D,IAAcF,GACvBpB,EAAUx6D,KAAK6lB,EAAKi2C,IAExBtB,EAAUx6D,KAAKpB,GACf41D,EAAQM,EACRH,EAAS,EACT70B,EAAOJ,EAAOjhC,EACdk9D,EAAW33D,EAAW43D,EAAax8D,CACvC,CACJ,CACA,OAAOo7D,CACX,CAgGgCyB,CAAiBp2C,EAAMhZ,EAAO2V,EAAO4qB,GACjD,MACJ,QACI,MAAM,IAAI57B,MAAM,qCAAqC7S,EAAQ07D,cAErE3oC,EAAQ0U,WAAao0B,CA1BrB,CA0B8B,GAChC,EAEN3qD,QAASzR,GACL+7D,GAAmB/7D,EACvB,GAyCJ,SAAS89D,GAAWpnD,EAAU2jC,EAAO9+B,EAAMiR,GACvC,GAAIA,EACA,OAEJ,IAAI/d,EAAQ4rC,EAAM3jC,GACdiE,EAAMY,EAAK7E,GAKf,MAJiB,UAAbA,IACAjI,GAAQ,QAAgBA,GACxBkM,GAAM,QAAgBA,IAEnB,CACHjE,WACAjI,QACAkM,MAER,CA+BA,SAASojD,GAAgBtvD,EAAOkM,EAAK0sB,GACjC,KAAM1sB,EAAMlM,EAAOkM,IAAM,CACrB,MAAMna,EAAQ6mC,EAAO1sB,GACrB,IAAKtW,MAAM7D,EAAMJ,KAAOiE,MAAM7D,EAAMH,GAChC,KAER,CACA,OAAOsa,CACX,CACA,SAASqjD,GAASznD,EAAGC,EAAGnT,EAAMqE,GAC1B,OAAI6O,GAAKC,EACE9O,EAAG6O,EAAElT,GAAOmT,EAAEnT,IAElBkT,EAAIA,EAAElT,GAAQmT,EAAIA,EAAEnT,GAAQ,CACvC,CAEA,SAAS46D,GAAoBC,EAAUt2B,GACnC,IAAIP,EAAS,GACT9a,GAAQ,EAOZ,OANI,OAAQ2xC,IACR3xC,GAAQ,EACR8a,EAAS62B,GAET72B,EArDR,SAA6B62B,EAAUt2B,GACnC,MAAM,EAAExnC,EAAG,KAAK,EAAEC,EAAG,MAAU69D,GAAY,CAAC,EACtCC,EAAav2B,EAAKP,OAClBA,EAAS,GAyBf,OAxBAO,EAAKwvB,SAASrkD,SAAQ,EAAGtE,QAAQkM,UAC7BA,EAAMojD,GAAgBtvD,EAAOkM,EAAKwjD,GAClC,MAAM9jB,EAAQ8jB,EAAW1vD,GACnB8M,EAAO4iD,EAAWxjD,GACd,OAANta,GACAgnC,EAAOzlC,KAAK,CACRxB,EAAGi6C,EAAMj6C,EACTC,MAEJgnC,EAAOzlC,KAAK,CACRxB,EAAGmb,EAAKnb,EACRC,OAES,OAAND,IACPinC,EAAOzlC,KAAK,CACRxB,IACAC,EAAGg6C,EAAMh6C,IAEbgnC,EAAOzlC,KAAK,CACRxB,IACAC,EAAGkb,EAAKlb,IAEhB,IAEGgnC,CACX,CAwBiB+2B,CAAoBF,EAAUt2B,GAEpCP,EAAOpmC,OAAS,IAAI61D,GAAY,CACnCzvB,SACA9mC,QAAS,CACLy1D,QAAS,GAEbzpC,QACAuc,UAAWvc,IACV,IACT,CACA,SAAS8xC,GAAiBvqD,GACtB,OAAOA,IAA0B,IAAhBA,EAAOqf,IAC5B,CAEA,SAASmrC,GAAeC,EAAS1qD,EAAO2qD,GAEpC,IAAIrrC,EADWorC,EAAQ1qD,GACLsf,KAClB,MAAMsrC,EAAU,CACZ5qD,GAEJ,IAAIxK,EACJ,IAAKm1D,EACD,OAAOrrC,EAEX,MAAe,IAATA,IAA6C,IAA3BsrC,EAAQv+D,QAAQizB,IAAa,CACjD,KAAK,OAAeA,GAChB,OAAOA,EAGX,GADA9pB,EAASk1D,EAAQprC,IACZ9pB,EACD,OAAO,EAEX,GAAIA,EAAO0lD,QACP,OAAO57B,EAEXsrC,EAAQ78D,KAAKuxB,GACbA,EAAO9pB,EAAO8pB,IAClB,CACA,OAAO,CACX,CACC,SAASurC,GAAY92B,EAAM/zB,EAAOuQ,GAC9B,MAAM+O,EAmDV,SAAyByU,GACtB,MAAMrnC,EAAUqnC,EAAKrnC,QACfo+D,EAAap+D,EAAQ4yB,KAC3B,IAAIA,GAAO,IAAAzvB,GAAei7D,GAAcA,EAAWt1D,OAAQs1D,GAI3D,YAHa1+D,IAATkzB,IACAA,IAAS5yB,EAAQuN,kBAER,IAATqlB,GAA2B,OAATA,KAGT,IAATA,EACO,SAEJA,EACX,CAjEkByrC,CAAgBh3B,GAC9B,IAAI,IAAA5mC,GAASmyB,GACT,OAAO9uB,MAAM8uB,EAAKtR,QAAiBsR,EAEvC,IAAI9pB,EAASw1D,WAAW1rC,GACxB,OAAI,OAAe9pB,IAAWpG,KAAKqpB,MAAMjjB,KAAYA,EAWzD,SAA2By1D,EAASjrD,EAAOxK,EAAQ+a,GAI/C,MAHgB,MAAZ06C,GAA+B,MAAZA,IACnBz1D,EAASwK,EAAQxK,KAEjBA,IAAWwK,GAASxK,EAAS,GAAKA,GAAU+a,IAGzC/a,CACX,CAlBe01D,CAAkB5rC,EAAK,GAAItf,EAAOxK,EAAQ+a,GAE9C,CACH,SACA,QACA,MACA,QACA,SACFlkB,QAAQizB,IAAS,GAAKA,CAC5B,CAuFC,SAAS6rC,GAAe33B,EAAQ43B,EAAaC,GAC1C,MAAMC,EAAY,GAClB,IAAI,IAAI30B,EAAI,EAAGA,EAAI00B,EAAWj+D,OAAQupC,IAAI,CACtC,MAAM5C,EAAOs3B,EAAW10B,IAClB,MAAE6P,EAAM,KAAE9+B,EAAK,MAAE/a,GAAW4+D,GAAUx3B,EAAMq3B,EAAa,KAC/D,MAAKz+D,GAAS65C,GAAS9+B,GAGvB,GAAI8+B,EACA8kB,EAAUE,QAAQ7+D,QAGlB,GADA6mC,EAAOzlC,KAAKpB,IACP+a,EACD,KAGZ,CACA8rB,EAAOzlC,QAAQu9D,EACnB,CACC,SAASC,GAAUx3B,EAAMq3B,EAAavoD,GACnC,MAAMlW,EAAQonC,EAAKyvB,YAAY4H,EAAavoD,GAC5C,IAAKlW,EACD,MAAO,CAAC,EAEZ,MAAM8+D,EAAa9+D,EAAMkW,GACnB0gD,EAAWxvB,EAAKwvB,SAChB+G,EAAav2B,EAAKP,OACxB,IAAIgT,GAAQ,EACR9+B,GAAO,EACX,IAAI,IAAIva,EAAI,EAAGA,EAAIo2D,EAASn2D,OAAQD,IAAI,CACpC,MAAMinC,EAAUmvB,EAASp2D,GACnBu+D,EAAapB,EAAWl2B,EAAQx5B,OAAOiI,GACvC8oD,EAAYrB,EAAWl2B,EAAQttB,KAAKjE,GAC1C,IAAI,QAAW4oD,EAAYC,EAAYC,GAAY,CAC/CnlB,EAAQilB,IAAeC,EACvBhkD,EAAO+jD,IAAeE,EACtB,KACJ,CACJ,CACA,MAAO,CACHnlB,QACA9+B,OACA/a,QAER,CAEA,MAAMi/D,GACF9qD,YAAYrV,GACRmU,KAAKrT,EAAId,EAAKc,EACdqT,KAAKpT,EAAIf,EAAKe,EACdoT,KAAK8qB,OAASj/B,EAAKi/B,MACvB,CACAs3B,YAAYnoD,EAAK2qD,EAAQ/4D,GACrB,MAAM,EAAEc,EAAE,EAAEC,EAAE,OAAEk+B,GAAY9qB,KAM5B,OALA4kD,EAASA,GAAU,CACf5pD,MAAO,EACPkM,IAAK,EAAAslB,GAETvyB,EAAI+0B,IAAIriC,EAAGC,EAAGk+B,EAAQ85B,EAAO19C,IAAK09C,EAAO5pD,OAAO,IACxCnP,EAAK+4D,MACjB,CACAhB,YAAY72D,GACR,MAAM,EAAEJ,EAAE,EAAEC,EAAE,OAAEk+B,GAAY9qB,KACtByG,EAAQ1Z,EAAM0Z,MACpB,MAAO,CACH9Z,EAAGA,EAAI6C,KAAK69B,IAAI5mB,GAASqkB,EACzBl+B,EAAGA,EAAI4C,KAAK+9B,IAAI9mB,GAASqkB,EACzBrkB,QAER,EAiEJ,SAASwlD,GAAUhyD,EAAKoG,EAAQ0kB,GAC5B,MAAMnvB,EA/DV,SAAoByK,GAChB,MAAM,MAAE9T,EAAM,KAAEmzB,EAAK,KAAEyU,GAAU9zB,EACjC,IAAI,OAAeqf,GACf,OAcP,SAAwBnzB,EAAO6T,GAC5B,MAAM+b,EAAO5vB,EAAMy0B,eAAe5gB,GAElC,OADgB+b,GAAQ5vB,EAAMkgC,iBAAiBrsB,GAC9B+b,EAAK0D,QAAU,IACpC,CAlBeqsC,CAAe3/D,EAAOmzB,GAEjC,GAAa,UAATA,EACA,OAjHR,SAAyBrf,GACrB,MAAM,MAAEnT,EAAM,MAAEkT,EAAM,KAAE+zB,GAAU9zB,EAC5BuzB,EAAS,GACT+vB,EAAWxvB,EAAKwvB,SAChBwI,EAAeh4B,EAAKP,OACpB63B,EAgBT,SAAuBv+D,EAAOkT,GAC3B,MAAMgsD,EAAQ,GACR3nB,EAAQv3C,EAAM2vB,wBAAwB,QAC5C,IAAI,IAAItvB,EAAI,EAAGA,EAAIk3C,EAAMj3C,OAAQD,IAAI,CACjC,MAAM4uB,EAAOsoB,EAAMl3C,GACnB,GAAI4uB,EAAK/b,QAAUA,EACf,MAEC+b,EAAKsH,QACN2oC,EAAMR,QAAQzvC,EAAK0D,QAE3B,CACA,OAAOusC,CACX,CA7BuBC,CAAcn/D,EAAOkT,GACxCqrD,EAAWt9D,KAAKq8D,GAAoB,CAChC79D,EAAG,KACHC,EAAGM,EAAMQ,QACVymC,IACH,IAAI,IAAI5mC,EAAI,EAAGA,EAAIo2D,EAASn2D,OAAQD,IAAI,CACpC,MAAMinC,EAAUmvB,EAASp2D,GACzB,IAAI,IAAIwpC,EAAIvC,EAAQx5B,MAAO+7B,GAAKvC,EAAQttB,IAAK6vB,IACzCw0B,GAAe33B,EAAQu4B,EAAap1B,GAAI00B,EAEhD,CACA,OAAO,IAAIpI,GAAY,CACnBzvB,SACA9mC,QAAS,CAAC,GAElB,CA6Few/D,CAAgBjsD,GAE3B,GAAa,UAATqf,EACA,OAAO,EAEX,MAAM+qC,EAWV,SAAyBpqD,GAErB,OADcA,EAAOnT,OAAS,CAAC,GACrBqoC,yBAiBd,SAAiCl1B,GAC7B,MAAM,MAAEnT,EAAM,KAAEwyB,GAAUrf,EACpBvT,EAAUI,EAAMJ,QAChBU,EAASN,EAAMkF,YAAY5E,OAC3BwN,EAAQlO,EAAQyuB,QAAUruB,EAAMgC,IAAMhC,EAAMiC,IAC5Cif,EAtLT,SAAyBsR,EAAMxyB,EAAOg8B,GACnC,IAAI9a,EAUJ,OARIA,EADS,UAATsR,EACQwJ,EACQ,QAATxJ,EACCxyB,EAAMJ,QAAQyuB,QAAUruB,EAAMiC,IAAMjC,EAAMgC,KAC3C,IAAA3B,GAASmyB,GACRA,EAAKtR,MAELlhB,EAAM+9C,eAEX78B,CACX,CA0KkBm+C,CAAgB7sC,EAAMxyB,EAAO8N,GACrCpF,EAAS,GACf,GAAI9I,EAAQ8iC,KAAKC,SAAU,CACvB,MAAM7gC,EAAS9B,EAAMqoC,yBAAyB,EAAGv6B,GACjD,OAAO,IAAIgxD,GAAU,CACjBr/D,EAAGqC,EAAOrC,EACVC,EAAGoC,EAAOpC,EACVk+B,OAAQ59B,EAAMyjC,8BAA8BviB,IAEpD,CACA,IAAI,IAAI7gB,EAAI,EAAGA,EAAIC,IAAUD,EACzBqI,EAAOzH,KAAKjB,EAAMqoC,yBAAyBhoC,EAAG6gB,IAElD,OAAOxY,CACX,CAnCe42D,CAAwBnsD,GAIvC,SAA+BA,GAC3B,MAAM,MAAEnT,EAAO,CAAC,EAAE,KAAEwyB,GAAUrf,EACxByqC,EApLT,SAAyBprB,EAAMxyB,GAC5B,IAAI49C,EAAQ,KAUZ,MATa,UAATprB,EACAorB,EAAQ59C,EAAMQ,OACE,QAATgyB,EACPorB,EAAQ59C,EAAMO,KACP,IAAAF,GAASmyB,GAChBorB,EAAQ59C,EAAM4E,iBAAiB4tB,EAAKtR,OAC7BlhB,EAAMqkC,eACbuZ,EAAQ59C,EAAMqkC,gBAEXuZ,CACX,CAwKkB2hB,CAAgB/sC,EAAMxyB,GACpC,IAAI,OAAe49C,GAAQ,CACvB,MAAMhhB,EAAa58B,EAAMoC,eACzB,MAAO,CACH3C,EAAGm9B,EAAaghB,EAAQ,KACxBl+C,EAAGk9B,EAAa,KAAOghB,EAE/B,CACA,OAAO,IACX,CAbW4hB,CAAsBrsD,EACjC,CAjBqBssD,CAAgBtsD,GACjC,OAAIoqD,aAAoBuB,GACbvB,EAEJD,GAAoBC,EAAUt2B,EACzC,CA+CmBy4B,CAAWvsD,IACpB,KAAE8zB,EAAK,MAAEjnC,EAAM,KAAEc,GAAUqS,EAC3BwsD,EAAW14B,EAAKrnC,QAChBo+D,EAAa2B,EAASntC,KACtB7H,EAAQg1C,EAASxyD,iBACjB,MAAEyyD,EAAOj1C,EAAM,MAAEu0C,EAAOv0C,GAAWqzC,GAAc,CAAC,EACpDt1D,GAAUu+B,EAAKP,OAAOpmC,UACtB,OAASyM,EAAK8qB,GAatB,SAAgB9qB,EAAKqe,GACjB,MAAM,KAAE6b,EAAK,OAAEv+B,EAAO,MAAEk3D,EAAM,MAAEV,EAAM,KAAErnC,EAAK,MAAE73B,GAAWorB,EACpDrV,EAAWkxB,EAAKrb,MAAQ,QAAUR,EAAItqB,KAC5CiM,EAAIC,OACa,MAAb+I,GAAoBmpD,IAAUU,IAC9BC,GAAa9yD,EAAKrE,EAAQmvB,EAAKt3B,KAC/BiyB,GAAKzlB,EAAK,CACNk6B,OACAv+B,SACAiiB,MAAOi1C,EACP5/D,QACA+V,aAEJhJ,EAAIW,UACJX,EAAIC,OACJ6yD,GAAa9yD,EAAKrE,EAAQmvB,EAAKr3B,SAEnCgyB,GAAKzlB,EAAK,CACNk6B,OACAv+B,SACAiiB,MAAOu0C,EACPl/D,QACA+V,aAEJhJ,EAAIW,SACR,CArCQoyD,CAAO/yD,EAAK,CACRk6B,OACAv+B,SACAk3D,QACAV,QACArnC,OACA73B,QACAc,UAEJ,OAAWiM,GAEnB,CA2BA,SAAS8yD,GAAa9yD,EAAKrE,EAAQq3D,GAC/B,MAAM,SAAEtJ,EAAS,OAAE/vB,GAAYh+B,EAC/B,IAAIgxC,GAAQ,EACRsmB,GAAW,EACfjzD,EAAIE,YACJ,IAAK,MAAMq6B,KAAWmvB,EAAS,CAC3B,MAAM,MAAE3oD,EAAM,IAAEkM,GAASstB,EACnBQ,EAAapB,EAAO54B,GACpBi6B,EAAYrB,EAAO02B,GAAgBtvD,EAAOkM,EAAK0sB,IACjDgT,GACA3sC,EAAI80C,OAAO/Z,EAAWroC,EAAGqoC,EAAWpoC,GACpCg6C,GAAQ,IAER3sC,EAAI+0C,OAAOha,EAAWroC,EAAGsgE,GACzBhzD,EAAI+0C,OAAOha,EAAWroC,EAAGqoC,EAAWpoC,IAExCsgE,IAAat3D,EAAOwsD,YAAYnoD,EAAKu6B,EAAS,CAC1C/M,KAAMylC,IAENA,EACAjzD,EAAIunD,YAEJvnD,EAAI+0C,OAAO/Z,EAAUtoC,EAAGsgE,EAEhC,CACAhzD,EAAI+0C,OAAOp5C,EAAOgxC,QAAQj6C,EAAGsgE,GAC7BhzD,EAAIunD,YACJvnD,EAAI2qB,MACR,CACA,SAASlF,GAAKzlB,EAAKqe,GACf,MAAM,KAAE6b,EAAK,OAAEv+B,EAAO,SAAEqN,EAAS,MAAE4U,EAAM,MAAE3qB,GAAWorB,EAChDqrC,EA/cV,SAAmBxvB,EAAMv+B,EAAQqN,GAC7B,MAAM0gD,EAAWxvB,EAAKwvB,SAChB/vB,EAASO,EAAKP,OACdu5B,EAAUv3D,EAAOg+B,OACjBqd,EAAQ,GACd,IAAK,MAAMzc,KAAWmvB,EAAS,CAC3B,IAAI,MAAE3oD,EAAM,IAAEkM,GAASstB,EACvBttB,EAAMojD,GAAgBtvD,EAAOkM,EAAK0sB,GAClC,MAAMgxB,EAASyF,GAAWpnD,EAAU2wB,EAAO54B,GAAQ44B,EAAO1sB,GAAMstB,EAAQzb,MACxE,IAAKnjB,EAAO+tD,SAAU,CAClB1S,EAAM9iD,KAAK,CACPkS,OAAQm0B,EACR5+B,OAAQgvD,EACR5pD,MAAO44B,EAAO54B,GACdkM,IAAK0sB,EAAO1sB,KAEhB,QACJ,CACA,MAAMkmD,GAAiB,QAAex3D,EAAQgvD,GAC9C,IAAK,MAAMyI,KAAOD,EAAe,CAC7B,MAAME,EAAYjD,GAAWpnD,EAAUkqD,EAAQE,EAAIryD,OAAQmyD,EAAQE,EAAInmD,KAAMmmD,EAAIt0C,MAC3Ew0C,GAAc,QAAc/4B,EAASZ,EAAQ05B,GACnD,IAAK,MAAME,KAAcD,EACrBtc,EAAM9iD,KAAK,CACPkS,OAAQmtD,EACR53D,OAAQy3D,EACRryD,MAAO,CACH,CAACiI,GAAWsnD,GAAS3F,EAAQ0I,EAAW,QAAS99D,KAAKN,MAE1DgY,IAAK,CACD,CAACjE,GAAWsnD,GAAS3F,EAAQ0I,EAAW,MAAO99D,KAAKL,OAIpE,CACJ,CACA,OAAO8hD,CACX,CA0aqBwS,CAAUtvB,EAAMv+B,EAAQqN,GACzC,IAAK,MAAQ5C,OAAQI,EAAM7K,OAAQy3D,EAAI,MAAEryD,EAAM,IAAEkM,KAAUy8C,EAAS,CAChE,MAAQt2C,OAAO,gBAAEhT,EAAiBwd,GAAW,CAAC,GAAOpX,EAC/CgtD,GAAsB,IAAX73D,EACjBqE,EAAIC,OACJD,EAAIG,UAAYC,EAChBqzD,GAAWzzD,EAAK/M,EAAOugE,GAAYpD,GAAWpnD,EAAUjI,EAAOkM,IAC/DjN,EAAIE,YACJ,MAAM+yD,IAAa/4B,EAAKiuB,YAAYnoD,EAAKwG,GACzC,IAAIsY,EACJ,GAAI00C,EAAU,CACNP,EACAjzD,EAAIunD,YAEJmM,GAAmB1zD,EAAKrE,EAAQsR,EAAKjE,GAEzC,MAAM2qD,IAAeh4D,EAAOwsD,YAAYnoD,EAAKozD,EAAK,CAC9C5lC,KAAMylC,EACN3xC,SAAS,IAEbxC,EAAOm0C,GAAYU,EACd70C,GACD40C,GAAmB1zD,EAAKrE,EAAQoF,EAAOiI,EAE/C,CACAhJ,EAAIunD,YACJvnD,EAAIylB,KAAK3G,EAAO,UAAY,WAC5B9e,EAAIW,SACR,CACJ,CACA,SAAS8yD,GAAWzzD,EAAK/M,EAAO03D,GAC5B,MAAM,IAAEn3D,EAAI,OAAEC,GAAYR,EAAMX,MAAM+H,WAChC,SAAE2O,EAAS,MAAEjI,EAAM,IAAEkM,GAAS09C,GAAU,CAAC,EAC9B,MAAb3hD,IACAhJ,EAAIE,YACJF,EAAItC,KAAKqD,EAAOvN,EAAKyZ,EAAMlM,EAAOtN,EAASD,GAC3CwM,EAAI2qB,OAEZ,CACA,SAAS+oC,GAAmB1zD,EAAKrE,EAAQ7I,EAAOkW,GAC5C,MAAM4qD,EAAoBj4D,EAAOguD,YAAY72D,EAAOkW,GAChD4qD,GACA5zD,EAAI+0C,OAAO6e,EAAkBlhE,EAAGkhE,EAAkBjhE,EAE1D,CAEA,IAAIwT,GAAQ,CACRpQ,GAAI,SACJ89D,oBAAqBvhE,EAAO0O,EAAOnO,GAC/B,MAAM6jB,GAASpkB,EAAMynB,KAAK+M,UAAY,IAAIvzB,OACpCs9D,EAAU,GAChB,IAAI3uC,EAAM5uB,EAAG4mC,EAAM9zB,EACnB,IAAI9S,EAAI,EAAGA,EAAIojB,IAASpjB,EACpB4uB,EAAO5vB,EAAMy0B,eAAezzB,GAC5B4mC,EAAOhY,EAAK0D,QACZxf,EAAS,KACL8zB,GAAQA,EAAKrnC,SAAWqnC,aAAgBkvB,KACxChjD,EAAS,CACLi7C,QAAS/uD,EAAMkgC,iBAAiBl/B,GAChC6S,MAAO7S,EACPmyB,KAAMurC,GAAY92B,EAAM5mC,EAAGojB,GAC3BpkB,QACAyB,KAAMmuB,EAAKY,WAAWjwB,QAAQwzB,UAC9BpzB,MAAOivB,EAAKQ,OACZwX,SAGRhY,EAAK4xC,QAAU1tD,EACfyqD,EAAQ38D,KAAKkS,GAEjB,IAAI9S,EAAI,EAAGA,EAAIojB,IAASpjB,EACpB8S,EAASyqD,EAAQv9D,GACZ8S,IAA0B,IAAhBA,EAAOqf,OAGtBrf,EAAOqf,KAAOmrC,GAAeC,EAASv9D,EAAGT,EAAQi+D,WAEzD,EACAptD,WAAYpR,EAAO0O,EAAOnO,GACtB,MAAM+M,EAA4B,eAArB/M,EAAQkN,SACf0hB,EAAWnvB,EAAMuqC,+BACjB/R,EAAOx4B,EAAM+H,UACnB,IAAI,IAAI/G,EAAImuB,EAASluB,OAAS,EAAGD,GAAK,IAAKA,EAAE,CACzC,MAAM8S,EAASqb,EAASnuB,GAAGwgE,QACtB1tD,IAGLA,EAAO8zB,KAAKe,oBAAoBnQ,EAAM1kB,EAAOrS,MACzC6L,GAAQwG,EAAOqf,MACfusC,GAAU1/D,EAAM0N,IAAKoG,EAAQ0kB,GAErC,CACJ,EACAtnB,mBAAoBlR,EAAO0O,EAAOnO,GAC9B,GAAyB,uBAArBA,EAAQkN,SACR,OAEJ,MAAM0hB,EAAWnvB,EAAMuqC,+BACvB,IAAI,IAAIvpC,EAAImuB,EAASluB,OAAS,EAAGD,GAAK,IAAKA,EAAE,CACzC,MAAM8S,EAASqb,EAASnuB,GAAGwgE,QACvBnD,GAAiBvqD,IACjB4rD,GAAU1/D,EAAM0N,IAAKoG,EAAQ9T,EAAM+H,UAE3C,CACJ,EACA05D,kBAAmBzhE,EAAO6P,EAAMtP,GAC5B,MAAMuT,EAASjE,EAAK+f,KAAK4xC,QACpBnD,GAAiBvqD,IAAgC,sBAArBvT,EAAQkN,UAGzCiyD,GAAU1/D,EAAM0N,IAAKoG,EAAQ9T,EAAM+H,UACvC,EACAyG,SAAU,CACNgwD,WAAW,EACX/wD,SAAU,sBAIlB,MAAMi0D,GAAa,CAACC,EAAWle,KAC3B,IAAI,UAAEme,EAAWne,EAAS,SAAEoe,EAAUpe,GAAcke,EAKpD,OAJIA,EAAUG,gBACVF,EAAY3+D,KAAKL,IAAIg/D,EAAWne,GAChCoe,EAAWF,EAAUI,iBAAmB9+D,KAAKL,IAAIi/D,EAAUpe,IAExD,CACHoe,WACAD,YACAI,WAAY/+D,KAAKN,IAAI8gD,EAAUme,GAClC,EAGL,MAAMK,WAAettB,GACpBhgC,YAAY6Y,GACLgS,QACA/rB,KAAKyuD,QAAS,EACdzuD,KAAK0uD,eAAiB,GAC7B1uD,KAAK2uD,aAAe,KACb3uD,KAAK4uD,cAAe,EACpB5uD,KAAKzT,MAAQwtB,EAAOxtB,MACpByT,KAAKlT,QAAUitB,EAAOjtB,QACtBkT,KAAK/F,IAAM8f,EAAO9f,IAClB+F,KAAK6uD,iBAAcriE,EACnBwT,KAAK8uD,iBAActiE,EACnBwT,KAAK+uD,gBAAaviE,EAClBwT,KAAKouB,eAAY5hC,EACjBwT,KAAKmuB,cAAW3hC,EAChBwT,KAAKvS,SAAMjB,EACXwT,KAAKtS,YAASlB,EACdwT,KAAKrS,UAAOnB,EACZwT,KAAKpS,WAAQpB,EACbwT,KAAK7M,YAAS3G,EACdwT,KAAK9M,WAAQ1G,EACbwT,KAAKmjC,cAAW32C,EAChBwT,KAAK62B,cAAWrqC,EAChBwT,KAAKuvB,YAAS/iC,EACdwT,KAAKy6B,cAAWjuC,CACpB,CACAoI,OAAOu5B,EAAUC,EAAW2W,GACxB/kC,KAAKmuB,SAAWA,EAChBnuB,KAAKouB,UAAYA,EACjBpuB,KAAKmjC,SAAW4B,EAChB/kC,KAAKolC,gBACLplC,KAAKgvD,cACLhvD,KAAKqnC,KACT,CACAjC,gBACQplC,KAAK1Q,gBACL0Q,KAAK9M,MAAQ8M,KAAKmuB,SAClBnuB,KAAKrS,KAAOqS,KAAKmjC,SAASx1C,KAC1BqS,KAAKpS,MAAQoS,KAAK9M,QAElB8M,KAAK7M,OAAS6M,KAAKouB,UACnBpuB,KAAKvS,IAAMuS,KAAKmjC,SAAS11C,IACzBuS,KAAKtS,OAASsS,KAAK7M,OAE3B,CACA67D,cACI,MAAMd,EAAYluD,KAAKlT,QAAQ+1B,QAAU,CAAC,EAC1C,IAAIgsC,GAAc,OAASX,EAAU5iC,eAAgB,CACjDtrB,KAAKzT,OACNyT,OAAS,GACRkuD,EAAUniD,SACV8iD,EAAcA,EAAY9iD,QAAQmF,GAAOg9C,EAAUniD,OAAOmF,EAAMlR,KAAKzT,MAAMynB,SAE3Ek6C,EAAUvrD,OACVksD,EAAcA,EAAYlsD,MAAK,CAACG,EAAGC,IAAImrD,EAAUvrD,KAAKG,EAAGC,EAAG/C,KAAKzT,MAAMynB,SAEvEhU,KAAKlT,QAAQyuB,SACbszC,EAAYtzC,UAEhBvb,KAAK6uD,YAAcA,CACvB,CACAxnB,MACI,MAAM,QAAEv6C,EAAQ,IAAEmN,GAAS+F,KAC3B,IAAKlT,EAAQ4iC,QAET,YADA1vB,KAAK9M,MAAQ8M,KAAK7M,OAAS,GAG/B,MAAM+6D,EAAYphE,EAAQ+1B,OACpBosC,GAAY,QAAOf,EAAUrrB,MAC7BmN,EAAWif,EAAU7zC,KACrB4tB,EAAchpC,KAAKkvD,uBACnB,SAAEd,EAAS,WAAEG,GAAgBN,GAAWC,EAAWle,GACzD,IAAI98C,EAAOC,EACX8G,EAAI4oC,KAAOosB,EAAUzkB,OACjBxqC,KAAK1Q,gBACL4D,EAAQ8M,KAAKmuB,SACbh7B,EAAS6M,KAAKmvD,SAASnmB,EAAagH,EAAUoe,EAAUG,GAAc,KAEtEp7D,EAAS6M,KAAKouB,UACdl7B,EAAQ8M,KAAKovD,SAASpmB,EAAaimB,EAAWb,EAAUG,GAAc,IAE1EvuD,KAAK9M,MAAQ1D,KAAKL,IAAI+D,EAAOpG,EAAQqhC,UAAYnuB,KAAKmuB,UACtDnuB,KAAK7M,OAAS3D,KAAKL,IAAIgE,EAAQrG,EAAQshC,WAAapuB,KAAKouB,UAC7D,CACH+gC,SAASnmB,EAAagH,EAAUoe,EAAUG,GACnC,MAAM,IAAEt0D,EAAI,SAAEk0B,EAAWrhC,SAAW+1B,QAAQ,QAAEgY,KAAmB76B,KAC3DqvD,EAAWrvD,KAAK0uD,eAAiB,GACjCK,EAAa/uD,KAAK+uD,WAAa,CACjC,GAEEjsB,EAAayrB,EAAa1zB,EAChC,IAAIy0B,EAActmB,EAClB/uC,EAAIozC,UAAY,OAChBpzC,EAAIuzC,aAAe,SACnB,IAAI+hB,GAAO,EACP9hE,GAAOq1C,EAkBX,OAjBA9iC,KAAK6uD,YAAYvvD,SAAQ,CAACusB,EAAYt+B,KAClC,MAAMiiE,EAAYpB,EAAWpe,EAAW,EAAI/1C,EAAIw1D,YAAY5jC,EAAWJ,MAAMv4B,OACnE,IAAN3F,GAAWwhE,EAAWA,EAAWvhE,OAAS,GAAKgiE,EAAY,EAAI30B,EAAU1M,KACzEmhC,GAAexsB,EACfisB,EAAWA,EAAWvhE,QAAUD,EAAI,EAAI,EAAI,IAAM,EAClDE,GAAOq1C,EACPysB,KAEJF,EAAS9hE,GAAK,CACVI,KAAM,EACNF,MACA8hE,MACAr8D,MAAOs8D,EACPr8D,OAAQo7D,GAEZQ,EAAWA,EAAWvhE,OAAS,IAAMgiE,EAAY30B,CAAO,IAErDy0B,CACX,CACAF,SAASpmB,EAAaimB,EAAWb,EAAUsB,GACvC,MAAM,IAAEz1D,EAAI,UAAEm0B,EAAYthC,SAAW+1B,QAAQ,QAAEgY,KAAmB76B,KAC5DqvD,EAAWrvD,KAAK0uD,eAAiB,GACjCI,EAAc9uD,KAAK8uD,YAAc,GACjCa,EAAcvhC,EAAY4a,EAChC,IAAI4mB,EAAa/0B,EACbg1B,EAAkB,EAClBC,EAAmB,EACnBniE,EAAO,EACPoiE,EAAM,EA4BV,OA3BA/vD,KAAK6uD,YAAYvvD,SAAQ,CAACusB,EAAYt+B,KAClC,MAAM,UAAEiiE,EAAU,WAAEjB,GAqRhC,SAA2BH,EAAUa,EAAWh1D,EAAK4xB,EAAY6jC,GAC7D,MAAMF,EAOV,SAA4B3jC,EAAYuiC,EAAUa,EAAWh1D,GACzD,IAAI+1D,EAAiBnkC,EAAWJ,KAIhC,OAHIukC,GAA4C,iBAAnBA,IACzBA,EAAiBA,EAAe74C,QAAO,CAACrU,EAAGC,IAAID,EAAEtV,OAASuV,EAAEvV,OAASsV,EAAIC,KAEtEqrD,EAAWa,EAAU7zC,KAAO,EAAInhB,EAAIw1D,YAAYO,GAAgB98D,KAC3E,CAbsB+8D,CAAmBpkC,EAAYuiC,EAAUa,EAAWh1D,GAChEs0D,EAaV,SAA6BmB,EAAa7jC,EAAYqkC,GAClD,IAAI3B,EAAamB,EAIjB,MAH+B,iBAApB7jC,EAAWJ,OAClB8iC,EAAa4B,GAA0BtkC,EAAYqkC,IAEhD3B,CACX,CAnBuB6B,CAAoBV,EAAa7jC,EAAYojC,EAAUnsB,YAC1E,MAAO,CACH0sB,YACAjB,aAER,CA5RgD8B,CAAkBjC,EAAUa,EAAWh1D,EAAK4xB,EAAY6jC,GACxFniE,EAAI,GAAKuiE,EAAmBvB,EAAa,EAAI1zB,EAAU80B,IACvDC,GAAcC,EAAkBh1B,EAChCi0B,EAAY3gE,KAAK,CACb+E,MAAO28D,EACP18D,OAAQ28D,IAEZniE,GAAQkiE,EAAkBh1B,EAC1Bk1B,IACAF,EAAkBC,EAAmB,GAEzCT,EAAS9hE,GAAK,CACVI,OACAF,IAAKqiE,EACLC,MACA78D,MAAOs8D,EACPr8D,OAAQo7D,GAEZsB,EAAkBrgE,KAAKN,IAAI2gE,EAAiBL,GAC5CM,GAAoBvB,EAAa1zB,CAAO,IAE5C+0B,GAAcC,EACdf,EAAY3gE,KAAK,CACb+E,MAAO28D,EACP18D,OAAQ28D,IAELF,CACX,CACAU,iBACI,IAAKtwD,KAAKlT,QAAQ4iC,QACd,OAEJ,MAAMsZ,EAAchpC,KAAKkvD,uBACjBR,eAAgBW,EAAWviE,SAAS,MAAEk2C,EAAQngB,QAAQ,QAAEgY,GAAW,IAAE01B,IAAYvwD,KACnFwwD,GAAY,QAAcD,EAAKvwD,KAAKrS,KAAMqS,KAAK9M,OACrD,GAAI8M,KAAK1Q,eAAgB,CACrB,IAAIigE,EAAM,EACN5hE,GAAO,QAAeq1C,EAAOhjC,KAAKrS,KAAOktC,EAAS76B,KAAKpS,MAAQoS,KAAK+uD,WAAWQ,IACnF,IAAK,MAAMkB,KAAUpB,EACbE,IAAQkB,EAAOlB,MACfA,EAAMkB,EAAOlB,IACb5hE,GAAO,QAAeq1C,EAAOhjC,KAAKrS,KAAOktC,EAAS76B,KAAKpS,MAAQoS,KAAK+uD,WAAWQ,KAEnFkB,EAAOhjE,KAAOuS,KAAKvS,IAAMu7C,EAAcnO,EACvC41B,EAAO9iE,KAAO6iE,EAAUE,WAAWF,EAAU7jE,EAAEgB,GAAO8iE,EAAOv9D,OAC7DvF,GAAQ8iE,EAAOv9D,MAAQ2nC,CAE/B,KAAO,CACH,IAAIk1B,EAAM,EACNtiE,GAAM,QAAeu1C,EAAOhjC,KAAKvS,IAAMu7C,EAAcnO,EAAS76B,KAAKtS,OAASsS,KAAK8uD,YAAYiB,GAAK58D,QACtG,IAAK,MAAMs9D,KAAUpB,EACboB,EAAOV,MAAQA,IACfA,EAAMU,EAAOV,IACbtiE,GAAM,QAAeu1C,EAAOhjC,KAAKvS,IAAMu7C,EAAcnO,EAAS76B,KAAKtS,OAASsS,KAAK8uD,YAAYiB,GAAK58D,SAEtGs9D,EAAOhjE,IAAMA,EACbgjE,EAAO9iE,MAAQqS,KAAKrS,KAAOktC,EAC3B41B,EAAO9iE,KAAO6iE,EAAUE,WAAWF,EAAU7jE,EAAE8jE,EAAO9iE,MAAO8iE,EAAOv9D,OACpEzF,GAAOgjE,EAAOt9D,OAAS0nC,CAE/B,CACJ,CACAvrC,eACI,MAAiC,QAA1B0Q,KAAKlT,QAAQ+pC,UAAgD,WAA1B72B,KAAKlT,QAAQ+pC,QAC3D,CACAh9B,OACI,GAAImG,KAAKlT,QAAQ4iC,QAAS,CACtB,MAAMz1B,EAAM+F,KAAK/F,KACjB,OAASA,EAAK+F,MACdA,KAAK2wD,SACL,OAAW12D,EACf,CACJ,CACH02D,QACO,MAAQ7jE,QAASjB,EAAK,YAAEijE,EAAY,WAAEC,EAAW,IAAE90D,GAAS+F,MACtD,MAAEgjC,EAAQngB,OAAQqrC,GAAeriE,EACjC+kE,EAAe,EAAAx2C,EAASvC,MACxB24C,GAAY,QAAc3kE,EAAK0kE,IAAKvwD,KAAKrS,KAAMqS,KAAK9M,OACpD+7D,GAAY,QAAOf,EAAUrrB,OAC7B,QAAEhI,GAAaqzB,EACfle,EAAWif,EAAU7zC,KACrBy1C,EAAe7gB,EAAW,EAChC,IAAI8gB,EACJ9wD,KAAKuvC,YACLt1C,EAAIozC,UAAYmjB,EAAUnjB,UAAU,QACpCpzC,EAAIuzC,aAAe,SACnBvzC,EAAIO,UAAY,GAChBP,EAAI4oC,KAAOosB,EAAUzkB,OACrB,MAAM,SAAE4jB,EAAS,UAAED,EAAU,WAAEI,GAAgBN,GAAWC,EAAWle,GAqD/D1gD,EAAe0Q,KAAK1Q,eACpB05C,EAAchpC,KAAKkvD,sBAErB4B,EADAxhE,EACS,CACL3C,GAAG,QAAeq2C,EAAOhjC,KAAKrS,KAAOktC,EAAS76B,KAAKpS,MAAQmhE,EAAW,IACtEniE,EAAGoT,KAAKvS,IAAMotC,EAAUmO,EACxB7U,KAAM,GAGD,CACLxnC,EAAGqT,KAAKrS,KAAOktC,EACfjuC,GAAG,QAAeo2C,EAAOhjC,KAAKvS,IAAMu7C,EAAcnO,EAAS76B,KAAKtS,OAASohE,EAAY,GAAG37D,QACxFghC,KAAM,IAGd,QAAsBn0B,KAAK/F,IAAKpO,EAAKklE,eACrC,MAAMjuB,EAAayrB,EAAa1zB,EAChC76B,KAAK6uD,YAAYvvD,SAAQ,CAACusB,EAAYt+B,KAClC0M,EAAIQ,YAAcoxB,EAAWH,UAC7BzxB,EAAIG,UAAYyxB,EAAWH,UAC3B,MAAMslC,EAAY/2D,EAAIw1D,YAAY5jC,EAAWJ,MAAMv4B,MAC7Cm6C,EAAYmjB,EAAUnjB,UAAUxhB,EAAWwhB,YAAcxhB,EAAWwhB,UAAY6gB,EAAU7gB,YAC1Fn6C,EAAQk7D,EAAWyC,EAAeG,EACxC,IAAIrkE,EAAImkE,EAAOnkE,EACXC,EAAIkkE,EAAOlkE,EAiBf,GAhBA4jE,EAAUS,SAASjxD,KAAK9M,OACpB5D,EACI/B,EAAI,GAAKZ,EAAIuG,EAAQ2nC,EAAU76B,KAAKpS,QACpChB,EAAIkkE,EAAOlkE,GAAKk2C,EAChBguB,EAAO38B,OACPxnC,EAAImkE,EAAOnkE,GAAI,QAAeq2C,EAAOhjC,KAAKrS,KAAOktC,EAAS76B,KAAKpS,MAAQmhE,EAAW+B,EAAO38B,QAEtF5mC,EAAI,GAAKX,EAAIk2C,EAAa9iC,KAAKtS,SACtCf,EAAImkE,EAAOnkE,EAAIA,EAAImiE,EAAYgC,EAAO38B,MAAMjhC,MAAQ2nC,EACpDi2B,EAAO38B,OACPvnC,EAAIkkE,EAAOlkE,GAAI,QAAeo2C,EAAOhjC,KAAKvS,IAAMu7C,EAAcnO,EAAS76B,KAAKtS,OAASohE,EAAYgC,EAAO38B,MAAMhhC,SAvFhG,SAASxG,EAAGC,EAAGi/B,GACjC,GAAIj7B,MAAMw9D,IAAaA,GAAY,GAAKx9D,MAAMu9D,IAAcA,EAAY,EACpE,OAEJl0D,EAAIC,OACJ,MAAMM,GAAY,IAAAvK,GAAe47B,EAAWrxB,UAAW,GAQvD,GAPAP,EAAIG,WAAY,IAAAnK,GAAe47B,EAAWzxB,UAAWw2D,GACrD32D,EAAIynD,SAAU,IAAAzxD,GAAe47B,EAAW61B,QAAS,QACjDznD,EAAI60C,gBAAiB,IAAA7+C,GAAe47B,EAAWijB,eAAgB,GAC/D70C,EAAI2nD,UAAW,IAAA3xD,GAAe47B,EAAW+1B,SAAU,SACnD3nD,EAAIO,UAAYA,EAChBP,EAAIQ,aAAc,IAAAxK,GAAe47B,EAAWpxB,YAAam2D,GACzD32D,EAAI40C,aAAY,IAAA5+C,GAAe47B,EAAWqlC,SAAU,KAChDhD,EAAUG,cAAe,CACzB,MAAM8C,EAAc,CAChBrmC,OAAQqjC,EAAY3+D,KAAK4hE,MAAQ,EACjC7lC,WAAYM,EAAWN,WACvBhkB,SAAUskB,EAAWtkB,SACrBhN,YAAaC,GAEXs0B,EAAU0hC,EAAUa,MAAM1kE,EAAGyhE,EAAW,GACxCr/B,EAAUniC,EAAIikE,GACpB,QAAgB52D,EAAKk3D,EAAariC,EAASC,EAASm/B,EAAUI,iBAAmBF,EACrF,KAAO,CACH,MAAMkD,EAAU1kE,EAAI4C,KAAKN,KAAK8gD,EAAWme,GAAa,EAAG,GACnDoD,EAAWf,EAAUE,WAAW/jE,EAAGyhE,GACnClO,GAAe,QAAcr0B,EAAWq0B,cAC9CjmD,EAAIE,YACA9M,OAAOwV,OAAOq9C,GAAcjM,MAAMhkD,GAAU,IAANA,KACtC,QAAmBgK,EAAK,CACpBtN,EAAG4kE,EACH3kE,EAAG0kE,EACH13B,EAAGw0B,EACHt0B,EAAGq0B,EACHrjC,OAAQo1B,IAGZjmD,EAAItC,KAAK45D,EAAUD,EAASlD,EAAUD,GAE1Cl0D,EAAIylB,OACc,IAAdllB,GACAP,EAAIg1C,QAEZ,CACAh1C,EAAIW,SACR,CA6CI42D,CADchB,EAAU7jE,EAAEA,GACLC,EAAGi/B,GACxBl/B,GAAI,QAAO0gD,EAAW1gD,EAAIyhE,EAAWyC,EAAcvhE,EAAe3C,EAAIuG,EAAQ8M,KAAKpS,MAAO/B,EAAK0kE,KA7ClF,SAAS5jE,EAAGC,EAAGi/B,IAC5B,OAAW5xB,EAAK4xB,EAAWJ,KAAM9+B,EAAGC,EAAI2hE,EAAa,EAAGU,EAAW,CAC/DwC,cAAe5lC,EAAWpI,OAC1B4pB,UAAWmjB,EAAUnjB,UAAUxhB,EAAWwhB,YAElD,CAyCIqkB,CAASlB,EAAU7jE,EAAEA,GAAIC,EAAGi/B,GACxBv8B,EACAwhE,EAAOnkE,GAAKuG,EAAQ2nC,OACjB,GAA+B,iBAApBhP,EAAWJ,KAAmB,CAC5C,MAAMykC,EAAiBjB,EAAUnsB,WACjCguB,EAAOlkE,GAAKujE,GAA0BtkC,EAAYqkC,EACtD,MACIY,EAAOlkE,GAAKk2C,CAChB,KAEJ,QAAqB9iC,KAAK/F,IAAKpO,EAAKklE,cACxC,CACHxhB,YACO,MAAM1jD,EAAOmU,KAAKlT,QACZg8C,EAAYj9C,EAAK+8C,MACjB+oB,GAAY,QAAO7oB,EAAUjG,MAC7B+uB,GAAe,OAAU9oB,EAAUjO,SACzC,IAAKiO,EAAUpZ,QACX,OAEJ,MAAM8gC,GAAY,QAAc3kE,EAAK0kE,IAAKvwD,KAAKrS,KAAMqS,KAAK9M,OACpD+G,EAAM+F,KAAK/F,IACX48B,EAAWiS,EAAUjS,SACrBg6B,EAAec,EAAUv2C,KAAO,EAChCy2C,EAA6BD,EAAankE,IAAMojE,EACtD,IAAIjkE,EACAe,EAAOqS,KAAKrS,KACZwgC,EAAWnuB,KAAK9M,MACpB,GAAI8M,KAAK1Q,eACL6+B,EAAW3+B,KAAKN,OAAO8Q,KAAK+uD,YAC5BniE,EAAIoT,KAAKvS,IAAMokE,EACflkE,GAAO,QAAe9B,EAAKm3C,MAAOr1C,EAAMqS,KAAKpS,MAAQugC,OAClD,CACH,MAAMC,EAAYpuB,KAAK8uD,YAAY33C,QAAO,CAACC,EAAKgE,IAAO5rB,KAAKN,IAAIkoB,EAAKgE,EAAKjoB,SAAS,GACnFvG,EAAIilE,GAA6B,QAAehmE,EAAKm3C,MAAOhjC,KAAKvS,IAAKuS,KAAKtS,OAAS0gC,EAAYviC,EAAKg3B,OAAOgY,QAAU76B,KAAKkvD,sBAC/H,CACA,MAAMviE,GAAI,QAAekqC,EAAUlpC,EAAMA,EAAOwgC,GAChDl0B,EAAIozC,UAAYmjB,EAAUnjB,WAAU,QAAmBxW,IACvD58B,EAAIuzC,aAAe,SACnBvzC,EAAIQ,YAAcquC,EAAUjxB,MAC5B5d,EAAIG,UAAY0uC,EAAUjxB,MAC1B5d,EAAI4oC,KAAO8uB,EAAUnnB,QACrB,OAAWvwC,EAAK6uC,EAAUrd,KAAM9+B,EAAGC,EAAG+kE,EAC1C,CACHzC,sBACO,MAAMpmB,EAAY9oC,KAAKlT,QAAQ87C,MACzB+oB,GAAY,QAAO7oB,EAAUjG,MAC7B+uB,GAAe,OAAU9oB,EAAUjO,SACzC,OAAOiO,EAAUpZ,QAAUiiC,EAAU7uB,WAAa8uB,EAAaz+D,OAAS,CAC5E,CACH2+D,iBAAiBnlE,EAAGC,GACb,IAAIW,EAAGwkE,EAAQC,EACf,IAAI,QAAWrlE,EAAGqT,KAAKrS,KAAMqS,KAAKpS,SAAU,QAAWhB,EAAGoT,KAAKvS,IAAKuS,KAAKtS,QAErE,IADAskE,EAAKhyD,KAAK0uD,eACNnhE,EAAI,EAAGA,EAAIykE,EAAGxkE,SAAUD,EAExB,GADAwkE,EAASC,EAAGzkE,IACR,QAAWZ,EAAGolE,EAAOpkE,KAAMokE,EAAOpkE,KAAOokE,EAAO7+D,SAAU,QAAWtG,EAAGmlE,EAAOtkE,IAAKskE,EAAOtkE,IAAMskE,EAAO5+D,QACxG,OAAO6M,KAAK6uD,YAAYthE,GAIpC,OAAO,IACX,CACH0kE,YAAYh5D,GACL,MAAMpN,EAAOmU,KAAKlT,QAClB,IAyDR,SAAoBoH,EAAMrI,GACtB,QAAc,cAATqI,GAAiC,aAATA,IAAyBrI,EAAKqzD,UAAWrzD,EAAKqmE,aAGvErmE,EAAK+/B,SAAqB,UAAT13B,GAA6B,YAATA,EAI7C,CAjEai+D,CAAWl5D,EAAE/E,KAAMrI,GACpB,OAEJ,MAAMumE,EAAcpyD,KAAK8xD,iBAAiB74D,EAAEtM,EAAGsM,EAAErM,GACjD,GAAe,cAAXqM,EAAE/E,MAAmC,aAAX+E,EAAE/E,KAAqB,CACjD,MAAML,EAAWmM,KAAK2uD,aAChB0D,GA3XKtvD,EA2X2BqvD,EA3XjB,QAAbtvD,EA2XoBjP,IA3XO,OAANkP,GAAcD,EAAEkZ,eAAiBjZ,EAAEiZ,cAAgBlZ,EAAE1C,QAAU2C,EAAE3C,OA4X1FvM,IAAaw+D,IACb,OAASxmE,EAAKqmE,QAAS,CACnBj5D,EACApF,EACAmM,MACDA,MAEPA,KAAK2uD,aAAeyD,EAChBA,IAAgBC,IAChB,OAASxmE,EAAKqzD,QAAS,CACnBjmD,EACAm5D,EACApyD,MACDA,KAEX,MAAWoyD,IACP,OAASvmE,EAAK+/B,QAAS,CACnB3yB,EACAm5D,EACApyD,MACDA,MAhZI,IAAC8C,EAAGC,CAkZnB,EAwBJ,SAASotD,GAA0BtkC,EAAYqkC,GAE3C,OAAOA,GADarkC,EAAWJ,KAAOI,EAAWJ,KAAKj+B,OAAS,GAAM,EAEzE,CAUA,IAAI8kE,GAAgB,CAChBtiE,GAAI,SACPuiE,SAAU/D,GACPxzD,MAAOzO,EAAO0O,EAAOnO,GACjB,MAAMu+B,EAAS9+B,EAAM8+B,OAAS,IAAImjC,GAAO,CACrCv0D,IAAK1N,EAAM0N,IACXnN,UACAP,UAEJyuC,EAAQ9gB,UAAU3tB,EAAO8+B,EAAQv+B,GACjCkuC,EAAQC,OAAO1uC,EAAO8+B,EAC1B,EACAxtB,KAAMtR,GACFyuC,EAAQI,UAAU7uC,EAAOA,EAAM8+B,eACxB9+B,EAAM8+B,MACjB,EACAruB,aAAczQ,EAAO0O,EAAOnO,GACxB,MAAMu+B,EAAS9+B,EAAM8+B,OACrB2P,EAAQ9gB,UAAU3tB,EAAO8+B,EAAQv+B,GACjCu+B,EAAOv+B,QAAUA,CACrB,EACAy6C,YAAah7C,GACT,MAAM8+B,EAAS9+B,EAAM8+B,OACrBA,EAAO2jC,cACP3jC,EAAOilC,gBACX,EACAkC,WAAYjmE,EAAO6P,GACVA,EAAKkiD,QACN/xD,EAAM8+B,OAAO4mC,YAAY71D,EAAKlQ,MAEtC,EACA6O,SAAU,CACN20B,SAAS,EACTmH,SAAU,MACVmM,MAAO,SACPvI,UAAU,EACVlf,SAAS,EACTgU,OAAQ,IACR3D,QAAS3yB,EAAG4yB,EAAYR,GACpB,MAAMjrB,EAAQyrB,EAAW7P,aACnBy2C,EAAKpnC,EAAO9+B,MACdkmE,EAAGhmC,iBAAiBrsB,IACpBqyD,EAAGnV,KAAKl9C,GACRyrB,EAAWpI,QAAS,IAEpBgvC,EAAGlV,KAAKn9C,GACRyrB,EAAWpI,QAAS,EAE5B,EACAy7B,QAAS,KACTgT,QAAS,KACTrvC,OAAQ,CACJhL,MAAQ5d,GAAMA,EAAI1N,MAAMO,QAAQ+qB,MAChCu2C,SAAU,GACVvzB,QAAS,GACTvP,eAAgB/+B,GACZ,MAAMw0B,EAAWx0B,EAAMynB,KAAK+M,UACpB8B,QAAQ,cAAEwrC,EAAc,WAAE9iC,EAAW,UAAE8hB,EAAU,MAAEx1B,EAAM,gBAAE66C,EAAgB,aAAExS,IAAqB3zD,EAAM8+B,OAAOv+B,QACvH,OAAOP,EAAMovB,yBAAyB6P,KAAKrP,IACvC,MAAM9O,EAAQ8O,EAAKY,WAAWkI,SAASopC,EAAgB,OAAI7hE,GACrD+N,GAAc,OAAU8S,EAAM9S,aACpC,MAAO,CACHkxB,KAAM1K,EAAS5E,EAAK/b,OAAOmkB,MAC3BnqB,UAAWiT,EAAMhT,gBACjBqxB,UAAW7T,EACX4L,QAAStH,EAAKm/B,QACdoG,QAASr0C,EAAMs0C,eACfuP,SAAU7jD,EAAMs/B,WAChBmC,eAAgBzhC,EAAMw/B,iBACtB+U,SAAUv0C,EAAMw0C,gBAChBrnD,WAAYD,EAAYrH,MAAQqH,EAAYpH,QAAU,EACtDsH,YAAa4S,EAAM3S,YACnB6wB,WAAYA,GAAcle,EAAMke,WAChChkB,SAAU8F,EAAM9F,SAChB8lC,UAAWA,GAAahgC,EAAMggC,UAC9B6S,aAAcwS,IAAoBxS,GAAgB7yC,EAAM6yC,cACxDlkC,aAAcG,EAAK/b,MACtB,GACFJ,KACP,GAEJ4oC,MAAO,CACH/wB,MAAQ5d,GAAMA,EAAI1N,MAAMO,QAAQ+qB,MAChC6X,SAAS,EACTmH,SAAU,SACVpL,KAAM,KAGd6lB,YAAa,CACTtmB,YAAc9tB,IAAQA,EAAKguB,WAAW,MACtCrI,OAAQ,CACJmI,YAAc9tB,IAAQ,CACd,iBACA,SACA,QACFs/B,SAASt/B,MAK3B,MAAMy1D,WAAczxB,GACnBhgC,YAAY6Y,GACLgS,QACA/rB,KAAKzT,MAAQwtB,EAAOxtB,MACpByT,KAAKlT,QAAUitB,EAAOjtB,QACtBkT,KAAK/F,IAAM8f,EAAO9f,IAClB+F,KAAK4yD,cAAWpmE,EAChBwT,KAAKvS,SAAMjB,EACXwT,KAAKtS,YAASlB,EACdwT,KAAKrS,UAAOnB,EACZwT,KAAKpS,WAAQpB,EACbwT,KAAK9M,WAAQ1G,EACbwT,KAAK7M,YAAS3G,EACdwT,KAAK62B,cAAWrqC,EAChBwT,KAAKuvB,YAAS/iC,EACdwT,KAAKy6B,cAAWjuC,CACpB,CACAoI,OAAOu5B,EAAUC,GACb,MAAMviC,EAAOmU,KAAKlT,QAGlB,GAFAkT,KAAKrS,KAAO,EACZqS,KAAKvS,IAAM,GACN5B,EAAK6jC,QAEN,YADA1vB,KAAK9M,MAAQ8M,KAAK7M,OAAS6M,KAAKpS,MAAQoS,KAAKtS,OAAS,GAG1DsS,KAAK9M,MAAQ8M,KAAKpS,MAAQugC,EAC1BnuB,KAAK7M,OAAS6M,KAAKtS,OAAS0gC,EAC5B,MAAMkf,GAAY,OAAQzhD,EAAK4/B,MAAQ5/B,EAAK4/B,KAAKj+B,OAAS,EAC1DwS,KAAK4yD,UAAW,OAAU/mE,EAAKgvC,SAC/B,MAAMg4B,EAAWvlB,GAAY,QAAOzhD,EAAKg3C,MAAMC,WAAa9iC,KAAK4yD,SAASz/D,OACtE6M,KAAK1Q,eACL0Q,KAAK7M,OAAS0/D,EAEd7yD,KAAK9M,MAAQ2/D,CAErB,CACAvjE,eACI,MAAMqpC,EAAM34B,KAAKlT,QAAQ+pC,SACzB,MAAe,QAAR8B,GAAyB,WAARA,CAC5B,CACAm6B,UAAUriE,GACN,MAAM,IAAEhD,EAAI,KAAEE,EAAK,OAAED,EAAO,MAAEE,EAAM,QAAEd,GAAakT,KAC7CgjC,EAAQl2C,EAAQk2C,MACtB,IACI7U,EAAUqhB,EAAQC,EADlBloC,EAAW,EAkBf,OAhBIvH,KAAK1Q,gBACLkgD,GAAS,QAAexM,EAAOr1C,EAAMC,GACrC6hD,EAAShiD,EAAMgD,EACf09B,EAAWvgC,EAAQD,IAEM,SAArBb,EAAQ+pC,UACR2Y,EAAS7hD,EAAO8C,EAChBg/C,GAAS,QAAezM,EAAOt1C,EAAQD,GACvC8Z,GAAiB,GAAN,EAAAymB,IAEXwhB,EAAS5hD,EAAQ6C,EACjBg/C,GAAS,QAAezM,EAAOv1C,EAAKC,GACpC6Z,EAAgB,GAAL,EAAAymB,GAEfG,EAAWzgC,EAASD,GAEjB,CACH+hD,SACAC,SACAthB,WACA5mB,WAER,CACA1N,OACI,MAAMI,EAAM+F,KAAK/F,IACXpO,EAAOmU,KAAKlT,QAClB,IAAKjB,EAAK6jC,QACN,OAEJ,MAAMqjC,GAAW,QAAOlnE,EAAKg3C,MAEvBpyC,EADasiE,EAASjwB,WACA,EAAI9iC,KAAK4yD,SAASnlE,KACxC,OAAE+hD,EAAO,OAAEC,EAAO,SAAEthB,EAAS,SAAE5mB,GAAcvH,KAAK8yD,UAAUriE,IAClE,OAAWwJ,EAAKpO,EAAK4/B,KAAM,EAAG,EAAGsnC,EAAU,CACvCl7C,MAAOhsB,EAAKgsB,MACZsW,WACA5mB,WACA8lC,WAAW,QAAmBxhD,EAAKm3C,OACnCwK,aAAc,SACde,YAAa,CACTiB,EACAC,IAGZ,EAYJ,IAAIujB,GAAe,CACfhjE,GAAI,QACPuiE,SAAUI,GACP33D,MAAOzO,EAAO0O,EAAOnO,IAbzB,SAAqBP,EAAOu8C,GACxB,MAAMF,EAAQ,IAAI+pB,GAAM,CACpB14D,IAAK1N,EAAM0N,IACXnN,QAASg8C,EACTv8C,UAEJyuC,EAAQ9gB,UAAU3tB,EAAOq8C,EAAOE,GAChC9N,EAAQC,OAAO1uC,EAAOq8C,GACtBr8C,EAAM0mE,WAAarqB,CACvB,CAKQsqB,CAAY3mE,EAAOO,EACvB,EACA+Q,KAAMtR,GACF,MAAM0mE,EAAa1mE,EAAM0mE,WACzBj4B,EAAQI,UAAU7uC,EAAO0mE,UAClB1mE,EAAM0mE,UACjB,EACAj2D,aAAczQ,EAAO0O,EAAOnO,GACxB,MAAM87C,EAAQr8C,EAAM0mE,WACpBj4B,EAAQ9gB,UAAU3tB,EAAOq8C,EAAO97C,GAChC87C,EAAM97C,QAAUA,CACpB,EACAiO,SAAU,CACNioC,MAAO,SACPtT,SAAS,EACTmT,KAAM,CACFtT,OAAQ,QAEZkL,UAAU,EACVI,QAAS,GACThE,SAAU,MACVpL,KAAM,GACN8D,OAAQ,KAEZqhB,cAAe,CACX/4B,MAAO,SAEXy5B,YAAa,CACTtmB,aAAa,EACbC,YAAY,IAIpB,MAAMO,GAAM,IAAIn9B,QAChB,IAAI8kE,GAAkB,CAClBnjE,GAAI,WACJgL,MAAOzO,EAAO0O,EAAOnO,GACjB,MAAM87C,EAAQ,IAAI+pB,GAAM,CACpB14D,IAAK1N,EAAM0N,IACXnN,UACAP,UAEJyuC,EAAQ9gB,UAAU3tB,EAAOq8C,EAAO97C,GAChCkuC,EAAQC,OAAO1uC,EAAOq8C,GACtBpd,GAAI38B,IAAItC,EAAOq8C,EACnB,EACA/qC,KAAMtR,GACFyuC,EAAQI,UAAU7uC,EAAOi/B,GAAIh9B,IAAIjC,IACjCi/B,GAAIvtB,OAAO1R,EACf,EACAyQ,aAAczQ,EAAO0O,EAAOnO,GACxB,MAAM87C,EAAQpd,GAAIh9B,IAAIjC,GACtByuC,EAAQ9gB,UAAU3tB,EAAOq8C,EAAO97C,GAChC87C,EAAM97C,QAAUA,CACpB,EACAiO,SAAU,CACNioC,MAAO,SACPtT,SAAS,EACTmT,KAAM,CACFtT,OAAQ,UAEZkL,UAAU,EACVI,QAAS,EACThE,SAAU,MACVpL,KAAM,GACN8D,OAAQ,MAEZqhB,cAAe,CACX/4B,MAAO,SAEXy5B,YAAa,CACTtmB,aAAa,EACbC,YAAY,IAIpB,MAAMmoC,GAAc,CACnBC,QAAS98C,GACF,IAAKA,EAAM/oB,OACP,OAAO,EAEX,IAAID,EAAG40C,EACHx1C,EAAI,EACJC,EAAI,EACJ+jB,EAAQ,EACZ,IAAIpjB,EAAI,EAAG40C,EAAM5rB,EAAM/oB,OAAQD,EAAI40C,IAAO50C,EAAE,CACxC,MAAMkpC,EAAKlgB,EAAMhpB,GAAGgW,QACpB,GAAIkzB,GAAMA,EAAG2K,WAAY,CACrB,MAAMzI,EAAMlC,EAAG0K,kBACfx0C,GAAKgsC,EAAIhsC,EACTC,GAAK+rC,EAAI/rC,IACP+jB,CACN,CACJ,CACA,MAAO,CACHhkB,EAAGA,EAAIgkB,EACP/jB,EAAGA,EAAI+jB,EAEf,EACH4nB,QAAShiB,EAAO+8C,GACT,IAAK/8C,EAAM/oB,OACP,OAAO,EAEX,IAGID,EAAG40C,EAAKoxB,EAHR5mE,EAAI2mE,EAAc3mE,EAClBC,EAAI0mE,EAAc1mE,EAClBirC,EAAclU,OAAOC,kBAEzB,IAAIr2B,EAAI,EAAG40C,EAAM5rB,EAAM/oB,OAAQD,EAAI40C,IAAO50C,EAAE,CACxC,MAAMkpC,EAAKlgB,EAAMhpB,GAAGgW,QACpB,GAAIkzB,GAAMA,EAAG2K,WAAY,CACrB,MAAMpyC,EAASynC,EAAGqB,iBACZ1d,GAAI,QAAsBk5C,EAAetkE,GAC3CorB,EAAIyd,IACJA,EAAczd,EACdm5C,EAAiB98B,EAEzB,CACJ,CACA,GAAI88B,EAAgB,CAChB,MAAMC,EAAKD,EAAepyB,kBAC1Bx0C,EAAI6mE,EAAG7mE,EACPC,EAAI4mE,EAAG5mE,CACX,CACA,MAAO,CACHD,IACAC,IAER,GAEJ,SAAS6mE,GAAa5yD,EAAM6yD,GAQxB,OAPIA,KACI,OAAQA,GACRz0D,MAAM/D,UAAU/M,KAAK4R,MAAMc,EAAM6yD,GAEjC7yD,EAAK1S,KAAKulE,IAGX7yD,CACX,CACC,SAAS8yD,GAAczxD,GACpB,OAAoB,iBAARA,GAAoBA,aAAe0xD,SAAW1xD,EAAIzV,QAAQ,OAAS,EACpEyV,EAAIG,MAAM,MAEdH,CACX,CACC,SAAS2xD,GAAkBtnE,EAAO2kB,GAC/B,MAAM,QAAE3N,EAAQ,aAAEyY,EAAa,MAAE5b,GAAW8Q,EACtC6L,EAAaxwB,EAAMy0B,eAAehF,GAAce,YAChD,MAAEwH,EAAM,MAAEnW,GAAW2O,EAAWuH,iBAAiBlkB,GACvD,MAAO,CACH7T,QACAg4B,QACAvH,OAAQD,EAAWkG,UAAU7iB,GAC7BilB,IAAK94B,EAAMynB,KAAK+M,SAAS/E,GAAchI,KAAK5T,GAC5C0zD,eAAgB1lD,EAChByR,QAAS9C,EAAW+C,aACpBsF,UAAWhlB,EACX4b,eACAzY,UAER,CACC,SAASwwD,GAAeC,EAASlnE,GAC9B,MAAMmN,EAAM+5D,EAAQznE,MAAM0N,KACpB,KAAEg6D,EAAK,OAAEC,EAAO,MAAEtrB,GAAWorB,GAC7B,SAAE5F,EAAS,UAAED,GAAerhE,EAC5BqnE,GAAW,QAAOrnE,EAAQqnE,UAC1BxC,GAAY,QAAO7kE,EAAQ6kE,WAC3ByC,GAAa,QAAOtnE,EAAQsnE,YAC5BC,EAAiBzrB,EAAMp7C,OACvB8mE,EAAkBJ,EAAO1mE,OACzB+mE,EAAoBN,EAAKzmE,OACzBqtC,GAAU,OAAU/tC,EAAQ+tC,SAClC,IAAI1nC,EAAS0nC,EAAQ1nC,OACjBD,EAAQ,EACRshE,EAAqBP,EAAK98C,QAAO,CAACxG,EAAO8jD,IAAW9jD,EAAQ8jD,EAASC,OAAOlnE,OAASinE,EAASE,MAAMnnE,OAASinE,EAASG,MAAMpnE,QAAQ,GACxIgnE,GAAsBR,EAAQa,WAAWrnE,OAASwmE,EAAQc,UAAUtnE,OAChE6mE,IACAlhE,GAAUkhE,EAAiB1C,EAAU7uB,YAAcuxB,EAAiB,GAAKvnE,EAAQioE,aAAejoE,EAAQkoE,mBAExGR,IAEArhE,GAAUohE,GADaznE,EAAQmoE,cAAgBzlE,KAAKN,IAAIi/D,EAAWgG,EAASrxB,YAAcqxB,EAASrxB,aACnD0xB,EAAqBD,GAAqBJ,EAASrxB,YAAc0xB,EAAqB,GAAK1nE,EAAQooE,aAEnJZ,IACAnhE,GAAUrG,EAAQqoE,gBAAkBb,EAAkBF,EAAWtxB,YAAcwxB,EAAkB,GAAKxnE,EAAQsoE,eAElH,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAASnhC,GAC1BjhC,EAAQ1D,KAAKN,IAAIgE,EAAO+G,EAAIw1D,YAAYt7B,GAAMjhC,MAAQmiE,EAC1D,EAiBA,OAhBAp7D,EAAIC,OACJD,EAAI4oC,KAAO8uB,EAAUnnB,QACrB,OAAKwpB,EAAQprB,MAAO0sB,GACpBr7D,EAAI4oC,KAAOsxB,EAAS3pB,QACpB,OAAKwpB,EAAQa,WAAWxpD,OAAO2oD,EAAQc,WAAYQ,GACnDD,EAAevoE,EAAQmoE,cAAgB7G,EAAW,EAAIthE,EAAQosC,WAAa,GAC3E,OAAK+6B,GAAOQ,KACR,OAAKA,EAASC,OAAQY,IACtB,OAAKb,EAASE,MAAOW,IACrB,OAAKb,EAASG,MAAOU,EAAa,IAEtCD,EAAe,EACfp7D,EAAI4oC,KAAOuxB,EAAW5pB,QACtB,OAAKwpB,EAAQE,OAAQoB,GACrBr7D,EAAIW,UACJ1H,GAAS2nC,EAAQ3nC,MACV,CACHA,QACAC,SAER,CAoBA,SAASoiE,GAAgBhpE,EAAOO,EAASsuB,EAAMo6C,GAC3C,MAAM,EAAE7oE,EAAE,MAAEuG,GAAWkoB,GACfloB,MAAOgE,EAAa5C,WAAW,KAAE3G,EAAK,MAAEC,IAAcrB,EAC9D,IAAIkpE,EAAS,SAWb,MAVe,WAAXD,EACAC,EAAS9oE,IAAMgB,EAAOC,GAAS,EAAI,OAAS,QACrCjB,GAAKuG,EAAQ,EACpBuiE,EAAS,OACF9oE,GAAKuK,EAAahE,EAAQ,IACjCuiE,EAAS,SAnBjB,SAA6BA,EAAQlpE,EAAOO,EAASsuB,GACjD,MAAM,EAAEzuB,EAAE,MAAEuG,GAAWkoB,EACjBs6C,EAAQ5oE,EAAQ6oE,UAAY7oE,EAAQ8oE,aAC1C,MAAe,SAAXH,GAAqB9oE,EAAIuG,EAAQwiE,EAAQnpE,EAAM2G,OAGpC,UAAXuiE,GAAsB9oE,EAAIuG,EAAQwiE,EAAQ,QAA9C,CAGJ,CAYQG,CAAoBJ,EAAQlpE,EAAOO,EAASsuB,KAC5Cq6C,EAAS,UAENA,CACX,CACC,SAASK,GAAmBvpE,EAAOO,EAASsuB,GACzC,MAAMo6C,EAASp6C,EAAKo6C,QAAU1oE,EAAQ0oE,QApC1C,SAAyBjpE,EAAO6uB,GAC5B,MAAM,EAAExuB,EAAE,OAAEuG,GAAYioB,EACxB,OAAIxuB,EAAIuG,EAAS,EACN,MACAvG,EAAIL,EAAM4G,OAASA,EAAS,EAC5B,SAEJ,QACX,CA4BoD4iE,CAAgBxpE,EAAO6uB,GACvE,MAAO,CACHq6C,OAAQr6C,EAAKq6C,QAAU3oE,EAAQ2oE,QAAUF,GAAgBhpE,EAAOO,EAASsuB,EAAMo6C,GAC/EA,SAER,CAqBC,SAASQ,GAAmBlpE,EAASsuB,EAAM66C,EAAW1pE,GACnD,MAAM,UAAEopE,EAAU,aAAEC,EAAa,aAAEM,GAAkBppE,GAC/C,OAAE2oE,EAAO,OAAED,GAAYS,EACvBE,EAAiBR,EAAYC,GAC7B,QAAEtP,EAAQ,SAAEC,EAAS,WAAEC,EAAW,YAAEC,IAAiB,QAAcyP,GACzE,IAAIvpE,EAzBR,SAAgByuB,EAAMq6C,GAClB,IAAI,EAAE9oE,EAAE,MAAEuG,GAAWkoB,EAMrB,MALe,UAAXq6C,EACA9oE,GAAKuG,EACa,WAAXuiE,IACP9oE,GAAKuG,EAAQ,GAEVvG,CACX,CAiBYypE,CAAOh7C,EAAMq6C,GACrB,MAAM7oE,EAjBV,SAAgBwuB,EAAMo6C,EAAQW,GAC1B,IAAI,EAAEvpE,EAAE,OAAEuG,GAAYioB,EAQtB,MAPe,QAAXo6C,EACA5oE,GAAKupE,EAELvpE,GADkB,WAAX4oE,EACFriE,EAASgjE,EAEThjE,EAAS,EAEXvG,CACX,CAOcypE,CAAOj7C,EAAMo6C,EAAQW,GAY/B,MAXe,WAAXX,EACe,SAAXC,EACA9oE,GAAKwpE,EACa,UAAXV,IACP9oE,GAAKwpE,GAES,SAAXV,EACP9oE,GAAK6C,KAAKN,IAAIo3D,EAASE,GAAcmP,EACnB,UAAXF,IACP9oE,GAAK6C,KAAKN,IAAIq3D,EAAUE,GAAekP,GAEpC,CACHhpE,GAAG,OAAYA,EAAG,EAAGJ,EAAM2G,MAAQkoB,EAAKloB,OACxCtG,GAAG,OAAYA,EAAG,EAAGL,EAAM4G,OAASioB,EAAKjoB,QAEjD,CACA,SAASmjE,GAAYtC,EAAShxB,EAAOl2C,GACjC,MAAM+tC,GAAU,OAAU/tC,EAAQ+tC,SAClC,MAAiB,WAAVmI,EAAqBgxB,EAAQrnE,EAAIqnE,EAAQ9gE,MAAQ,EAAc,UAAV8vC,EAAoBgxB,EAAQrnE,EAAIqnE,EAAQ9gE,MAAQ2nC,EAAQjtC,MAAQomE,EAAQrnE,EAAIkuC,EAAQltC,IACpJ,CACC,SAAS4oE,GAAwBpxD,GAC9B,OAAOsuD,GAAa,GAAIE,GAAcxuD,GAC1C,CAQA,SAASqxD,GAAkB5gD,EAAW/W,GAClC,MAAMsxC,EAAWtxC,GAAWA,EAAQghB,SAAWhhB,EAAQghB,QAAQm0C,SAAWn1D,EAAQghB,QAAQm0C,QAAQp+C,UAClG,OAAOu6B,EAAWv6B,EAAUu6B,SAASA,GAAYv6B,CACrD,CACA,MAAM6gD,GAAmB,CACrBC,YAAa,KACb9tB,MAAO+tB,GACH,GAAIA,EAAanpE,OAAS,EAAG,CACzB,MAAM0jB,EAAOylD,EAAa,GACpB9zC,EAAS3R,EAAK3kB,MAAMynB,KAAK6O,OACzB+zC,EAAa/zC,EAASA,EAAOr1B,OAAS,EAC5C,GAAIwS,MAAQA,KAAKlT,SAAiC,YAAtBkT,KAAKlT,QAAQT,KACrC,OAAO6kB,EAAK2O,QAAQ0E,OAAS,GAC1B,GAAIrT,EAAKqT,MACZ,OAAOrT,EAAKqT,MACT,GAAIqyC,EAAa,GAAK1lD,EAAKkU,UAAYwxC,EAC1C,OAAO/zC,EAAO3R,EAAKkU,UAE3B,CACA,MAAO,EACX,EACAyxC,WAAY,KACZhC,WAAY,KACZiC,YAAa,KACbvyC,MAAOwyC,GACH,GAAI/2D,MAAQA,KAAKlT,SAAiC,YAAtBkT,KAAKlT,QAAQT,KACrC,OAAO0qE,EAAYxyC,MAAQ,KAAOwyC,EAAYjD,gBAAkBiD,EAAYjD,eAEhF,IAAIvvC,EAAQwyC,EAAYl3C,QAAQ0E,OAAS,GACrCA,IACAA,GAAS,MAEb,MAAMnW,EAAQ2oD,EAAYjD,eAI1B,OAHK,OAAc1lD,KACfmW,GAASnW,GAENmW,CACX,EACAyyC,WAAYD,GACR,MACMjqE,EADOiqE,EAAYxqE,MAAMy0B,eAAe+1C,EAAY/6C,cACrCe,WAAWkI,SAAS8xC,EAAY3xC,WACrD,MAAO,CACH1qB,YAAa5N,EAAQ4N,YACrBL,gBAAiBvN,EAAQuN,gBACzBE,YAAazN,EAAQyN,YACrBoyC,WAAY7/C,EAAQ6/C,WACpBE,iBAAkB//C,EAAQ+/C,iBAC1BqT,aAAc,EAEtB,EACA+W,iBACI,OAAOj3D,KAAKlT,QAAQoqE,SACxB,EACAC,gBAAiBJ,GACb,MACMjqE,EADOiqE,EAAYxqE,MAAMy0B,eAAe+1C,EAAY/6C,cACrCe,WAAWkI,SAAS8xC,EAAY3xC,WACrD,MAAO,CACHmG,WAAYz+B,EAAQy+B,WACpBhkB,SAAUza,EAAQya,SAE1B,EACA6vD,WAAY,KACZtC,UAAW,KACXuC,aAAc,KACdnD,OAAQ,KACRoD,YAAa,MAEhB,SAASC,GAA2B3hD,EAAW1Y,EAAMjD,EAAK+E,GACvD,MAAMijC,EAASrsB,EAAU1Y,GAAM9B,KAAKnB,EAAK+E,GACzC,YAAsB,IAAXijC,EACAw0B,GAAiBv5D,GAAM9B,KAAKnB,EAAK+E,GAErCijC,CACX,CACA,MAAMu1B,WAAgBt2B,GACrB7iB,mBAAqB+0C,GAClBlyD,YAAY6Y,GACRgS,QACA/rB,KAAKy3D,QAAU,EACfz3D,KAAKwW,QAAU,GACfxW,KAAK03D,oBAAiBlrE,EACtBwT,KAAK23D,WAAQnrE,EACbwT,KAAK43D,uBAAoBprE,EACzBwT,KAAK63D,cAAgB,GACrB73D,KAAK4a,iBAAcpuB,EACnBwT,KAAKkf,cAAW1yB,EAChBwT,KAAKzT,MAAQwtB,EAAOxtB,MACpByT,KAAKlT,QAAUitB,EAAOjtB,QACtBkT,KAAK83D,gBAAatrE,EAClBwT,KAAK4oC,WAAQp8C,EACbwT,KAAK60D,gBAAaroE,EAClBwT,KAAKi0D,UAAOznE,EACZwT,KAAK80D,eAAYtoE,EACjBwT,KAAKk0D,YAAS1nE,EACdwT,KAAKy1D,YAASjpE,EACdwT,KAAKw1D,YAAShpE,EACdwT,KAAKrT,OAAIH,EACTwT,KAAKpT,OAAIJ,EACTwT,KAAK7M,YAAS3G,EACdwT,KAAK9M,WAAQ1G,EACbwT,KAAK+3D,YAASvrE,EACdwT,KAAKg4D,YAASxrE,EACdwT,KAAKi4D,iBAAczrE,EACnBwT,KAAKk4D,sBAAmB1rE,EACxBwT,KAAKm4D,qBAAkB3rE,CAC3B,CACA8yB,WAAWxyB,GACPkT,KAAKlT,QAAUA,EACfkT,KAAK43D,uBAAoBprE,EACzBwT,KAAKkf,cAAW1yB,CACpB,CACH05B,qBACO,MAAMhI,EAASle,KAAK43D,kBACpB,GAAI15C,EACA,OAAOA,EAEX,MAAM3xB,EAAQyT,KAAKzT,MACbO,EAAUkT,KAAKlT,QAAQw3C,WAAWtkC,KAAKoiB,cACvCv2B,EAAOiB,EAAQhB,SAAWS,EAAMO,QAAQutB,WAAavtB,EAAQguB,WAC7DA,EAAa,IAAIhB,EAAW9Z,KAAKzT,MAAOV,GAI9C,OAHIA,EAAKu6B,aACLpmB,KAAK43D,kBAAoBvqE,OAAO44B,OAAOnL,IAEpCA,CACX,CACHsH,aACO,OAAOpiB,KAAKkf,WAAalf,KAAKkf,UArIRnd,EAqIwC/B,KAAKzT,MAAM61B,aAAcpiB,KArIhD22D,EAqIsD32D,KAAK63D,eApI/F,OAAc91D,EAAQ,CACzBiyD,QAmIuFh0D,KAlIvF22D,eACAziE,KAAM,cAJd,IAA8B6N,EAAiB40D,CAsI3C,CACAyB,SAASv5D,EAAS/R,GACd,MAAM,UAAE8oB,GAAe9oB,EACjB4pE,EAAca,GAA2B3hD,EAAW,cAAe5V,KAAMnB,GACzE+pC,EAAQ2uB,GAA2B3hD,EAAW,QAAS5V,KAAMnB,GAC7Dg4D,EAAaU,GAA2B3hD,EAAW,aAAc5V,KAAMnB,GAC7E,IAAI81D,EAAQ,GAIZ,OAHAA,EAAQlB,GAAakB,EAAOhB,GAAc+C,IAC1C/B,EAAQlB,GAAakB,EAAOhB,GAAc/qB,IAC1C+rB,EAAQlB,GAAakB,EAAOhB,GAAckD,IACnClC,CACX,CACA0D,cAAc1B,EAAc7pE,GACxB,OAAOypE,GAAwBgB,GAA2BzqE,EAAQ8oB,UAAW,aAAc5V,KAAM22D,GACrG,CACA2B,QAAQ3B,EAAc7pE,GAClB,MAAM,UAAE8oB,GAAe9oB,EACjByrE,EAAY,GAalB,OAZA,OAAK5B,GAAe93D,IAChB,MAAM41D,EAAW,CACbC,OAAQ,GACRC,MAAO,GACPC,MAAO,IAEL4D,EAAShC,GAAkB5gD,EAAW/W,GAC5C40D,GAAagB,EAASC,OAAQf,GAAc4D,GAA2BiB,EAAQ,cAAex4D,KAAMnB,KACpG40D,GAAagB,EAASE,MAAO4C,GAA2BiB,EAAQ,QAASx4D,KAAMnB,IAC/E40D,GAAagB,EAASG,MAAOjB,GAAc4D,GAA2BiB,EAAQ,aAAcx4D,KAAMnB,KAClG05D,EAAUpqE,KAAKsmE,EAAS,IAErB8D,CACX,CACAE,aAAa9B,EAAc7pE,GACvB,OAAOypE,GAAwBgB,GAA2BzqE,EAAQ8oB,UAAW,YAAa5V,KAAM22D,GACpG,CACA+B,UAAU/B,EAAc7pE,GACpB,MAAM,UAAE8oB,GAAe9oB,EACjBuqE,EAAeE,GAA2B3hD,EAAW,eAAgB5V,KAAM22D,GAC3EzC,EAASqD,GAA2B3hD,EAAW,SAAU5V,KAAM22D,GAC/DW,EAAcC,GAA2B3hD,EAAW,cAAe5V,KAAM22D,GAC/E,IAAIhC,EAAQ,GAIZ,OAHAA,EAAQlB,GAAakB,EAAOhB,GAAc0D,IAC1C1C,EAAQlB,GAAakB,EAAOhB,GAAcO,IAC1CS,EAAQlB,GAAakB,EAAOhB,GAAc2D,IACnC3C,CACX,CACHgE,aAAa7rE,GACN,MAAMusB,EAASrZ,KAAKwW,QACdxC,EAAOhU,KAAKzT,MAAMynB,KAClBikD,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACI5qE,EAAG40C,EADHw0B,EAAe,GAEnB,IAAIppE,EAAI,EAAG40C,EAAM9oB,EAAO7rB,OAAQD,EAAI40C,IAAO50C,EACvCopE,EAAaxoE,KAAK0lE,GAAkB7zD,KAAKzT,MAAO8sB,EAAO9rB,KAkB3D,OAhBIT,EAAQif,SACR4qD,EAAeA,EAAa5qD,QAAO,CAACxI,EAASnD,EAAOs4B,IAAQ5rC,EAAQif,OAAOxI,EAASnD,EAAOs4B,EAAO1kB,MAElGlnB,EAAQ8rE,WACRjC,EAAeA,EAAah0D,MAAK,CAACG,EAAGC,IAAIjW,EAAQ8rE,SAAS91D,EAAGC,EAAGiR,OAEpE,OAAK2iD,GAAe93D,IAChB,MAAM25D,EAAShC,GAAkB1pE,EAAQ8oB,UAAW/W,GACpDo5D,EAAY9pE,KAAKopE,GAA2BiB,EAAQ,aAAcx4D,KAAMnB,IACxEq5D,EAAiB/pE,KAAKopE,GAA2BiB,EAAQ,kBAAmBx4D,KAAMnB,IAClFs5D,EAAgBhqE,KAAKopE,GAA2BiB,EAAQ,iBAAkBx4D,KAAMnB,GAAS,IAE7FmB,KAAKi4D,YAAcA,EACnBj4D,KAAKk4D,iBAAmBA,EACxBl4D,KAAKm4D,gBAAkBA,EACvBn4D,KAAK83D,WAAanB,EACXA,CACX,CACA/hE,OAAOuW,EAASmzC,GACZ,MAAMxxD,EAAUkT,KAAKlT,QAAQw3C,WAAWtkC,KAAKoiB,cACvC/I,EAASrZ,KAAKwW,QACpB,IAAI1V,EACA61D,EAAe,GACnB,GAAKt9C,EAAO7rB,OAML,CACH,MAAMqpC,EAAWu8B,GAAYtmE,EAAQ+pC,UAAUz7B,KAAK4E,KAAMqZ,EAAQrZ,KAAK03D,gBACvEf,EAAe32D,KAAK24D,aAAa7rE,GACjCkT,KAAK4oC,MAAQ5oC,KAAKo4D,SAASzB,EAAc7pE,GACzCkT,KAAK60D,WAAa70D,KAAKq4D,cAAc1B,EAAc7pE,GACnDkT,KAAKi0D,KAAOj0D,KAAKs4D,QAAQ3B,EAAc7pE,GACvCkT,KAAK80D,UAAY90D,KAAKy4D,aAAa9B,EAAc7pE,GACjDkT,KAAKk0D,OAASl0D,KAAK04D,UAAU/B,EAAc7pE,GAC3C,MAAMsuB,EAAOpb,KAAK23D,MAAQ5D,GAAe/zD,KAAMlT,GACzC+rE,EAAkBxrE,OAAOgR,OAAO,CAAC,EAAGw4B,EAAUzb,GAC9C66C,EAAYH,GAAmB91D,KAAKzT,MAAOO,EAAS+rE,GACpDC,EAAkB9C,GAAmBlpE,EAAS+rE,EAAiB5C,EAAWj2D,KAAKzT,OACrFyT,KAAKy1D,OAASQ,EAAUR,OACxBz1D,KAAKw1D,OAASS,EAAUT,OACxB10D,EAAa,CACT22D,QAAS,EACT9qE,EAAGmsE,EAAgBnsE,EACnBC,EAAGksE,EAAgBlsE,EACnBsG,MAAOkoB,EAAKloB,MACZC,OAAQioB,EAAKjoB,OACb4kE,OAAQlhC,EAASlqC,EACjBqrE,OAAQnhC,EAASjqC,EAEzB,MA5ByB,IAAjBoT,KAAKy3D,UACL32D,EAAa,CACT22D,QAAS,IA2BrBz3D,KAAK63D,cAAgBlB,EACrB32D,KAAKkf,cAAW1yB,EACZsU,GACAd,KAAKkmB,qBAAqBtxB,OAAOoL,KAAMc,GAEvCqK,GAAWre,EAAQisE,UACnBjsE,EAAQisE,SAAS39D,KAAK4E,KAAM,CACxBzT,MAAOyT,KAAKzT,MACZynE,QAASh0D,KACTs+C,UAGZ,CACA0a,UAAUC,EAAch/D,EAAKmhB,EAAMtuB,GAC/B,MAAMosE,EAAgBl5D,KAAKm5D,iBAAiBF,EAAc79C,EAAMtuB,GAChEmN,EAAI+0C,OAAOkqB,EAAchtB,GAAIgtB,EAAc/sB,IAC3ClyC,EAAI+0C,OAAOkqB,EAAc9sB,GAAI8sB,EAAc7sB,IAC3CpyC,EAAI+0C,OAAOkqB,EAAcE,GAAIF,EAAcG,GAC/C,CACAF,iBAAiBF,EAAc79C,EAAMtuB,GACjC,MAAM,OAAE2oE,EAAO,OAAED,GAAYx1D,MACvB,UAAE21D,EAAU,aAAEO,GAAkBppE,GAChC,QAAEw5D,EAAQ,SAAEC,EAAS,WAAEC,EAAW,YAAEC,IAAiB,QAAcyP,IACjEvpE,EAAG2sE,EAAM1sE,EAAG2sE,GAASN,GACvB,MAAE/lE,EAAM,OAAEC,GAAYioB,EAC5B,IAAI8wB,EAAIE,EAAIgtB,EAAIjtB,EAAIE,EAAIgtB,EAoCxB,MAnCe,WAAX7D,GACAnpB,EAAKktB,EAAMpmE,EAAS,EACL,SAAXsiE,GACAvpB,EAAKotB,EACLltB,EAAKF,EAAKypB,EACVxpB,EAAKE,EAAKspB,EACV0D,EAAKhtB,EAAKspB,IAEVzpB,EAAKotB,EAAMpmE,EACXk5C,EAAKF,EAAKypB,EACVxpB,EAAKE,EAAKspB,EACV0D,EAAKhtB,EAAKspB,GAEdyD,EAAKltB,IAGDE,EADW,SAAXqpB,EACK6D,EAAM9pE,KAAKN,IAAIo3D,EAASE,GAAcmP,EACzB,UAAXF,EACF6D,EAAMpmE,EAAQ1D,KAAKN,IAAIq3D,EAAUE,GAAekP,EAEhD31D,KAAK+3D,OAEC,QAAXvC,GACArpB,EAAKotB,EACLltB,EAAKF,EAAKwpB,EACVzpB,EAAKE,EAAKupB,EACVyD,EAAKhtB,EAAKupB,IAEVxpB,EAAKotB,EAAMpmE,EACXk5C,EAAKF,EAAKwpB,EACVzpB,EAAKE,EAAKupB,EACVyD,EAAKhtB,EAAKupB,GAEd0D,EAAKltB,GAEF,CACHD,KACAE,KACAgtB,KACAjtB,KACAE,KACAgtB,KAER,CACA9pB,UAAUiqB,EAAIv/D,EAAKnN,GACf,MAAM87C,EAAQ5oC,KAAK4oC,MACbp7C,EAASo7C,EAAMp7C,OACrB,IAAImkE,EAAWoD,EAAcxnE,EAC7B,GAAIC,EAAQ,CACR,MAAMgjE,GAAY,QAAc1jE,EAAQyjE,IAAKvwD,KAAKrT,EAAGqT,KAAK9M,OAQ1D,IAPAsmE,EAAG7sE,EAAI2pE,GAAYt2D,KAAMlT,EAAQi2C,WAAYj2C,GAC7CmN,EAAIozC,UAAYmjB,EAAUnjB,UAAUvgD,EAAQi2C,YAC5C9oC,EAAIuzC,aAAe,SACnBmkB,GAAY,QAAO7kE,EAAQ6kE,WAC3BoD,EAAejoE,EAAQioE,aACvB96D,EAAIG,UAAYtN,EAAQ2sE,WACxBx/D,EAAI4oC,KAAO8uB,EAAUnnB,OACjBj9C,EAAI,EAAGA,EAAIC,IAAUD,EACrB0M,EAAIy3D,SAAS9oB,EAAMr7C,GAAIijE,EAAU7jE,EAAE6sE,EAAG7sE,GAAI6sE,EAAG5sE,EAAI+kE,EAAU7uB,WAAa,GACxE02B,EAAG5sE,GAAK+kE,EAAU7uB,WAAaiyB,EAC3BxnE,EAAI,IAAMC,IACVgsE,EAAG5sE,GAAKE,EAAQkoE,kBAAoBD,EAGhD,CACJ,CACH2E,cAAcz/D,EAAKu/D,EAAIjsE,EAAGijE,EAAW1jE,GAC9B,MAAMkqE,EAAah3D,KAAKi4D,YAAY1qE,GAC9B4pE,EAAkBn3D,KAAKk4D,iBAAiB3qE,IACxC,UAAE4gE,EAAU,SAAEC,GAActhE,EAC5BqnE,GAAW,QAAOrnE,EAAQqnE,UAC1BwF,EAASrD,GAAYt2D,KAAM,OAAQlT,GACnC8sE,EAAYpJ,EAAU7jE,EAAEgtE,GACxBE,EAAU1L,EAAYgG,EAASrxB,YAAcqxB,EAASrxB,WAAaqrB,GAAa,EAAI,EACpF2L,EAASN,EAAG5sE,EAAIitE,EACtB,GAAI/sE,EAAQuhE,cAAe,CACvB,MAAM8C,EAAc,CAChBrmC,OAAQt7B,KAAKL,IAAIi/D,EAAUD,GAAa,EACxC5iC,WAAY4rC,EAAgB5rC,WAC5BhkB,SAAU4vD,EAAgB5vD,SAC1BhN,YAAa,GAEXu0B,EAAU0hC,EAAUE,WAAWkJ,EAAWxL,GAAYA,EAAW,EACjEr/B,EAAU+qC,EAAS3L,EAAY,EACrCl0D,EAAIQ,YAAc3N,EAAQitE,mBAC1B9/D,EAAIG,UAAYtN,EAAQitE,oBACxB,QAAU9/D,EAAKk3D,EAAariC,EAASC,GACrC90B,EAAIQ,YAAcu8D,EAAWt8D,YAC7BT,EAAIG,UAAY48D,EAAW38D,iBAC3B,QAAUJ,EAAKk3D,EAAariC,EAASC,EACzC,KAAO,CACH90B,EAAIO,WAAY,IAAAjN,GAASypE,EAAWz8D,aAAe/K,KAAKN,OAAO7B,OAAOwV,OAAOm0D,EAAWz8D,cAAgBy8D,EAAWz8D,aAAe,EAClIN,EAAIQ,YAAcu8D,EAAWt8D,YAC7BT,EAAI40C,YAAYmoB,EAAWrqB,YAAc,IACzC1yC,EAAI60C,eAAiBkoB,EAAWnqB,kBAAoB,EACpD,MAAMmtB,EAASxJ,EAAUE,WAAWkJ,EAAWxL,GACzC6L,EAASzJ,EAAUE,WAAWF,EAAUa,MAAMuI,EAAW,GAAIxL,EAAW,GACxElO,GAAe,QAAc8W,EAAW9W,cAC1C7yD,OAAOwV,OAAOq9C,GAAcjM,MAAMhkD,GAAU,IAANA,KACtCgK,EAAIE,YACJF,EAAIG,UAAYtN,EAAQitE,oBACxB,QAAmB9/D,EAAK,CACpBtN,EAAGqtE,EACHptE,EAAGktE,EACHlgC,EAAGw0B,EACHt0B,EACAhP,OAAQo1B,IAEZjmD,EAAIylB,OACJzlB,EAAIg1C,SACJh1C,EAAIG,UAAY48D,EAAW38D,gBAC3BJ,EAAIE,aACJ,QAAmBF,EAAK,CACpBtN,EAAGstE,EACHrtE,EAAGktE,EAAS,EACZlgC,EAAGw0B,EAAW,EACdt0B,EAAGq0B,EAAY,EACfrjC,OAAQo1B,IAEZjmD,EAAIylB,SAEJzlB,EAAIG,UAAYtN,EAAQitE,mBACxB9/D,EAAIK,SAAS0/D,EAAQF,EAAQ1L,EAAUD,GACvCl0D,EAAIU,WAAWq/D,EAAQF,EAAQ1L,EAAUD,GACzCl0D,EAAIG,UAAY48D,EAAW38D,gBAC3BJ,EAAIK,SAAS2/D,EAAQH,EAAS,EAAG1L,EAAW,EAAGD,EAAY,GAEnE,CACAl0D,EAAIG,UAAY4F,KAAKm4D,gBAAgB5qE,EACzC,CACA2sE,SAASV,EAAIv/D,EAAKnN,GACd,MAAM,KAAEmnE,GAAUj0D,MACZ,YAAEk1D,EAAY,UAAEiF,EAAU,cAAElF,EAAc,UAAE9G,EAAU,SAAEC,EAAS,WAAEl1B,GAAgBpsC,EACnFqnE,GAAW,QAAOrnE,EAAQqnE,UAChC,IAAIiG,EAAiBjG,EAASrxB,WAC1Bu3B,EAAe,EACnB,MAAM7J,GAAY,QAAc1jE,EAAQyjE,IAAKvwD,KAAKrT,EAAGqT,KAAK9M,OACpDonE,EAAiB,SAASnmC,GAC5Bl6B,EAAIy3D,SAASv9B,EAAMq8B,EAAU7jE,EAAE6sE,EAAG7sE,EAAI0tE,GAAeb,EAAG5sE,EAAIwtE,EAAiB,GAC7EZ,EAAG5sE,GAAKwtE,EAAiBlF,CAC7B,EACMqF,EAA0B/J,EAAUnjB,UAAU8sB,GACpD,IAAI1F,EAAU+F,EAAW7F,EAAOpnE,EAAGwpC,EAAGnb,EAAMquB,EAQ5C,IAPAhwC,EAAIozC,UAAY8sB,EAChBlgE,EAAIuzC,aAAe,SACnBvzC,EAAI4oC,KAAOsxB,EAAS3pB,OACpBgvB,EAAG7sE,EAAI2pE,GAAYt2D,KAAMu6D,EAAyBztE,GAClDmN,EAAIG,UAAYtN,EAAQoqE,WACxB,OAAKl3D,KAAK60D,WAAYyF,GACtBD,EAAepF,GAA6C,UAA5BsF,EAAoD,WAAdJ,EAAyB/L,EAAW,EAAIl1B,EAAak1B,EAAW,EAAIl1B,EAAa,EACnJ3rC,EAAI,EAAGquB,EAAOq4C,EAAKzmE,OAAQD,EAAIquB,IAAQruB,EAAE,CAUzC,IATAknE,EAAWR,EAAK1mE,GAChBitE,EAAYx6D,KAAKm4D,gBAAgB5qE,GACjC0M,EAAIG,UAAYogE,GAChB,OAAK/F,EAASC,OAAQ4F,GACtB3F,EAAQF,EAASE,MACbM,GAAiBN,EAAMnnE,SACvBwS,KAAK05D,cAAcz/D,EAAKu/D,EAAIjsE,EAAGijE,EAAW1jE,GAC1CstE,EAAiB5qE,KAAKN,IAAIilE,EAASrxB,WAAYqrB,IAE/Cp3B,EAAI,EAAGkT,EAAO0qB,EAAMnnE,OAAQupC,EAAIkT,IAAQlT,EACxCujC,EAAe3F,EAAM59B,IACrBqjC,EAAiBjG,EAASrxB,YAE9B,OAAK2xB,EAASG,MAAO0F,EACzB,CACAD,EAAe,EACfD,EAAiBjG,EAASrxB,YAC1B,OAAK9iC,KAAK80D,UAAWwF,GACrBd,EAAG5sE,GAAKsoE,CACZ,CACAuF,WAAWjB,EAAIv/D,EAAKnN,GAChB,MAAMonE,EAASl0D,KAAKk0D,OACd1mE,EAAS0mE,EAAO1mE,OACtB,IAAI4mE,EAAY7mE,EAChB,GAAIC,EAAQ,CACR,MAAMgjE,GAAY,QAAc1jE,EAAQyjE,IAAKvwD,KAAKrT,EAAGqT,KAAK9M,OAQ1D,IAPAsmE,EAAG7sE,EAAI2pE,GAAYt2D,KAAMlT,EAAQ4tE,YAAa5tE,GAC9C0sE,EAAG5sE,GAAKE,EAAQqoE,gBAChBl7D,EAAIozC,UAAYmjB,EAAUnjB,UAAUvgD,EAAQ4tE,aAC5CzgE,EAAIuzC,aAAe,SACnB4mB,GAAa,QAAOtnE,EAAQsnE,YAC5Bn6D,EAAIG,UAAYtN,EAAQ6tE,YACxB1gE,EAAI4oC,KAAOuxB,EAAW5pB,OAClBj9C,EAAI,EAAGA,EAAIC,IAAUD,EACrB0M,EAAIy3D,SAASwC,EAAO3mE,GAAIijE,EAAU7jE,EAAE6sE,EAAG7sE,GAAI6sE,EAAG5sE,EAAIwnE,EAAWtxB,WAAa,GAC1E02B,EAAG5sE,GAAKwnE,EAAWtxB,WAAah2C,EAAQsoE,aAEhD,CACJ,CACA3mB,eAAe+qB,EAAIv/D,EAAK2gE,EAAa9tE,GACjC,MAAM,OAAE2oE,EAAO,OAAED,GAAYx1D,MACvB,EAAErT,EAAE,EAAEC,GAAO4sE,GACb,MAAEtmE,EAAM,OAAEC,GAAYynE,GACtB,QAAEtU,EAAQ,SAAEC,EAAS,WAAEC,EAAW,YAAEC,IAAiB,QAAc35D,EAAQopE,cACjFj8D,EAAIG,UAAYtN,EAAQuN,gBACxBJ,EAAIQ,YAAc3N,EAAQ4N,YAC1BT,EAAIO,UAAY1N,EAAQyN,YACxBN,EAAIE,YACJF,EAAI80C,OAAOpiD,EAAI25D,EAAS15D,GACT,QAAX4oE,GACAx1D,KAAKg5D,UAAUQ,EAAIv/D,EAAK2gE,EAAa9tE,GAEzCmN,EAAI+0C,OAAOriD,EAAIuG,EAAQqzD,EAAU35D,GACjCqN,EAAI4gE,iBAAiBluE,EAAIuG,EAAOtG,EAAGD,EAAIuG,EAAOtG,EAAI25D,GACnC,WAAXiP,GAAkC,UAAXC,GACvBz1D,KAAKg5D,UAAUQ,EAAIv/D,EAAK2gE,EAAa9tE,GAEzCmN,EAAI+0C,OAAOriD,EAAIuG,EAAOtG,EAAIuG,EAASszD,GACnCxsD,EAAI4gE,iBAAiBluE,EAAIuG,EAAOtG,EAAIuG,EAAQxG,EAAIuG,EAAQuzD,EAAa75D,EAAIuG,GAC1D,WAAXqiE,GACAx1D,KAAKg5D,UAAUQ,EAAIv/D,EAAK2gE,EAAa9tE,GAEzCmN,EAAI+0C,OAAOriD,EAAI65D,EAAY55D,EAAIuG,GAC/B8G,EAAI4gE,iBAAiBluE,EAAGC,EAAIuG,EAAQxG,EAAGC,EAAIuG,EAASqzD,GACrC,WAAXgP,GAAkC,SAAXC,GACvBz1D,KAAKg5D,UAAUQ,EAAIv/D,EAAK2gE,EAAa9tE,GAEzCmN,EAAI+0C,OAAOriD,EAAGC,EAAI05D,GAClBrsD,EAAI4gE,iBAAiBluE,EAAGC,EAAGD,EAAI25D,EAAS15D,GACxCqN,EAAIunD,YACJvnD,EAAIylB,OACA5yB,EAAQyN,YAAc,GACtBN,EAAIg1C,QAEZ,CACH6rB,uBAAuBhuE,GAChB,MAAMP,EAAQyT,KAAKzT,MACbmpB,EAAQ1V,KAAK4a,YACbmgD,EAAQrlD,GAASA,EAAM/oB,EACvBquE,EAAQtlD,GAASA,EAAM9oB,EAC7B,GAAImuE,GAASC,EAAO,CAChB,MAAMnkC,EAAWu8B,GAAYtmE,EAAQ+pC,UAAUz7B,KAAK4E,KAAMA,KAAKwW,QAASxW,KAAK03D,gBAC7E,IAAK7gC,EACD,OAEJ,MAAMzb,EAAOpb,KAAK23D,MAAQ5D,GAAe/zD,KAAMlT,GACzC+rE,EAAkBxrE,OAAOgR,OAAO,CAAC,EAAGw4B,EAAU72B,KAAK23D,OACnD1B,EAAYH,GAAmBvpE,EAAOO,EAAS+rE,GAC/C9rE,EAAQipE,GAAmBlpE,EAAS+rE,EAAiB5C,EAAW1pE,GAClEwuE,EAAM5hD,MAAQpsB,EAAMJ,GAAKquE,EAAM7hD,MAAQpsB,EAAMH,IAC7CoT,KAAKy1D,OAASQ,EAAUR,OACxBz1D,KAAKw1D,OAASS,EAAUT,OACxBx1D,KAAK9M,MAAQkoB,EAAKloB,MAClB8M,KAAK7M,OAASioB,EAAKjoB,OACnB6M,KAAK+3D,OAASlhC,EAASlqC,EACvBqT,KAAKg4D,OAASnhC,EAASjqC,EACvBoT,KAAKkmB,qBAAqBtxB,OAAOoL,KAAMjT,GAE/C,CACJ,CACHkuE,cACO,QAASj7D,KAAKy3D,OAClB,CACA59D,KAAKI,GACD,MAAMnN,EAAUkT,KAAKlT,QAAQw3C,WAAWtkC,KAAKoiB,cAC7C,IAAIq1C,EAAUz3D,KAAKy3D,QACnB,IAAKA,EACD,OAEJz3D,KAAK86D,uBAAuBhuE,GAC5B,MAAM8tE,EAAc,CAChB1nE,MAAO8M,KAAK9M,MACZC,OAAQ6M,KAAK7M,QAEXqmE,EAAK,CACP7sE,EAAGqT,KAAKrT,EACRC,EAAGoT,KAAKpT,GAEZ6qE,EAAUjoE,KAAK8D,IAAImkE,GAAW,KAAO,EAAIA,EACzC,MAAM58B,GAAU,OAAU/tC,EAAQ+tC,SAC5BqgC,EAAoBl7D,KAAK4oC,MAAMp7C,QAAUwS,KAAK60D,WAAWrnE,QAAUwS,KAAKi0D,KAAKzmE,QAAUwS,KAAK80D,UAAUtnE,QAAUwS,KAAKk0D,OAAO1mE,OAC9HV,EAAQhB,SAAWovE,IACnBjhE,EAAIC,OACJD,EAAIkhE,YAAc1D,EAClBz3D,KAAKyuC,eAAe+qB,EAAIv/D,EAAK2gE,EAAa9tE,IAC1C,QAAsBmN,EAAKnN,EAAQikE,eACnCyI,EAAG5sE,GAAKiuC,EAAQptC,IAChBuS,KAAKuvC,UAAUiqB,EAAIv/D,EAAKnN,GACxBkT,KAAKk6D,SAASV,EAAIv/D,EAAKnN,GACvBkT,KAAKy6D,WAAWjB,EAAIv/D,EAAKnN,IACzB,QAAqBmN,EAAKnN,EAAQikE,eAClC92D,EAAIW,UAEZ,CACHqjD,oBACO,OAAOj+C,KAAKwW,SAAW,EAC3B,CACH0nC,kBAAkBC,EAAgBmV,GAC3B,MAAMlV,EAAap+C,KAAKwW,QAClB6C,EAAS8kC,EAAe3yB,KAAI,EAAGxP,eAAe5b,YAChD,MAAM+b,EAAOnc,KAAKzT,MAAMy0B,eAAehF,GACvC,IAAKG,EACD,MAAM,IAAIxc,MAAM,kCAAoCqc,GAExD,MAAO,CACHA,eACAzY,QAAS4Y,EAAKnI,KAAK5T,GACnBA,QACH,IAEC+K,IAAW,QAAeizC,EAAY/kC,GACtC+hD,EAAkBp7D,KAAKq7D,iBAAiBhiD,EAAQi6C,IAClDnoD,GAAWiwD,KACXp7D,KAAKwW,QAAU6C,EACfrZ,KAAK03D,eAAiBpE,EACtBtzD,KAAKs7D,qBAAsB,EAC3Bt7D,KAAKpL,QAAO,GAEpB,CACHq9D,YAAYh5D,EAAGqlD,EAAQK,GAAc,GAC9B,GAAIL,GAAUt+C,KAAKs7D,oBACf,OAAO,EAEXt7D,KAAKs7D,qBAAsB,EAC3B,MAAMxuE,EAAUkT,KAAKlT,QACfsxD,EAAap+C,KAAKwW,SAAW,GAC7B6C,EAASrZ,KAAK8+C,mBAAmB7lD,EAAGmlD,EAAYE,EAAQK,GACxDyc,EAAkBp7D,KAAKq7D,iBAAiBhiD,EAAQpgB,GAChDkS,EAAUmzC,KAAW,QAAejlC,EAAQ+kC,IAAegd,EAWjE,OAVIjwD,IACAnL,KAAKwW,QAAU6C,GACXvsB,EAAQhB,SAAWgB,EAAQisE,YAC3B/4D,KAAK03D,eAAiB,CAClB/qE,EAAGsM,EAAEtM,EACLC,EAAGqM,EAAErM,GAEToT,KAAKpL,QAAO,EAAM0pD,KAGnBnzC,CACX,CACH2zC,mBAAmB7lD,EAAGmlD,EAAYE,EAAQK,GACnC,MAAM7xD,EAAUkT,KAAKlT,QACrB,GAAe,aAAXmM,EAAE/E,KACF,MAAO,GAEX,IAAKyqD,EACD,OAAOP,EAEX,MAAM/kC,EAASrZ,KAAKzT,MAAM4wD,0BAA0BlkD,EAAGnM,EAAQT,KAAMS,EAASwxD,GAI9E,OAHIxxD,EAAQyuB,SACRlC,EAAOkC,UAEJlC,CACX,CACHgiD,iBAAiBhiD,EAAQpgB,GAClB,MAAM,OAAE8+D,EAAO,OAAEC,EAAO,QAAElrE,GAAakT,KACjC62B,EAAWu8B,GAAYtmE,EAAQ+pC,UAAUz7B,KAAK4E,KAAMqZ,EAAQpgB,GAClE,OAAoB,IAAb49B,IAAuBkhC,IAAWlhC,EAASlqC,GAAKqrE,IAAWnhC,EAASjqC,EAC/E,EAEJ,IAAI2uE,GAAiB,CACjBvrE,GAAI,UACJuiE,SAAUiF,GACVpE,eACAoI,UAAWjvE,EAAO0O,EAAOnO,GACjBA,IACAP,EAAMynE,QAAU,IAAIwD,GAAQ,CACxBjrE,QACAO,YAGZ,EACAkQ,aAAczQ,EAAO0O,EAAOnO,GACpBP,EAAMynE,SACNznE,EAAMynE,QAAQ10C,WAAWxyB,EAEjC,EACAglB,MAAOvlB,EAAO0O,EAAOnO,GACbP,EAAMynE,SACNznE,EAAMynE,QAAQ10C,WAAWxyB,EAEjC,EACA8Q,UAAWrR,GACP,MAAMynE,EAAUznE,EAAMynE,QACtB,GAAIA,GAAWA,EAAQiH,cAAe,CAClC,MAAM7+D,EAAO,CACT43D,WAEJ,IAGO,IAHHznE,EAAMq7C,cAAc,oBAAqB,IACtCxrC,EACHlE,YAAY,IAEZ,OAEJ87D,EAAQn6D,KAAKtN,EAAM0N,KACnB1N,EAAMq7C,cAAc,mBAAoBxrC,EAC5C,CACJ,EACAo2D,WAAYjmE,EAAO6P,GACf,GAAI7P,EAAMynE,QAAS,CACf,MAAM/8B,EAAmB76B,EAAKkiD,OAC1B/xD,EAAMynE,QAAQ/B,YAAY71D,EAAKlQ,MAAO+qC,EAAkB76B,EAAKuiD,eAC7DviD,EAAK+O,SAAU,EAEvB,CACJ,EACApQ,SAAU,CACNjP,SAAS,EACTitE,SAAU,KACVliC,SAAU,UACVx8B,gBAAiB,kBACjBo/D,WAAY,OACZ9H,UAAW,CACPpiC,OAAQ,QAEZwlC,aAAc,EACdC,kBAAmB,EACnBjyB,WAAY,OACZm0B,UAAW,OACXhC,YAAa,EACbf,SAAU,CAAC,EACXgG,UAAW,OACXQ,YAAa,OACbvF,cAAe,EACfD,gBAAiB,EACjBf,WAAY,CACR7kC,OAAQ,QAEZmrC,YAAa,OACb7/B,QAAS,EACT+6B,aAAc,EACdD,UAAW,EACXO,aAAc,EACd/H,UAAW,CAACl0D,EAAKpO,IAAOA,EAAKsoE,SAAS/4C,KACtCgzC,SAAU,CAACn0D,EAAKpO,IAAOA,EAAKsoE,SAAS/4C,KACrC2+C,mBAAoB,OACpB9E,eAAe,EACf/7B,WAAY,EACZx+B,YAAa,gBACbH,YAAa,EACb8f,UAAW,CACPtE,SAAU,IACV2C,OAAQ,gBAEZoC,WAAY,CACR6P,QAAS,CACLz2B,KAAM,SACN4M,WAAY,CACR,IACA,IACA,QACA,SACA,SACA,WAGR22D,QAAS,CACL/+C,OAAQ,SACR3C,SAAU,MAGlBH,UAAW6gD,IAEf7lB,cAAe,CACXujB,SAAU,OACVC,WAAY,OACZzC,UAAW,QAEfrgB,YAAa,CACTtmB,YAAc9tB,GAAgB,WAATA,GAA8B,aAATA,GAAgC,aAATA,EACjE+tB,YAAY,EACZrV,UAAW,CACPoV,aAAa,EACbC,YAAY,GAEhB5Q,UAAW,CACPohD,WAAW,GAEf3gD,WAAY,CACR2gD,UAAW,cAGnB/kB,uBAAwB,CACpB,gBAIJtrB,GAAuB/9B,OAAO44B,OAAO,CACzC4K,UAAW,KACX6qC,OAAQjU,GACRkU,WAAYpT,GACZqT,OAAQx7D,GACRouD,OAAQ8D,GACRuJ,SAAU1I,GACVR,MAAOK,GACPwE,QAAS+D,KAwBT,SAASO,GAAkB1tD,GACvB,MAAMyU,EAAS7iB,KAAK5N,YACpB,OAAIgc,GAAS,GAAKA,EAAQyU,EAAOr1B,OACtBq1B,EAAOzU,GAEXA,CACX,CAmMA,SAAS2tD,GAAkB3tD,EAAO4tD,GAAY,WAAElyC,EAAW,YAAEme,IACzD,MAAMg0B,GAAM,IAAArvD,GAAUq7B,GAChB1d,GAAST,EAAat6B,KAAK+9B,IAAI0uC,GAAOzsE,KAAK69B,IAAI4uC,KAAS,KACxDzuE,EAAS,IAAOwuE,GAAc,GAAK5tD,GAAO5gB,OAChD,OAAOgC,KAAKL,IAAI6sE,EAAazxC,EAAO/8B,EACxC,CACA,MAAM0uE,WAAwBh5B,GAC1BhiC,YAAYoX,GACRyT,MAAMzT,GACLtY,KAAKhF,WAAQxO,EACbwT,KAAKkH,SAAM1a,EACXwT,KAAKm8D,iBAAc3vE,EACnBwT,KAAKo8D,eAAY5vE,EAClBwT,KAAKq8D,YAAc,CACvB,CACA3rE,MAAM20B,EAAKjlB,GACP,OAAI,OAAcilB,KAGE,iBAARA,GAAoBA,aAAe1B,UAAY24C,UAAUj3C,GAF1D,MAKHA,CACZ,CACAk3C,yBACI,MAAM,YAAE5sC,GAAiB3vB,KAAKlT,SACxB,WAAEk3B,EAAW,WAAEC,GAAgBjkB,KAAKkkB,gBAC1C,IAAI,IAAE/0B,EAAI,IAAED,GAAS8Q,KACrB,MAAMw8D,EAAUvsE,GAAId,EAAM60B,EAAa70B,EAAMc,EACvCwsE,EAAUxsE,GAAIf,EAAM+0B,EAAa/0B,EAAMe,EAC7C,GAAI0/B,EAAa,CACb,MAAM+sC,GAAU,IAAAvnE,GAAKhG,GACfwtE,GAAU,IAAAxnE,GAAKjG,GACjBwtE,EAAU,GAAKC,EAAU,EACzBF,EAAO,GACAC,EAAU,GAAKC,EAAU,GAChCH,EAAO,EAEf,CACA,GAAIrtE,IAAQD,EAAK,CACb,IAAIuB,EAAiB,IAARvB,EAAY,EAAIM,KAAK8D,IAAU,IAANpE,GACtCutE,EAAOvtE,EAAMuB,GACRk/B,GACD6sC,EAAOrtE,EAAMsB,EAErB,CACAuP,KAAK7Q,IAAMA,EACX6Q,KAAK9Q,IAAMA,CACf,CACA0tE,eACI,MAAM33B,EAAWjlC,KAAKlT,QAAQg8B,MAC9B,IACI+zC,GADA,cAAE/6B,EAAc,SAAEzuC,GAAc4xC,EAepC,OAbI5xC,GACAwpE,EAAWrtE,KAAKkyC,KAAK1hC,KAAK9Q,IAAMmE,GAAY7D,KAAKqpB,MAAM7Y,KAAK7Q,IAAMkE,GAAY,EAC1EwpE,EAAW,MACXxhE,QAAQC,KAAK,UAAU0E,KAAKhQ,sBAAsBqD,mCAA0CwpE,8BAC5FA,EAAW,OAGfA,EAAW78D,KAAK88D,mBAChBh7B,EAAgBA,GAAiB,IAEjCA,IACA+6B,EAAWrtE,KAAKL,IAAI2yC,EAAe+6B,IAEhCA,CACX,CACHC,mBACO,OAAOn5C,OAAOC,iBAClB,CACA8hB,aACI,MAAM75C,EAAOmU,KAAKlT,QACZm4C,EAAWp5C,EAAKi9B,MACtB,IAAI+zC,EAAW78D,KAAK48D,eACpBC,EAAWrtE,KAAKN,IAAI,EAAG2tE,GACvB,MAcM/zC,EA9Ld,SAAyBi0C,EAAmBC,GACxC,MAAMl0C,EAAQ,IAER,OAAE87B,EAAO,KAAErY,EAAK,IAAEp9C,EAAI,IAAED,EAAI,UAAE+tE,EAAU,MAAEtsD,EAAM,SAAEksD,EAAS,UAAEK,EAAU,cAAEC,GAAmBJ,EAC5FK,EAAO7wB,GAAQ,EACf8wB,EAAYR,EAAW,GACrB1tE,IAAKmuE,EAAOpuE,IAAKquE,GAAUP,EAC7Bh5C,IAAc,OAAc70B,GAC5B80B,IAAc,OAAc/0B,GAC5BsuE,IAAgB,OAAc7sD,GAC9BqrD,GAAcuB,EAAOD,IAASJ,EAAY,GAChD,IACItlD,EAAQ6lD,EAASC,EAASC,EAD1B5yC,GAAU,SAASwyC,EAAOD,GAAQD,EAAYD,GAAQA,EAE1D,GAAIryC,EAXgB,QAWU/G,IAAeC,EACzC,MAAO,CACH,CACI7V,MAAOkvD,GAEX,CACIlvD,MAAOmvD,IAInBI,EAAYnuE,KAAKkyC,KAAK67B,EAAOxyC,GAAWv7B,KAAKqpB,MAAMykD,EAAOvyC,GACtD4yC,EAAYN,IACZtyC,GAAU,QAAQ4yC,EAAY5yC,EAAUsyC,EAAYD,GAAQA,IAE3D,OAAcH,KACfrlD,EAASpoB,KAAKmoC,IAAI,GAAIslC,GACtBlyC,EAAUv7B,KAAKkyC,KAAK3W,EAAUnT,GAAUA,GAE7B,UAAXgtC,GACA6Y,EAAUjuE,KAAKqpB,MAAMykD,EAAOvyC,GAAWA,EACvC2yC,EAAUluE,KAAKkyC,KAAK67B,EAAOxyC,GAAWA,IAEtC0yC,EAAUH,EACVI,EAAUH,GAEVv5C,GAAcC,GAAcsoB,IAAQ,SAAar9C,EAAMC,GAAOo9C,EAAMxhB,EAAU,MAC9E4yC,EAAYnuE,KAAKqB,MAAMrB,KAAKL,KAAKD,EAAMC,GAAO47B,EAAS8xC,IACvD9xC,GAAW77B,EAAMC,GAAOwuE,EACxBF,EAAUtuE,EACVuuE,EAAUxuE,GACHsuE,GACPC,EAAUz5C,EAAa70B,EAAMsuE,EAC7BC,EAAUz5C,EAAa/0B,EAAMwuE,EAC7BC,EAAYhtD,EAAQ,EACpBoa,GAAW2yC,EAAUD,GAAWE,IAEhCA,GAAaD,EAAUD,GAAW1yC,EAE9B4yC,GADA,QAAaA,EAAWnuE,KAAKqB,MAAM8sE,GAAY5yC,EAAU,KAC7Cv7B,KAAKqB,MAAM8sE,GAEXnuE,KAAKkyC,KAAKi8B,IAG9B,MAAMC,EAAgBpuE,KAAKN,KAAI,QAAe67B,IAAU,QAAe0yC,IACvE7lD,EAASpoB,KAAKmoC,IAAI,IAAI,OAAcslC,GAAaW,EAAgBX,GACjEQ,EAAUjuE,KAAKqB,MAAM4sE,EAAU7lD,GAAUA,EACzC8lD,EAAUluE,KAAKqB,MAAM6sE,EAAU9lD,GAAUA,EACzC,IAAImf,EAAI,EAgBR,IAfI/S,IACIm5C,GAAiBM,IAAYtuE,GAC7B25B,EAAM36B,KAAK,CACPigB,MAAOjf,IAEPsuE,EAAUtuE,GACV4nC,KAEA,QAAavnC,KAAKqB,OAAO4sE,EAAU1mC,EAAIhM,GAAWnT,GAAUA,EAAQzoB,EAAK4sE,GAAkB5sE,EAAK6sE,EAAYe,KAC5GhmC,KAEG0mC,EAAUtuE,GACjB4nC,KAGFA,EAAI4mC,IAAa5mC,EAAE,CACrB,MAAM8mC,EAAYruE,KAAKqB,OAAO4sE,EAAU1mC,EAAIhM,GAAWnT,GAAUA,EACjE,GAAIqM,GAAc45C,EAAY3uE,EAC1B,MAEJ45B,EAAM36B,KAAK,CACPigB,MAAOyvD,GAEf,CAcA,OAbI55C,GAAck5C,GAAiBO,IAAYxuE,EACvC45B,EAAMt7B,SAAU,QAAas7B,EAAMA,EAAMt7B,OAAS,GAAG4gB,MAAOlf,EAAK6sE,GAAkB7sE,EAAK8sE,EAAYe,IACpGj0C,EAAMA,EAAMt7B,OAAS,GAAG4gB,MAAQlf,EAEhC45B,EAAM36B,KAAK,CACPigB,MAAOlf,IAGP+0B,GAAcy5C,IAAYxuE,GAClC45B,EAAM36B,KAAK,CACPigB,MAAOsvD,IAGR50C,CACX,CA2FsBg1C,CAdkB,CAC5BjB,WACAjY,OAAQ/4D,EAAK+4D,OACbz1D,IAAKtD,EAAKsD,IACVD,IAAKrD,EAAKqD,IACV+tE,UAAWh4B,EAASg4B,UACpB1wB,KAAMtH,EAAS5xC,SACfsd,MAAOs0B,EAASt0B,MAChBusD,UAAWl9D,KAAK+vC,aAChBjmB,WAAY9pB,KAAK1Q,eACjB24C,YAAahD,EAASgD,aAAe,EACrCk1B,eAA0C,IAA3Bl4B,EAASk4B,eAEVn9D,KAAKyjC,QAAUzjC,MAajC,MAXoB,UAAhBnU,EAAK+4D,SACL,QAAmB97B,EAAO9oB,KAAM,SAEhCnU,EAAK0vB,SACLuN,EAAMvN,UACNvb,KAAKhF,MAAQgF,KAAK9Q,IAClB8Q,KAAKkH,IAAMlH,KAAK7Q,MAEhB6Q,KAAKhF,MAAQgF,KAAK7Q,IAClB6Q,KAAKkH,IAAMlH,KAAK9Q,KAEb45B,CACX,CACH5O,YACO,MAAM4O,EAAQ9oB,KAAK8oB,MACnB,IAAI9tB,EAAQgF,KAAK7Q,IACb+X,EAAMlH,KAAK9Q,IAEf,GADA68B,MAAM7R,YACFla,KAAKlT,QAAQ2D,QAAUq4B,EAAMt7B,OAAQ,CACrC,MAAMiD,GAAUyW,EAAMlM,GAASxL,KAAKN,IAAI45B,EAAMt7B,OAAS,EAAG,GAAK,EAC/DwN,GAASvK,EACTyW,GAAOzW,CACX,CACAuP,KAAKm8D,YAAcnhE,EACnBgF,KAAKo8D,UAAYl1D,EACjBlH,KAAKq8D,YAAcn1D,EAAMlM,CAC7B,CACAwpB,iBAAiBpW,GACb,OAAO,OAAaA,EAAOpO,KAAKzT,MAAMO,QAAQoiC,OAAQlvB,KAAKlT,QAAQg8B,MAAMiN,OAC7E,EAGJ,MAAMgoC,WAAoB7B,GACtB79C,UAAY,SACfA,gBAAkB,CACXyK,MAAO,CACH3jB,SAAU,KAAM64D,WAAWC,UAGnC14B,sBACI,MAAM,IAAEp2C,EAAI,IAAED,GAAS8Q,KAAKsjB,WAAU,GACtCtjB,KAAK7Q,KAAM,OAAeA,GAAOA,EAAM,EACvC6Q,KAAK9Q,KAAM,OAAeA,GAAOA,EAAM,EACvC8Q,KAAKu8D,wBACT,CACHO,mBACO,MAAMhzC,EAAa9pB,KAAK1Q,eAClB9B,EAASs8B,EAAa9pB,KAAK9M,MAAQ8M,KAAK7M,OACxC80C,GAAc,IAAAr7B,GAAU5M,KAAKlT,QAAQg8B,MAAMmf,aAC3C1d,GAAST,EAAat6B,KAAK+9B,IAAI0a,GAAez4C,KAAK69B,IAAI4a,KAAiB,KACxEiC,EAAWlqC,KAAKuqC,wBAAwB,GAC9C,OAAO/6C,KAAKkyC,KAAKl0C,EAASgC,KAAKL,IAAI,GAAI+6C,EAASpH,WAAavY,GACjE,CACAz4B,iBAAiBsc,GACb,OAAiB,OAAVA,EAAiBiV,IAAMrjB,KAAK8yB,oBAAoB1kB,EAAQpO,KAAKm8D,aAAen8D,KAAKq8D,YAC5F,CACA5sE,iBAAiBq7C,GACb,OAAO9qC,KAAKm8D,YAAcn8D,KAAKgrC,mBAAmBF,GAAS9qC,KAAKq8D,WACpE,EAGJ,MAAM6B,GAAcjuE,GAAIT,KAAKqpB,OAAM,QAAM5oB,IACnCkuE,GAAiB,CAACluE,EAAGmuE,IAAI5uE,KAAKmoC,IAAI,GAAIumC,GAAWjuE,GAAKmuE,GAC5D,SAASC,GAAQC,GAEb,OAAkB,GADHA,EAAU9uE,KAAKmoC,IAAI,GAAIumC,GAAWI,GAErD,CACA,SAASC,GAAMpvE,EAAKD,EAAKsvE,GACrB,MAAMC,EAAYjvE,KAAKmoC,IAAI,GAAI6mC,GACzBxjE,EAAQxL,KAAKqpB,MAAM1pB,EAAMsvE,GAE/B,OADYjvE,KAAKkyC,KAAKxyC,EAAMuvE,GACfzjE,CACjB,CAkDA,MAAM0jE,WAAyBx7B,GAC3B7kB,UAAY,cACfA,gBAAkB,CACXyK,MAAO,CACH3jB,SAAU,KAAM64D,WAAWxqE,YAC3BizC,MAAO,CACH36C,SAAS,KAIrBoV,YAAYoX,GACRyT,MAAMzT,GACLtY,KAAKhF,WAAQxO,EACbwT,KAAKkH,SAAM1a,EACXwT,KAAKm8D,iBAAc3vE,EACpBwT,KAAKq8D,YAAc,CACvB,CACA3rE,MAAM20B,EAAKjlB,GACP,MAAMgO,EAAQ8tD,GAAgBhhE,UAAUxK,MAAMqP,MAAMC,KAAM,CACtDqlB,EACAjlB,IAEJ,GAAc,IAAVgO,EAIJ,OAAO,OAAeA,IAAUA,EAAQ,EAAIA,EAAQ,KAHhDpO,KAAK2+D,OAAQ,CAIrB,CACAp5B,sBACI,MAAM,IAAEp2C,EAAI,IAAED,GAAS8Q,KAAKsjB,WAAU,GACtCtjB,KAAK7Q,KAAM,OAAeA,GAAOK,KAAKN,IAAI,EAAGC,GAAO,KACpD6Q,KAAK9Q,KAAM,OAAeA,GAAOM,KAAKN,IAAI,EAAGA,GAAO,KAChD8Q,KAAKlT,QAAQ6iC,cACb3vB,KAAK2+D,OAAQ,GAEb3+D,KAAK2+D,OAAS3+D,KAAK7Q,MAAQ6Q,KAAKkkC,iBAAkB,OAAelkC,KAAKgkC,YACtEhkC,KAAK7Q,IAAMA,IAAQgvE,GAAen+D,KAAK7Q,IAAK,GAAKgvE,GAAen+D,KAAK7Q,KAAM,GAAKgvE,GAAen+D,KAAK7Q,IAAK,IAE7G6Q,KAAKu8D,wBACT,CACAA,yBACI,MAAM,WAAEv4C,EAAW,WAAEC,GAAgBjkB,KAAKkkB,gBAC1C,IAAI/0B,EAAM6Q,KAAK7Q,IACXD,EAAM8Q,KAAK9Q,IACf,MAAMstE,EAAUvsE,GAAId,EAAM60B,EAAa70B,EAAMc,EACvCwsE,EAAUxsE,GAAIf,EAAM+0B,EAAa/0B,EAAMe,EACzCd,IAAQD,IACJC,GAAO,GACPqtE,EAAO,GACPC,EAAO,MAEPD,EAAO2B,GAAehvE,GAAM,IAC5BstE,EAAO0B,GAAejvE,EAAK,MAG/BC,GAAO,GACPqtE,EAAO2B,GAAejvE,GAAM,IAE5BA,GAAO,GACPutE,EAAO0B,GAAehvE,EAAK,IAE/B6Q,KAAK7Q,IAAMA,EACX6Q,KAAK9Q,IAAMA,CACf,CACAw2C,aACI,MAAM75C,EAAOmU,KAAKlT,QAKZg8B,EA5Gb,SAAuBi0C,GAAmB,IAAE5tE,EAAI,IAAED,IAC/CC,GAAM,OAAgB4tE,EAAkB5tE,IAAKA,GAC7C,MAAM25B,EAAQ,GACR81C,EAASV,GAAW/uE,GAC1B,IAAI0vE,EAfR,SAAkB1vE,EAAKD,GAEnB,IAAIsvE,EAAWN,GADDhvE,EAAMC,GAEpB,KAAMovE,GAAMpvE,EAAKD,EAAKsvE,GAAY,IAC9BA,IAEJ,KAAMD,GAAMpvE,EAAKD,EAAKsvE,GAAY,IAC9BA,IAEJ,OAAOhvE,KAAKL,IAAIqvE,EAAUN,GAAW/uE,GACzC,CAKc2vE,CAAS3vE,EAAKD,GACpB+tE,EAAY4B,EAAM,EAAIrvE,KAAKmoC,IAAI,GAAInoC,KAAK8D,IAAIurE,IAAQ,EACxD,MAAMxrE,EAAW7D,KAAKmoC,IAAI,GAAIknC,GACxBh+D,EAAO+9D,EAASC,EAAMrvE,KAAKmoC,IAAI,GAAIinC,GAAU,EAC7C5jE,EAAQxL,KAAKqB,OAAO1B,EAAM0R,GAAQo8D,GAAaA,EAC/CxsE,EAASjB,KAAKqpB,OAAO1pB,EAAM0R,GAAQxN,EAAW,IAAMA,EAAW,GACrE,IAAI0rE,EAAcvvE,KAAKqpB,OAAO7d,EAAQvK,GAAUjB,KAAKmoC,IAAI,GAAIknC,IACzDzwD,GAAQ,OAAgB2uD,EAAkB5tE,IAAKK,KAAKqB,OAAOgQ,EAAOpQ,EAASsuE,EAAcvvE,KAAKmoC,IAAI,GAAIknC,IAAQ5B,GAAaA,GAC/H,KAAM7uD,EAAQlf,GACV45B,EAAM36B,KAAK,CACPigB,QACAq4B,MAAO43B,GAAQjwD,GACf2wD,gBAEAA,GAAe,GACfA,EAAcA,EAAc,GAAK,GAAK,GAEtCA,IAEAA,GAAe,KACfF,IACAE,EAAc,EACd9B,EAAY4B,GAAO,EAAI,EAAI5B,GAE/B7uD,EAAQ5e,KAAKqB,OAAOgQ,EAAOpQ,EAASsuE,EAAcvvE,KAAKmoC,IAAI,GAAIknC,IAAQ5B,GAAaA,EAExF,MAAM+B,GAAW,OAAgBjC,EAAkB7tE,IAAKkf,GAMxD,OALA0a,EAAM36B,KAAK,CACPigB,MAAO4wD,EACPv4B,MAAO43B,GAAQW,GACfD,gBAEGj2C,CACX,CAuEsBm2C,CAJY,CACtB9vE,IAAK6Q,KAAKgkC,SACV90C,IAAK8Q,KAAK+jC,UAEiC/jC,MAY/C,MAXoB,UAAhBnU,EAAK+4D,SACL,QAAmB97B,EAAO9oB,KAAM,SAEhCnU,EAAK0vB,SACLuN,EAAMvN,UACNvb,KAAKhF,MAAQgF,KAAK9Q,IAClB8Q,KAAKkH,IAAMlH,KAAK7Q,MAEhB6Q,KAAKhF,MAAQgF,KAAK7Q,IAClB6Q,KAAKkH,IAAMlH,KAAK9Q,KAEb45B,CACX,CACHtE,iBAAiBpW,GACV,YAAiB5hB,IAAV4hB,EAAsB,KAAM,OAAaA,EAAOpO,KAAKzT,MAAMO,QAAQoiC,OAAQlvB,KAAKlT,QAAQg8B,MAAMiN,OACzG,CACH7b,YACO,MAAMlf,EAAQgF,KAAK7Q,IACnB48B,MAAM7R,YACNla,KAAKm8D,aAAc,QAAMnhE,GACzBgF,KAAKq8D,aAAc,QAAMr8D,KAAK9Q,MAAO,QAAM8L,EAC/C,CACAlJ,iBAAiBsc,GAIb,YAHc5hB,IAAV4hB,GAAiC,IAAVA,IACvBA,EAAQpO,KAAK7Q,KAEH,OAAVif,GAAkBxd,MAAMwd,GACjBiV,IAEJrjB,KAAK8yB,mBAAmB1kB,IAAUpO,KAAK7Q,IAAM,IAAK,QAAMif,GAASpO,KAAKm8D,aAAen8D,KAAKq8D,YACrG,CACA5sE,iBAAiBq7C,GACb,MAAMC,EAAU/qC,KAAKgrC,mBAAmBF,GACxC,OAAOt7C,KAAKmoC,IAAI,GAAI33B,KAAKm8D,YAAcpxB,EAAU/qC,KAAKq8D,YAC1D,EAGJ,SAAS6C,GAAsBrzE,GAC3B,MAAMo5C,EAAWp5C,EAAKi9B,MACtB,GAAImc,EAASvV,SAAW7jC,EAAK6jC,QAAS,CAClC,MAAMmL,GAAU,OAAUoK,EAASoJ,iBACnC,OAAO,IAAAp+C,GAAeg1C,EAASpC,MAAQoC,EAASpC,KAAKznB,KAAM,EAAAhB,EAASyoB,KAAKznB,MAAQyf,EAAQ1nC,MAC7F,CACA,OAAO,CACX,CAUA,SAASgsE,GAAgB14D,EAAOkyB,EAAKvd,EAAMjsB,EAAKD,GAC5C,OAAIuX,IAAUtX,GAAOsX,IAAUvX,EACpB,CACH8L,MAAO29B,EAAMvd,EAAO,EACpBlU,IAAKyxB,EAAMvd,EAAO,GAEf3U,EAAQtX,GAAOsX,EAAQvX,EACvB,CACH8L,MAAO29B,EAAMvd,EACblU,IAAKyxB,GAGN,CACH39B,MAAO29B,EACPzxB,IAAKyxB,EAAMvd,EAEnB,CA8BA,SAASgkD,GAAajvE,EAAQ+5B,EAAMzjB,EAAO44D,EAASC,GAChD,MAAM/xC,EAAM/9B,KAAK8D,IAAI9D,KAAK+9B,IAAI9mB,IACxB4mB,EAAM79B,KAAK8D,IAAI9D,KAAK69B,IAAI5mB,IAC9B,IAAI9Z,EAAI,EACJC,EAAI,EACJyyE,EAAQrkE,MAAQkvB,EAAKzI,GACrB90B,GAAKu9B,EAAKzI,EAAI49C,EAAQrkE,OAASuyB,EAC/Bp9B,EAAOsxB,EAAIjyB,KAAKL,IAAIgB,EAAOsxB,EAAGyI,EAAKzI,EAAI90B,IAChC0yE,EAAQn4D,IAAMgjB,EAAK/T,IAC1BxpB,GAAK0yE,EAAQn4D,IAAMgjB,EAAK/T,GAAKoX,EAC7Bp9B,EAAOgmB,EAAI3mB,KAAKN,IAAIiB,EAAOgmB,EAAG+T,EAAK/T,EAAIxpB,IAEvC2yE,EAAQtkE,MAAQkvB,EAAKtd,GACrBhgB,GAAKs9B,EAAKtd,EAAI0yD,EAAQtkE,OAASqyB,EAC/Bl9B,EAAOyc,EAAIpd,KAAKL,IAAIgB,EAAOyc,EAAGsd,EAAKtd,EAAIhgB,IAChC0yE,EAAQp4D,IAAMgjB,EAAKnnB,IAC1BnW,GAAK0yE,EAAQp4D,IAAMgjB,EAAKnnB,GAAKsqB,EAC7Bl9B,EAAO4S,EAAIvT,KAAKN,IAAIiB,EAAO4S,EAAGmnB,EAAKnnB,EAAInW,GAE/C,CACA,SAAS2yE,GAAqBryE,EAAOkT,EAAOo/D,GACxC,MAAMC,EAAgBvyE,EAAMwyE,aACtB,MAAEC,EAAM,gBAAEC,EAAgB,QAAE/kC,EAAQ,KAAEzf,GAAUokD,EAChDK,EAAqB3yE,EAAM4yE,iBAAiB1/D,EAAOq/D,EAAgBE,EAAQ9kC,EAAS+kC,GACpFn5D,EAAQjX,KAAKqB,OAAM,QAAU,QAAgBgvE,EAAmBp5D,MAAQ,EAAAqnB,KACxElhC,EA0EV,SAAmBA,EAAGktC,EAAGrzB,GAMrB,OALc,KAAVA,GAA0B,MAAVA,EAChB7Z,GAAKktC,EAAI,GACFrzB,EAAQ,KAAOA,EAAQ,MAC9B7Z,GAAKktC,GAEFltC,CACX,CAjFcmzE,CAAUF,EAAmBjzE,EAAGwuB,EAAK0e,EAAGrzB,GAC5C4mC,EAyDV,SAA8B5mC,GAC1B,OAAc,IAAVA,GAAyB,MAAVA,EACR,SACAA,EAAQ,IACR,OAEJ,OACX,CAhEsBu5D,CAAqBv5D,GACjC9Y,GAgEgBhB,EAhEQkzE,EAAmBlzE,EAgExBitC,EAhE2Bxe,EAAKwe,EAiE3C,WADcoJ,EAhEgCqK,GAkExD1gD,GAAKitC,EACY,WAAVoJ,IACPr2C,GAAKitC,EAAI,GAENjtC,GANX,IAA0BA,EAAGitC,EAAGoJ,EA/D5B,MAAO,CACHsY,SAAS,EACT3uD,EAAGkzE,EAAmBlzE,EACtBC,IACAygD,YACA1/C,OACAF,IAAKb,EACLgB,MAAOD,EAAOytB,EAAKwe,EACnBlsC,OAAQd,EAAIwuB,EAAK0e,EAEzB,CACA,SAASmmC,GAAgB/uD,EAAM6T,GAC3B,IAAKA,EACD,OAAO,EAEX,MAAM,KAAEp3B,EAAK,IAAEF,EAAI,MAAEG,EAAM,OAAEF,GAAYwjB,EAczC,SAbqB,OAAe,CAChCvkB,EAAGgB,EACHf,EAAGa,GACJs3B,KAAS,OAAe,CACvBp4B,EAAGgB,EACHf,EAAGc,GACJq3B,KAAS,OAAe,CACvBp4B,EAAGiB,EACHhB,EAAGa,GACJs3B,KAAS,OAAe,CACvBp4B,EAAGiB,EACHhB,EAAGc,GACJq3B,GAEP,CAiDA,SAASm7C,GAAkBjmE,EAAKpO,EAAMqlB,GAClC,MAAM,KAAEvjB,EAAK,IAAEF,EAAI,MAAEG,EAAM,OAAEF,GAAYwjB,GACnC,cAAEo9B,GAAmBziD,EAC3B,KAAK,OAAcyiD,GAAgB,CAC/B,MAAM4R,GAAe,QAAcr0D,EAAKq0D,cAClCrlB,GAAU,OAAUhvC,EAAKwiD,iBAC/Bp0C,EAAIG,UAAYk0C,EAChB,MAAM6xB,EAAexyE,EAAOktC,EAAQltC,KAC9ByyE,EAAc3yE,EAAMotC,EAAQptC,IAC5B4yE,EAAgBzyE,EAAQD,EAAOktC,EAAQ3nC,MACvCotE,EAAiB5yE,EAASD,EAAMotC,EAAQ1nC,OAC1C9F,OAAOwV,OAAOq9C,GAAcjM,MAAMhkD,GAAU,IAANA,KACtCgK,EAAIE,aACJ,QAAmBF,EAAK,CACpBtN,EAAGwzE,EACHvzE,EAAGwzE,EACHxmC,EAAGymC,EACHvmC,EAAGwmC,EACHx1C,OAAQo1B,IAEZjmD,EAAIylB,QAEJzlB,EAAIK,SAAS6lE,EAAcC,EAAaC,EAAeC,EAE/D,CACJ,CAmBA,SAASC,GAAerzE,EAAO49B,EAAQ+E,EAAU+mC,GAC7C,MAAM,IAAE38D,GAAS/M,EACjB,GAAI2iC,EACA51B,EAAI+0B,IAAI9hC,EAAMkjC,QAASljC,EAAMmjC,QAASvF,EAAQ,EAAG,EAAA0B,OAC9C,CACH,IAAI8I,EAAgBpoC,EAAM4yE,iBAAiB,EAAGh1C,GAC9C7wB,EAAI80C,OAAOzZ,EAAc3oC,EAAG2oC,EAAc1oC,GAC1C,IAAI,IAAIW,EAAI,EAAGA,EAAIqpE,EAAYrpE,IAC3B+nC,EAAgBpoC,EAAM4yE,iBAAiBvyE,EAAGu9B,GAC1C7wB,EAAI+0C,OAAO1Z,EAAc3oC,EAAG2oC,EAAc1oC,EAElD,CACJ,CA0BA,MAAM4zE,WAA0BtE,GAC5B79C,UAAY,eACfA,gBAAkB,CACXqR,SAAS,EACT+wC,SAAS,EACT5pC,SAAU,YACVpH,WAAY,CACRC,SAAS,EACTl1B,UAAW,EACXmyC,WAAY,GACZE,iBAAkB,GAEtBjd,KAAM,CACFC,UAAU,GAEd3C,WAAY,EACZpE,MAAO,CACHqlB,mBAAmB,EACnBhpC,SAAU,KAAM64D,WAAWC,SAE/BnuC,YAAa,CACTwe,mBAAe9hD,EACf6hD,gBAAiB,EACjB3e,SAAS,EACTmT,KAAM,CACFznB,KAAM,IAEVjW,SAAUof,GACCA,EAEXsW,QAAS,EACT6lC,mBAAmB,IAG3BriD,qBAAuB,CACnB,mBAAoB,cACpB,oBAAqB,QACrB,cAAe,SAEnBA,mBAAqB,CACjBoR,WAAY,CACRgsC,UAAW,SAGnBv6D,YAAYoX,GACRyT,MAAMzT,GACLtY,KAAKowB,aAAU5jC,EACfwT,KAAKqwB,aAAU7jC,EACfwT,KAAK0/D,iBAAclzE,EACnBwT,KAAK2gE,aAAe,GACrB3gE,KAAK4gE,iBAAmB,EAC5B,CACAx7B,gBACI,MAAMvK,EAAU76B,KAAK4yD,UAAW,OAAUsM,GAAsBl/D,KAAKlT,SAAW,GAC1E8sC,EAAI55B,KAAK9M,MAAQ8M,KAAKmuB,SAAW0M,EAAQ3nC,MACzC4mC,EAAI95B,KAAK7M,OAAS6M,KAAKouB,UAAYyM,EAAQ1nC,OACjD6M,KAAKowB,QAAU5gC,KAAKqpB,MAAM7Y,KAAKrS,KAAOisC,EAAI,EAAIiB,EAAQltC,MACtDqS,KAAKqwB,QAAU7gC,KAAKqpB,MAAM7Y,KAAKvS,IAAMqsC,EAAI,EAAIe,EAAQptC,KACrDuS,KAAK0/D,YAAclwE,KAAKqpB,MAAMrpB,KAAKL,IAAIyqC,EAAGE,GAAK,EACnD,CACAyL,sBACI,MAAM,IAAEp2C,EAAI,IAAED,GAAS8Q,KAAKsjB,WAAU,GACtCtjB,KAAK7Q,KAAM,OAAeA,KAASyB,MAAMzB,GAAOA,EAAM,EACtD6Q,KAAK9Q,KAAM,OAAeA,KAAS0B,MAAM1B,GAAOA,EAAM,EACtD8Q,KAAKu8D,wBACT,CACHO,mBACO,OAAOttE,KAAKkyC,KAAK1hC,KAAK0/D,YAAcR,GAAsBl/D,KAAKlT,SACnE,CACAg7C,mBAAmBhf,GACfozC,GAAgBhhE,UAAU4sC,mBAAmB1sC,KAAK4E,KAAM8oB,GACxD9oB,KAAK2gE,aAAe3gE,KAAK5N,YAAYo5B,KAAI,CAACpd,EAAOhO,KAC7C,MAAMmkB,GAAQ,OAASvkB,KAAKlT,QAAQgjC,YAAY3qB,SAAU,CACtDiJ,EACAhO,GACDJ,MACH,OAAOukB,GAAmB,IAAVA,EAAcA,EAAQ,EAAE,IACzCxY,QAAO,CAAC9b,EAAG1C,IAAIyS,KAAKzT,MAAMo/B,kBAAkBp+B,IACnD,CACA85C,MACI,MAAMx7C,EAAOmU,KAAKlT,QACdjB,EAAK6jC,SAAW7jC,EAAKikC,YAAYJ,QA3S5C,SAA4BxiC,GACzB,MAAMg9B,EAAO,CACTzI,EAAGv0B,EAAMS,KAAOT,EAAM0lE,SAASjlE,KAC/BwoB,EAAGjpB,EAAMU,MAAQV,EAAM0lE,SAAShlE,MAChCgf,EAAG1f,EAAMO,IAAMP,EAAM0lE,SAASnlE,IAC9BsV,EAAG7V,EAAMQ,OAASR,EAAM0lE,SAASllE,QAE/ByC,EAAS9C,OAAOgR,OAAO,CAAC,EAAG6rB,GAC3Boe,EAAa,GACbzN,EAAU,GACVgmC,EAAa3zE,EAAMyzE,aAAanzE,OAChCszE,EAAiB5zE,EAAMJ,QAAQgjC,YAC/B8vC,EAAkBkB,EAAeJ,kBAAoB,EAAA1yC,EAAK6yC,EAAa,EAC7E,IAAI,IAAItzE,EAAI,EAAGA,EAAIszE,EAAYtzE,IAAI,CAC/B,MAAM1B,EAAOi1E,EAAex8B,WAAWp3C,EAAM6zE,qBAAqBxzE,IAClEstC,EAAQttC,GAAK1B,EAAKgvC,QAClB,MAAMvF,EAAgBpoC,EAAM4yE,iBAAiBvyE,EAAGL,EAAMwyE,YAAc7kC,EAAQttC,GAAIqyE,GAC1EoB,GAAS,QAAOn1E,EAAKg3C,MACrBgwB,GA5CY54D,EA4CgB/M,EAAM+M,IA5CjB4oC,EA4CsBm+B,EA5ChBz8C,EA4CwBr3B,EAAMyzE,aAAapzE,GA3C5Eg3B,GAAQ,OAAQA,GAASA,EAAQ,CAC7BA,GAEG,CACHqV,GAAG,QAAa3/B,EAAK4oC,EAAK2H,OAAQjmB,GAClCuV,EAAGvV,EAAM/2B,OAASq1C,EAAKC,aAuCvBwF,EAAW/6C,GAAKslE,EAChB,MAAM3pB,GAAe,QAAgBh8C,EAAMqjC,cAAchjC,GAAKqyE,GACxDn5D,EAAQjX,KAAKqB,OAAM,OAAUq4C,IAGnCk2B,GAAajvE,EAAQ+5B,EAAMgf,EAFXi2B,GAAgB14D,EAAO6uB,EAAc3oC,EAAGkmE,EAASj5B,EAAG,EAAG,KACvDulC,GAAgB14D,EAAO6uB,EAAc1oC,EAAGimE,EAAS/4B,EAAG,GAAI,KAE5E,CAnDJ,IAA0B7/B,EAAK4oC,EAAMte,EAoDjCr3B,EAAM+zE,eAAe/2C,EAAKzI,EAAItxB,EAAOsxB,EAAGtxB,EAAOgmB,EAAI+T,EAAK/T,EAAG+T,EAAKtd,EAAIzc,EAAOyc,EAAGzc,EAAO4S,EAAImnB,EAAKnnB,GAC9F7V,EAAM0zE,iBA6DV,SAA8B1zE,EAAOo7C,EAAYzN,GAC7C,MAAMtkB,EAAQ,GACRsqD,EAAa3zE,EAAMyzE,aAAanzE,OAChC3B,EAAOqB,EAAMJ,SACb,kBAAE4zE,EAAkB,QAAEhxC,GAAa7jC,EAAKikC,YACxC0vC,EAAW,CACbG,MAAOT,GAAsBrzE,GAAQ,EACrC+zE,gBAAiBc,EAAoB,EAAA1yC,EAAK6yC,EAAa,GAE3D,IAAI97C,EACJ,IAAI,IAAIx3B,EAAI,EAAGA,EAAIszE,EAAYtzE,IAAI,CAC/BiyE,EAAS3kC,QAAUA,EAAQttC,GAC3BiyE,EAASpkD,KAAOktB,EAAW/6C,GAC3B,MAAM2jB,EAAOquD,GAAqBryE,EAAOK,EAAGiyE,GAC5CjpD,EAAMpoB,KAAK+iB,GACK,SAAZwe,IACAxe,EAAKoqC,QAAU2kB,GAAgB/uD,EAAM6T,GACjC7T,EAAKoqC,UACLv2B,EAAO7T,GAGnB,CACA,OAAOqF,CACX,CApF6B2qD,CAAqBh0E,EAAOo7C,EAAYzN,EACrE,CAgRYsmC,CAAmBnhE,MAEnBA,KAAKihE,eAAe,EAAG,EAAG,EAAG,EAErC,CACAA,eAAeG,EAAcC,EAAeC,EAAaC,GACrDvhE,KAAKowB,SAAW5gC,KAAKqpB,OAAOuoD,EAAeC,GAAiB,GAC5DrhE,KAAKqwB,SAAW7gC,KAAKqpB,OAAOyoD,EAAcC,GAAkB,GAC5DvhE,KAAK0/D,aAAelwE,KAAKL,IAAI6Q,KAAK0/D,YAAc,EAAGlwE,KAAKN,IAAIkyE,EAAcC,EAAeC,EAAaC,GAC1G,CACAhxC,cAAcnwB,GACV,MAAMohE,EAAkB,EAAAh1C,GAAOxsB,KAAK2gE,aAAanzE,QAAU,GACrD0/B,EAAaltB,KAAKlT,QAAQogC,YAAc,EAC9C,OAAO,QAAgB9sB,EAAQohE,GAAkB,IAAA50D,GAAUsgB,GAC/D,CACAyD,8BAA8BviB,GAC1B,IAAI,OAAcA,GACd,OAAOiV,IAEX,MAAMo+C,EAAgBzhE,KAAK0/D,aAAe1/D,KAAK9Q,IAAM8Q,KAAK7Q,KAC1D,OAAI6Q,KAAKlT,QAAQyuB,SACLvb,KAAK9Q,IAAMkf,GAASqzD,GAExBrzD,EAAQpO,KAAK7Q,KAAOsyE,CAChC,CACAC,8BAA8B5pE,GAC1B,IAAI,OAAcA,GACd,OAAOurB,IAEX,MAAMs+C,EAAiB7pE,GAAYkI,KAAK0/D,aAAe1/D,KAAK9Q,IAAM8Q,KAAK7Q,MACvE,OAAO6Q,KAAKlT,QAAQyuB,QAAUvb,KAAK9Q,IAAMyyE,EAAiB3hE,KAAK7Q,IAAMwyE,CACzE,CACAZ,qBAAqB3gE,GACjB,MAAM0vB,EAAc9vB,KAAK2gE,cAAgB,GACzC,GAAIvgE,GAAS,GAAKA,EAAQ0vB,EAAYtiC,OAAQ,CAC1C,MAAMo0E,EAAa9xC,EAAY1vB,GAC/B,OA7HZ,SAAiC2B,EAAQ3B,EAAOmkB,GAC5C,OAAO,OAAcxiB,EAAQ,CACzBwiB,QACAnkB,QACAlM,KAAM,cAEd,CAuHmB2tE,CAAwB7hE,KAAKoiB,aAAchiB,EAAOwhE,EAC7D,CACJ,CACA9B,iBAAiB1/D,EAAO0hE,EAAoBlC,EAAkB,GAC1D,MAAMn5D,EAAQzG,KAAKuwB,cAAcnwB,GAAS,EAAA0tB,EAAU8xC,EACpD,MAAO,CACHjzE,EAAG6C,KAAK69B,IAAI5mB,GAASq7D,EAAqB9hE,KAAKowB,QAC/CxjC,EAAG4C,KAAK+9B,IAAI9mB,GAASq7D,EAAqB9hE,KAAKqwB,QAC/C5pB,QAER,CACA8uB,yBAAyBn1B,EAAOgO,GAC5B,OAAOpO,KAAK8/D,iBAAiB1/D,EAAOJ,KAAK2wB,8BAA8BviB,GAC3E,CACA2zD,gBAAgB3hE,GACZ,OAAOJ,KAAKu1B,yBAAyBn1B,GAAS,EAAGJ,KAAKirC,eAC1D,CACA+2B,sBAAsB5hE,GAClB,MAAM,KAAEzS,EAAK,IAAEF,EAAI,MAAEG,EAAM,OAAEF,GAAYsS,KAAK4gE,iBAAiBxgE,GAC/D,MAAO,CACHzS,OACAF,MACAG,QACAF,SAER,CACH+gD,iBACO,MAAM,gBAAEp0C,EAAkBu1B,MAAM,SAAEC,IAAiB7vB,KAAKlT,QACxD,GAAIuN,EAAiB,CACjB,MAAMJ,EAAM+F,KAAK/F,IACjBA,EAAIC,OACJD,EAAIE,YACJomE,GAAevgE,KAAMA,KAAK2wB,8BAA8B3wB,KAAKo8D,WAAYvsC,EAAU7vB,KAAK2gE,aAAanzE,QACrGyM,EAAIunD,YACJvnD,EAAIG,UAAYC,EAChBJ,EAAIylB,OACJzlB,EAAIW,SACR,CACJ,CACH+zC,WACO,MAAM10C,EAAM+F,KAAK/F,IACXpO,EAAOmU,KAAKlT,SACZ,WAAE2iC,EAAW,KAAEG,EAAK,OAAEmF,GAAYlpC,EAClC+qE,EAAa52D,KAAK2gE,aAAanzE,OACrC,IAAID,EAAGkD,EAAQomC,EAef,GAdIhrC,EAAKikC,YAAYJ,SA3N7B,SAAyBxiC,EAAO0pE,GAC5B,MAAM,IAAE38D,EAAMnN,SAAS,YAAEgjC,IAAoB5iC,EAC7C,IAAI,IAAIK,EAAIqpE,EAAa,EAAGrpE,GAAK,EAAGA,IAAI,CACpC,MAAM2jB,EAAOhkB,EAAM0zE,iBAAiBrzE,GACpC,IAAK2jB,EAAKoqC,QACN,SAEJ,MAAM9O,EAAc1c,EAAYwU,WAAWp3C,EAAM6zE,qBAAqBxzE,IACtE2yE,GAAkBjmE,EAAKuyC,EAAat7B,GACpC,MAAM8vD,GAAS,QAAOx0B,EAAY3J,OAC5B,EAAEl2C,EAAE,EAAEC,EAAE,UAAEygD,GAAen8B,GAC/B,OAAWjX,EAAK/M,EAAMyzE,aAAapzE,GAAIZ,EAAGC,EAAIo0E,EAAOl+B,WAAa,EAAGk+B,EAAQ,CACzEnpD,MAAO20B,EAAY30B,MACnBw1B,UAAWA,EACXG,aAAc,UAEtB,CACJ,CA2MYy0B,CAAgBjiE,KAAM42D,GAEtBhnC,EAAKF,SACL1vB,KAAK8oB,MAAMxpB,SAAQ,CAACoX,EAAMtW,KACtB,GAAc,IAAVA,EAAa,CACb3P,EAASuP,KAAK2wB,8BAA8Bja,EAAKtI,OACjD,MAAMvP,EAAUmB,KAAKoiB,WAAWhiB,GAC1BosC,EAAc5c,EAAK0U,WAAWzlC,GAC9B4tC,EAAoB1X,EAAOuP,WAAWzlC,IArMhE,SAAwB3R,EAAOg1E,EAAcp3C,EAAQ8rC,EAAYprB,GAC7D,MAAMvxC,EAAM/M,EAAM+M,IACZ41B,EAAWqyC,EAAaryC,UACxB,MAAEhY,EAAM,UAAErd,GAAe0nE,GAC1BryC,IAAa+mC,IAAe/+C,IAAUrd,GAAaswB,EAAS,IAGjE7wB,EAAIC,OACJD,EAAIQ,YAAcod,EAClB5d,EAAIO,UAAYA,EAChBP,EAAI40C,YAAYrD,EAAWoB,MAC3B3yC,EAAI60C,eAAiBtD,EAAWsB,WAChC7yC,EAAIE,YACJomE,GAAerzE,EAAO49B,EAAQ+E,EAAU+mC,GACxC38D,EAAIunD,YACJvnD,EAAIg1C,SACJh1C,EAAIW,UACR,CAqLoBunE,CAAeniE,KAAMwsC,EAAa/7C,EAAQmmE,EAAYnqB,EAC1D,KAGJhd,EAAWC,QAAS,CAEpB,IADAz1B,EAAIC,OACA3M,EAAIqpE,EAAa,EAAGrpE,GAAK,EAAGA,IAAI,CAChC,MAAMi/C,EAAc/c,EAAW6U,WAAWtkC,KAAK+gE,qBAAqBxzE,KAC9D,MAAEsqB,EAAM,UAAErd,GAAegyC,EAC1BhyC,GAAcqd,IAGnB5d,EAAIO,UAAYA,EAChBP,EAAIQ,YAAcod,EAClB5d,EAAI40C,YAAYrC,EAAYG,YAC5B1yC,EAAI60C,eAAiBtC,EAAYK,iBACjCp8C,EAASuP,KAAK2wB,8BAA8B9kC,EAAKi9B,MAAMvN,QAAUvb,KAAK7Q,IAAM6Q,KAAK9Q,KACjF2nC,EAAW72B,KAAK8/D,iBAAiBvyE,EAAGkD,GACpCwJ,EAAIE,YACJF,EAAI80C,OAAO/uC,KAAKowB,QAASpwB,KAAKqwB,SAC9Bp2B,EAAI+0C,OAAOnY,EAASlqC,EAAGkqC,EAASjqC,GAChCqN,EAAIg1C,SACR,CACAh1C,EAAIW,SACR,CACJ,CACHu0C,aAAc,CACdE,aACO,MAAMp1C,EAAM+F,KAAK/F,IACXpO,EAAOmU,KAAKlT,QACZm4C,EAAWp5C,EAAKi9B,MACtB,IAAKmc,EAASvV,QACV,OAEJ,MAAMxC,EAAaltB,KAAKuwB,cAAc,GACtC,IAAI9/B,EAAQyC,EACZ+G,EAAIC,OACJD,EAAIwrD,UAAUzlD,KAAKowB,QAASpwB,KAAKqwB,SACjCp2B,EAAImoE,OAAOl1C,GACXjzB,EAAIozC,UAAY,SAChBpzC,EAAIuzC,aAAe,SACnBxtC,KAAK8oB,MAAMxpB,SAAQ,CAACoX,EAAMtW,KACtB,GAAc,IAAVA,IAAgBvU,EAAK0vB,QACrB,OAEJ,MAAMixB,EAAcvH,EAASX,WAAWtkC,KAAKoiB,WAAWhiB,IAClD8pC,GAAW,QAAOsC,EAAY3J,MAEpC,GADApyC,EAASuP,KAAK2wB,8BAA8B3wB,KAAK8oB,MAAM1oB,GAAOgO,OAC1Do+B,EAAY2B,kBAAmB,CAC/Bl0C,EAAI4oC,KAAOqH,EAASM,OACpBt3C,EAAQ+G,EAAIw1D,YAAY/4C,EAAK6N,OAAOrxB,MACpC+G,EAAIG,UAAYoyC,EAAY8B,cAC5B,MAAMzT,GAAU,OAAU2R,EAAY6B,iBACtCp0C,EAAIK,UAAUpH,EAAQ,EAAI2nC,EAAQltC,MAAO8C,EAASy5C,EAAS9uB,KAAO,EAAIyf,EAAQptC,IAAKyF,EAAQ2nC,EAAQ3nC,MAAOg3C,EAAS9uB,KAAOyf,EAAQ1nC,OACtI,EACA,OAAW8G,EAAKyc,EAAK6N,MAAO,GAAI9zB,EAAQy5C,EAAU,CAC9CryB,MAAO20B,EAAY30B,OACrB,IAEN5d,EAAIW,SACR,CACH20C,YAAa,EAGd,MAAM8yB,GAAY,CACdC,YAAa,CACTC,QAAQ,EACRnnD,KAAM,EACNmjD,MAAO,KAEXxtE,OAAQ,CACJwxE,QAAQ,EACRnnD,KAAM,IACNmjD,MAAO,IAEXvtE,OAAQ,CACJuxE,QAAQ,EACRnnD,KAAM,IACNmjD,MAAO,IAEXttE,KAAM,CACFsxE,QAAQ,EACRnnD,KAAM,KACNmjD,MAAO,IAEXrtE,IAAK,CACDqxE,QAAQ,EACRnnD,KAAM,MACNmjD,MAAO,IAEXptE,KAAM,CACFoxE,QAAQ,EACRnnD,KAAM,OACNmjD,MAAO,GAEXntE,MAAO,CACHmxE,QAAQ,EACRnnD,KAAM,OACNmjD,MAAO,IAEXltE,QAAS,CACLkxE,QAAQ,EACRnnD,KAAM,OACNmjD,MAAO,GAEXjtE,KAAM,CACFixE,QAAQ,EACRnnD,KAAM,SAGPonD,GAAyBn1E,OAAOC,KAAK+0E,IAC3C,SAASI,GAAO3/D,EAAGC,GAChB,OAAOD,EAAIC,CACf,CACC,SAASrS,GAAMxD,EAAOyY,GACnB,IAAI,OAAcA,GACd,OAAO,KAEX,MAAM+8D,EAAUx1E,EAAMy1E,UAChB,OAAEC,EAAO,MAAE/xE,EAAM,WAAEgyE,GAAgB31E,EAAM41E,WAC/C,IAAI10D,EAAQzI,EAOZ,MANsB,mBAAXi9D,IACPx0D,EAAQw0D,EAAOx0D,KAEd,OAAeA,KAChBA,EAA0B,iBAAXw0D,EAAsBF,EAAQhyE,MAAM0d,EAAQw0D,GAAUF,EAAQhyE,MAAM0d,IAEzE,OAAVA,EACO,MAEPvd,IACAud,EAAkB,SAAVvd,KAAqB,OAASgyE,KAA8B,IAAfA,EAAuEH,EAAQzsC,QAAQ7nB,EAAOvd,GAAvE6xE,EAAQzsC,QAAQ7nB,EAAO,UAAWy0D,KAE1Gz0D,EACZ,CACC,SAAS20D,GAA0BC,EAAS7zE,EAAKD,EAAK+zE,GACnD,MAAMrnD,EAAO4mD,GAAMh1E,OACnB,IAAI,IAAID,EAAIi1E,GAAM/1E,QAAQu2E,GAAUz1E,EAAIquB,EAAO,IAAKruB,EAAE,CAClD,MAAMolB,EAAW0vD,GAAUG,GAAMj1E,IAC3BqqB,EAASjF,EAAS4rD,MAAQ5rD,EAAS4rD,MAAQ56C,OAAOu/C,iBACxD,GAAIvwD,EAAS4vD,QAAU/yE,KAAKkyC,MAAMxyC,EAAMC,IAAQyoB,EAASjF,EAASyI,QAAU6nD,EACxE,OAAOT,GAAMj1E,EAErB,CACA,OAAOi1E,GAAM5mD,EAAO,EACxB,CAiBC,SAASunD,GAAQr6C,EAAOl3B,EAAMwxE,GAC3B,GAAKA,GAEE,GAAIA,EAAW51E,OAAQ,CAC1B,MAAM,GAAEkpC,EAAG,GAAEC,IAAQ,QAAQysC,EAAYxxE,GAEzCk3B,EADkBs6C,EAAW1sC,IAAO9kC,EAAOwxE,EAAW1sC,GAAM0sC,EAAWzsC,KACpD,CACvB,OALI7N,EAAMl3B,IAAQ,CAMtB,CAcC,SAASyxE,GAAoBn2E,EAAO2V,EAAQygE,GACzC,MAAMx6C,EAAQ,GACP0C,EAAM,CAAC,EACR5P,EAAO/Y,EAAOrV,OACpB,IAAID,EAAG6gB,EACP,IAAI7gB,EAAI,EAAGA,EAAIquB,IAAQruB,EACnB6gB,EAAQvL,EAAOtV,GACfi+B,EAAIpd,GAAS7gB,EACbu7B,EAAM36B,KAAK,CACPigB,QACAq4B,OAAO,IAGf,OAAgB,IAAT7qB,GAAe0nD,EA1BzB,SAAuBp2E,EAAO47B,EAAO0C,EAAK83C,GACvC,MAAMZ,EAAUx1E,EAAMy1E,SAChB/7B,GAAS87B,EAAQzsC,QAAQnN,EAAM,GAAG1a,MAAOk1D,GACzCx7D,EAAOghB,EAAMA,EAAMt7B,OAAS,GAAG4gB,MACrC,IAAIq4B,EAAOrmC,EACX,IAAIqmC,EAAQG,EAAOH,GAAS3+B,EAAM2+B,GAASi8B,EAAQlnE,IAAIirC,EAAO,EAAG68B,GAC7DljE,EAAQorB,EAAIib,GACRrmC,GAAS,IACT0oB,EAAM1oB,GAAOqmC,OAAQ,GAG7B,OAAO3d,CACX,CAc8Cy6C,CAAcr2E,EAAO47B,EAAO0C,EAAK83C,GAAzCx6C,CACtC,CACA,MAAM06C,WAAkBtgC,GACpB7kB,UAAY,OACfA,gBAAkB,CAClBumC,OAAQ,OACDzuB,SAAU,CAAC,EACXvkC,KAAM,CACFgxE,QAAQ,EACRxF,MAAM,EACNvsE,OAAO,EACPgyE,YAAY,EACZG,QAAS,cACTS,eAAgB,CAAC,GAErB36C,MAAO,CACdzoB,OAAQ,OACG8E,UAAU,EACVshC,MAAO,CACH36C,SAAS,KAIxBoV,YAAYmH,GACL0jB,MAAM1jB,GACLrI,KAAKsoB,OAAS,CACXtU,KAAM,GACN6O,OAAQ,GACR5X,IAAK,IAERjL,KAAK0jE,MAAQ,MACb1jE,KAAK2jE,gBAAan3E,EACnBwT,KAAK4jE,SAAW,CAAC,EACjB5jE,KAAK6jE,aAAc,EACnB7jE,KAAK8iE,gBAAat2E,CACtB,CACAgZ,KAAKpV,EAAWvE,EAAO,CAAC,GACpB,MAAM+F,EAAOxB,EAAUwB,OAASxB,EAAUwB,KAAO,CAAC,GAC3C8wE,EAAU1iE,KAAK2iE,SAAW,IAAIxsC,EAAe/lC,EAAU+lC,SAASxgB,MACvE+sD,EAAQl9D,KAAK3Z,IACb,QAAQ+F,EAAK6xE,eAAgBf,EAAQ5sC,WACrC91B,KAAK8iE,WAAa,CACdF,OAAQhxE,EAAKgxE,OACb/xE,MAAOe,EAAKf,MACZgyE,WAAYjxE,EAAKixE,YAErB92C,MAAMvmB,KAAKpV,GACX4P,KAAK6jE,YAAch4E,EAAKi4E,UAC5B,CACHpzE,MAAM20B,EAAKjlB,GACJ,YAAY5T,IAAR64B,EACO,KAEJ30B,GAAMsP,KAAMqlB,EACvB,CACA+W,eACIrQ,MAAMqQ,eACNp8B,KAAKsoB,OAAS,CACVtU,KAAM,GACN6O,OAAQ,GACR5X,IAAK,GAEb,CACAs6B,sBACI,MAAMz4C,EAAUkT,KAAKlT,QACf41E,EAAU1iE,KAAK2iE,SACfvF,EAAOtwE,EAAQ8E,KAAKwrE,MAAQ,MAClC,IAAI,IAAEjuE,EAAI,IAAED,EAAI,WAAE80B,EAAW,WAAEC,GAAgBjkB,KAAKkkB,gBAC3D,SAAS6/C,EAAanf,GACN5gC,GAAepzB,MAAMg0D,EAAOz1D,OAC7BA,EAAMK,KAAKL,IAAIA,EAAKy1D,EAAOz1D,MAE1B80B,GAAerzB,MAAMg0D,EAAO11D,OAC7BA,EAAMM,KAAKN,IAAIA,EAAK01D,EAAO11D,KAEnC,CACK80B,GAAeC,IAChB8/C,EAAa/jE,KAAKgkE,mBACK,UAAnBl3E,EAAQ83D,QAA+C,WAAzB93D,EAAQg8B,MAAMzoB,QAC5C0jE,EAAa/jE,KAAKsjB,WAAU,KAGpCn0B,GAAM,OAAeA,KAASyB,MAAMzB,GAAOA,GAAOuzE,EAAQzsC,QAAQt3B,KAAKD,MAAO0+D,GAC9EluE,GAAM,OAAeA,KAAS0B,MAAM1B,GAAOA,GAAOwzE,EAAQxsC,MAAMv3B,KAAKD,MAAO0+D,GAAQ,EACpFp9D,KAAK7Q,IAAMK,KAAKL,IAAIA,EAAKD,EAAM,GAC/B8Q,KAAK9Q,IAAMM,KAAKN,IAAIC,EAAM,EAAGD,EACjC,CACH80E,kBACO,MAAMt8C,EAAM1nB,KAAKikE,qBACjB,IAAI90E,EAAMw0B,OAAOC,kBACb10B,EAAMy0B,OAAOE,kBAKjB,OAJI6D,EAAIl6B,SACJ2B,EAAMu4B,EAAI,GACVx4B,EAAMw4B,EAAIA,EAAIl6B,OAAS,IAEpB,CACH2B,MACAD,MAER,CACHw2C,aACO,MAAM54C,EAAUkT,KAAKlT,QACfo3E,EAAWp3E,EAAQ8E,KACnBqzC,EAAWn4C,EAAQg8B,MACnBs6C,EAAiC,WAApBn+B,EAAS5kC,OAAsBL,KAAKikE,qBAAuBjkE,KAAKmkE,YAC5D,UAAnBr3E,EAAQ83D,QAAsBwe,EAAW51E,SACzCwS,KAAK7Q,IAAM6Q,KAAKgkC,UAAYo/B,EAAW,GACvCpjE,KAAK9Q,IAAM8Q,KAAK+jC,UAAYq/B,EAAWA,EAAW51E,OAAS,IAE/D,MAAM2B,EAAM6Q,KAAK7Q,IACXD,EAAM8Q,KAAK9Q,IACX45B,GAAQ,QAAes6C,EAAYj0E,EAAKD,GAO9C,OANA8Q,KAAK0jE,MAAQQ,EAAS9G,OAASn4B,EAASgB,SAAW88B,GAA0BmB,EAASlB,QAAShjE,KAAK7Q,IAAK6Q,KAAK9Q,IAAK8Q,KAAKokE,kBAAkBj1E,IAnKjJ,SAAoCjC,EAAO86C,EAAUg7B,EAAS7zE,EAAKD,GAChE,IAAI,IAAI3B,EAAIi1E,GAAMh1E,OAAS,EAAGD,GAAKi1E,GAAM/1E,QAAQu2E,GAAUz1E,IAAI,CAC3D,MAAM6vE,EAAOoF,GAAMj1E,GACnB,GAAI80E,GAAUjF,GAAMmF,QAAUr1E,EAAMy1E,SAAS3sC,KAAK9mC,EAAKC,EAAKiuE,IAASp1B,EAAW,EAC5E,OAAOo1B,CAEf,CACA,OAAOoF,GAAMQ,EAAUR,GAAM/1E,QAAQu2E,GAAW,EACpD,CA2J0JqB,CAA2BrkE,KAAM8oB,EAAMt7B,OAAQ02E,EAASlB,QAAShjE,KAAK7Q,IAAK6Q,KAAK9Q,MAClO8Q,KAAK2jE,WAAc1+B,EAASwB,MAAM36C,SAA0B,SAAfkU,KAAK0jE,MA3JzD,SAA4BtG,GACzB,IAAI,IAAI7vE,EAAIi1E,GAAM/1E,QAAQ2wE,GAAQ,EAAGxhD,EAAO4mD,GAAMh1E,OAAQD,EAAIquB,IAAQruB,EAClE,GAAI80E,GAAUG,GAAMj1E,IAAIg1E,OACpB,OAAOC,GAAMj1E,EAGzB,CAqJyF+2E,CAAmBtkE,KAAK0jE,YAApCl3E,EACrEwT,KAAKukE,YAAYnB,GACbt2E,EAAQyuB,SACRuN,EAAMvN,UAEH8nD,GAAoBrjE,KAAM8oB,EAAO9oB,KAAK2jE,WACjD,CACAx8B,gBACQnnC,KAAKlT,QAAQ03E,qBACbxkE,KAAKukE,YAAYvkE,KAAK8oB,MAAM0C,KAAK9U,IAAQA,EAAKtI,QAEtD,CACHm2D,YAAYnB,EAAa,IAClB,IAEIx8B,EAAO9+B,EAFP9M,EAAQ,EACRkM,EAAM,EAENlH,KAAKlT,QAAQ2D,QAAU2yE,EAAW51E,SAClCo5C,EAAQ5mC,KAAKykE,mBAAmBrB,EAAW,IAEvCpoE,EADsB,IAAtBooE,EAAW51E,OACH,EAAIo5C,GAEH5mC,KAAKykE,mBAAmBrB,EAAW,IAAMx8B,GAAS,EAE/D9+B,EAAO9H,KAAKykE,mBAAmBrB,EAAWA,EAAW51E,OAAS,IAE1D0Z,EADsB,IAAtBk8D,EAAW51E,OACLsa,GAECA,EAAO9H,KAAKykE,mBAAmBrB,EAAWA,EAAW51E,OAAS,KAAO,GAGpF,MAAMsC,EAAQszE,EAAW51E,OAAS,EAAI,GAAM,IAC5CwN,GAAQ,OAAYA,EAAO,EAAGlL,GAC9BoX,GAAM,OAAYA,EAAK,EAAGpX,GAC1BkQ,KAAK4jE,SAAW,CACZ5oE,QACAkM,MACA0Q,OAAQ,GAAK5c,EAAQ,EAAIkM,GAEjC,CACHi9D,YACO,MAAMzB,EAAU1iE,KAAK2iE,SACfxzE,EAAM6Q,KAAK7Q,IACXD,EAAM8Q,KAAK9Q,IACXpC,EAAUkT,KAAKlT,QACfo3E,EAAWp3E,EAAQ8E,KACnB8yE,EAAQR,EAAS9G,MAAQ2F,GAA0BmB,EAASlB,QAAS7zE,EAAKD,EAAK8Q,KAAKokE,kBAAkBj1E,IACtGkE,GAAW,IAAApD,GAAenD,EAAQg8B,MAAMz1B,SAAU,GAClDsxE,EAAoB,SAAVD,GAAmBR,EAASrB,WACtC+B,GAAa,OAASD,KAAwB,IAAZA,EAClC77C,EAAQ,CAAC,EACf,IACIl3B,EAAM+e,EADNi2B,EAAQz3C,EAMZ,GAJIy1E,IACAh+B,GAAS87B,EAAQzsC,QAAQ2Q,EAAO,UAAW+9B,IAE/C/9B,GAAS87B,EAAQzsC,QAAQ2Q,EAAOg+B,EAAa,MAAQF,GACjDhC,EAAQ1sC,KAAK9mC,EAAKC,EAAKu1E,GAAS,IAASrxE,EACzC,MAAM,IAAIsM,MAAMxQ,EAAM,QAAUD,EAAM,uCAAyCmE,EAAW,IAAMqxE,GAEpG,MAAMtB,EAAsC,SAAzBt2E,EAAQg8B,MAAMzoB,QAAqBL,KAAK6kE,oBAC3D,IAAIjzE,EAAOg1C,EAAOj2B,EAAQ,EAAG/e,EAAO1C,EAAK0C,GAAQ8wE,EAAQlnE,IAAI5J,EAAMyB,EAAUqxE,GAAQ/zD,IACjFwyD,GAAQr6C,EAAOl3B,EAAMwxE,GAKzB,OAHIxxE,IAAS1C,GAA0B,UAAnBpC,EAAQ83D,QAAgC,IAAVj0C,GAC9CwyD,GAAQr6C,EAAOl3B,EAAMwxE,GAElB/1E,OAAOC,KAAKw7B,GAAOnmB,MAAK,CAACG,EAAGC,IAAID,EAAIC,IAAGyoB,KAAK7+B,IAAKA,GAC5D,CACH63B,iBAAiBpW,GACV,MAAMs0D,EAAU1iE,KAAK2iE,SACfuB,EAAWlkE,KAAKlT,QAAQ8E,KAC9B,OAAIsyE,EAASY,cACFpC,EAAQ3sC,OAAO3nB,EAAO81D,EAASY,eAEnCpC,EAAQ3sC,OAAO3nB,EAAO81D,EAAST,eAAesB,SACzD,CACHhvC,OAAO3nB,EAAO2nB,GACP,MACMD,EADU91B,KAAKlT,QACG8E,KAAK6xE,eACvBrG,EAAOp9D,KAAK0jE,MACZsB,EAAMjvC,GAAUD,EAAQsnC,GAC9B,OAAOp9D,KAAK2iE,SAAS5sC,OAAO3nB,EAAO42D,EACvC,CACHC,oBAAoBrzE,EAAMwO,EAAO0oB,EAAOiN,GACjC,MAAMjpC,EAAUkT,KAAKlT,QACfo4E,EAAYp4E,EAAQg8B,MAAM3jB,SAChC,GAAI+/D,EACA,OAAO,OAASA,EAAW,CACvBtzE,EACAwO,EACA0oB,GACD9oB,MAEP,MAAM81B,EAAUhpC,EAAQ8E,KAAK6xE,eACvBrG,EAAOp9D,KAAK0jE,MACZJ,EAAYtjE,KAAK2jE,WACjBwB,EAAc/H,GAAQtnC,EAAQsnC,GAC9BgI,EAAc9B,GAAaxtC,EAAQwtC,GACnC5sD,EAAOoS,EAAM1oB,GACbqmC,EAAQ68B,GAAa8B,GAAe1uD,GAAQA,EAAK+vB,MACvD,OAAOzmC,KAAK2iE,SAAS5sC,OAAOnkC,EAAMmkC,IAAW0Q,EAAQ2+B,EAAcD,GACvE,CACHr9B,mBAAmBhf,GACZ,IAAIv7B,EAAGquB,EAAMlF,EACb,IAAInpB,EAAI,EAAGquB,EAAOkN,EAAMt7B,OAAQD,EAAIquB,IAAQruB,EACxCmpB,EAAOoS,EAAMv7B,GACbmpB,EAAK6N,MAAQvkB,KAAKilE,oBAAoBvuD,EAAKtI,MAAO7gB,EAAGu7B,EAE7D,CACH27C,mBAAmBr2D,GACZ,OAAiB,OAAVA,EAAiBiV,KAAOjV,EAAQpO,KAAK7Q,MAAQ6Q,KAAK9Q,IAAM8Q,KAAK7Q,IACxE,CACH2C,iBAAiBsc,GACV,MAAMi3D,EAAUrlE,KAAK4jE,SACfjrC,EAAM34B,KAAKykE,mBAAmBr2D,GACpC,OAAOpO,KAAK8yB,oBAAoBuyC,EAAQrqE,MAAQ29B,GAAO0sC,EAAQztD,OACnE,CACHnoB,iBAAiBq7C,GACV,MAAMu6B,EAAUrlE,KAAK4jE,SACfjrC,EAAM34B,KAAKgrC,mBAAmBF,GAASu6B,EAAQztD,OAASytD,EAAQn+D,IACtE,OAAOlH,KAAK7Q,IAAMwpC,GAAO34B,KAAK9Q,IAAM8Q,KAAK7Q,IAC7C,CACHm2E,cAAc/gD,GACP,MAAMghD,EAAYvlE,KAAKlT,QAAQg8B,MACzB08C,EAAiBxlE,KAAK/F,IAAIw1D,YAAYlrC,GAAOrxB,MAC7CuT,GAAQ,IAAAmG,GAAU5M,KAAK1Q,eAAiBi2E,EAAUr9B,YAAcq9B,EAAUt9B,aAC1Ew9B,EAAcj2E,KAAK69B,IAAI5mB,GACvBi/D,EAAcl2E,KAAK+9B,IAAI9mB,GACvBk/D,EAAe3lE,KAAKuqC,wBAAwB,GAAGnvB,KACrD,MAAO,CACHwe,EAAG4rC,EAAiBC,EAAcE,EAAeD,EACjD5rC,EAAG0rC,EAAiBE,EAAcC,EAAeF,EAEzD,CACHrB,kBAAkBwB,GACX,MAAM1B,EAAWlkE,KAAKlT,QAAQ8E,KACxB6xE,EAAiBS,EAAST,eAC1B1tC,EAAS0tC,EAAeS,EAAS9G,OAASqG,EAAenB,YACzDuD,EAAe7lE,KAAKilE,oBAAoBW,EAAa,EAAGvC,GAAoBrjE,KAAM,CACpF4lE,GACD5lE,KAAK2jE,YAAa5tC,GACf3a,EAAOpb,KAAKslE,cAAcO,GAC1B5C,EAAWzzE,KAAKqpB,MAAM7Y,KAAK1Q,eAAiB0Q,KAAK9M,MAAQkoB,EAAKwe,EAAI55B,KAAK7M,OAASioB,EAAK0e,GAAK,EAChG,OAAOmpC,EAAW,EAAIA,EAAW,CACrC,CACH4B,oBACO,IACIt3E,EAAGquB,EADHwnD,EAAapjE,KAAKsoB,OAAOtU,MAAQ,GAErC,GAAIovD,EAAW51E,OACX,OAAO41E,EAEX,MAAM3+B,EAAQzkC,KAAK6c,0BACnB,GAAI7c,KAAK6jE,aAAep/B,EAAMj3C,OAC1B,OAAOwS,KAAKsoB,OAAOtU,KAAOywB,EAAM,GAAG1nB,WAAWqH,mBAAmBpkB,MAErE,IAAIzS,EAAI,EAAGquB,EAAO6oB,EAAMj3C,OAAQD,EAAIquB,IAAQruB,EACxC61E,EAAaA,EAAW/3D,OAAOo5B,EAAMl3C,GAAGwvB,WAAWqH,mBAAmBpkB,OAE1E,OAAOA,KAAKsoB,OAAOtU,KAAOhU,KAAK8lE,UAAU1C,EAC7C,CACHa,qBACO,MAAMb,EAAapjE,KAAKsoB,OAAOzF,QAAU,GACzC,IAAIt1B,EAAGquB,EACP,GAAIwnD,EAAW51E,OACX,OAAO41E,EAEX,MAAMvgD,EAAS7iB,KAAK5N,YACpB,IAAI7E,EAAI,EAAGquB,EAAOiH,EAAOr1B,OAAQD,EAAIquB,IAAQruB,EACzC61E,EAAWj1E,KAAKuC,GAAMsP,KAAM6iB,EAAOt1B,KAEvC,OAAOyS,KAAKsoB,OAAOzF,OAAS7iB,KAAK6jE,YAAcT,EAAapjE,KAAK8lE,UAAU1C,EAC/E,CACH0C,UAAUjjE,GACH,OAAO,IAAA4lB,GAAa5lB,EAAOF,KAAK8/D,IACpC,EAGJ,SAAS7e,GAAYmiB,EAAO1kE,EAAKka,GAC7B,IAEIyqD,EAAYC,EAAYC,EAAYC,EAFpCzvC,EAAK,EACLC,EAAKovC,EAAMv4E,OAAS,EAEpB+tB,GACIla,GAAO0kE,EAAMrvC,GAAIiC,KAAOt3B,GAAO0kE,EAAMpvC,GAAIgC,OACtCjC,KAAKC,OAAQ,OAAaovC,EAAO,MAAO1kE,MAE5Cs3B,IAAKqtC,EAAap0E,KAAMs0E,GAAgBH,EAAMrvC,MAC9CiC,IAAKstC,EAAar0E,KAAMu0E,GAAgBJ,EAAMpvC,MAE7Ct1B,GAAO0kE,EAAMrvC,GAAI9kC,MAAQyP,GAAO0kE,EAAMpvC,GAAI/kC,QACvC8kC,KAAKC,OAAQ,OAAaovC,EAAO,OAAQ1kE,MAE7CzP,KAAMo0E,EAAartC,IAAKutC,GAAgBH,EAAMrvC,MAC9C9kC,KAAMq0E,EAAattC,IAAKwtC,GAAgBJ,EAAMpvC,KAErD,MAAMyvC,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAe7kE,EAAM2kE,GAAcI,EAAOF,CACvF,CA8EA,IAAI/4E,GAAsBE,OAAO44B,OAAO,CACxC4K,UAAW,KACXw1C,cAt/CA,cAA4BnjC,GACxB7kB,UAAY,WACfA,gBAAkB,CACXyK,MAAO,CACH3jB,SAAU22D,KAGlB56D,YAAYoX,GACRyT,MAAMzT,GACLtY,KAAKm8D,iBAAc3vE,EACpBwT,KAAKq8D,YAAc,EACnBr8D,KAAKsmE,aAAe,EACxB,CACA9gE,KAAKjJ,GACD,MAAMgqE,EAAQvmE,KAAKsmE,aACnB,GAAIC,EAAM/4E,OAAQ,CACd,MAAMq1B,EAAS7iB,KAAK5N,YACpB,IAAK,MAAM,MAAEgO,EAAM,MAAEmkB,KAAYgiD,EACzB1jD,EAAOziB,KAAWmkB,GAClB1B,EAAOrY,OAAOpK,EAAO,GAG7BJ,KAAKsmE,aAAe,EACxB,CACAv6C,MAAMvmB,KAAKjJ,EACf,CACA7L,MAAM20B,EAAKjlB,GACP,IAAI,OAAcilB,GACd,OAAO,KAEX,MAAMxC,EAAS7iB,KAAK5N,YAEpB,MAxCW,EAACgO,EAAOlR,IAAgB,OAAVkR,EAAiB,MAAO,OAAY5Q,KAAKqB,MAAMuP,GAAQ,EAAGlR,GAwC5EozC,CADPliC,EAAQk8D,SAASl8D,IAAUyiB,EAAOziB,KAAWilB,EAAMjlB,EA/C3D,SAAwByiB,EAAQwC,EAAKjlB,EAAOomE,GACxC,MAAM5/B,EAAQ/jB,EAAOp2B,QAAQ44B,GAC7B,OAAe,IAAXuhB,EAdY,EAAC/jB,EAAQwC,EAAKjlB,EAAOomE,KAClB,iBAARnhD,GACPjlB,EAAQyiB,EAAO10B,KAAKk3B,GAAO,EAC3BmhD,EAAY5a,QAAQ,CAChBxrD,QACAmkB,MAAOc,KAEJz0B,MAAMy0B,KACbjlB,EAAQ,MAELA,GAKIqmE,CAAY5jD,EAAQwC,EAAKjlB,EAAOomE,GAGpC5/B,IADM/jB,EAAO6jD,YAAYrhD,GACRjlB,EAAQwmC,CACpC,CAwCmE+/B,CAAe9jD,EAAQwC,GAAK,IAAAp1B,GAAemQ,EAAOilB,GAAMrlB,KAAKsmE,cAC/FzjD,EAAOr1B,OAAS,EAC7C,CACA+3C,sBACI,MAAM,WAAEvhB,EAAW,WAAEC,GAAgBjkB,KAAKkkB,gBAC1C,IAAI,IAAE/0B,EAAI,IAAED,GAAS8Q,KAAKsjB,WAAU,GACR,UAAxBtjB,KAAKlT,QAAQ83D,SACR5gC,IACD70B,EAAM,GAEL80B,IACD/0B,EAAM8Q,KAAK5N,YAAY5E,OAAS,IAGxCwS,KAAK7Q,IAAMA,EACX6Q,KAAK9Q,IAAMA,CACf,CACAw2C,aACI,MAAMv2C,EAAM6Q,KAAK7Q,IACXD,EAAM8Q,KAAK9Q,IACXuB,EAASuP,KAAKlT,QAAQ2D,OACtBq4B,EAAQ,GACd,IAAIjG,EAAS7iB,KAAK5N,YAClBywB,EAAiB,IAAR1zB,GAAaD,IAAQ2zB,EAAOr1B,OAAS,EAAIq1B,EAASA,EAAOpgB,MAAMtT,EAAKD,EAAM,GACnF8Q,KAAKq8D,YAAc7sE,KAAKN,IAAI2zB,EAAOr1B,QAAUiD,EAAS,EAAI,GAAI,GAC9DuP,KAAKm8D,YAAcn8D,KAAK7Q,KAAOsB,EAAS,GAAM,GAC9C,IAAI,IAAI2d,EAAQjf,EAAKif,GAASlf,EAAKkf,IAC/B0a,EAAM36B,KAAK,CACPigB,UAGR,OAAO0a,CACX,CACAtE,iBAAiBpW,GACb,OAAO0tD,GAAkB1gE,KAAK4E,KAAMoO,EACxC,CACH8L,YACO6R,MAAM7R,YACDla,KAAK1Q,iBACN0Q,KAAKw2B,gBAAkBx2B,KAAKw2B,eAEpC,CACA1kC,iBAAiBsc,GAIb,MAHqB,iBAAVA,IACPA,EAAQpO,KAAKtP,MAAM0d,IAEN,OAAVA,EAAiBiV,IAAMrjB,KAAK8yB,oBAAoB1kB,EAAQpO,KAAKm8D,aAAen8D,KAAKq8D,YAC5F,CACAtzC,gBAAgB3oB,GACZ,MAAM0oB,EAAQ9oB,KAAK8oB,MACnB,OAAI1oB,EAAQ,GAAKA,EAAQ0oB,EAAMt7B,OAAS,EAC7B,KAEJwS,KAAKlO,iBAAiBg3B,EAAM1oB,GAAOgO,MAC9C,CACA3e,iBAAiBq7C,GACb,OAAOt7C,KAAKqB,MAAMmP,KAAKm8D,YAAcn8D,KAAKgrC,mBAAmBF,GAAS9qC,KAAKq8D,YAC/E,CACA9qC,eACI,OAAOvxB,KAAKtS,MAChB,GA45CJqwE,YAAaA,GACbW,iBAAkBA,GAClB8B,kBAAmBA,GACnBgD,UAAWA,GACXoD,gBApFA,cAA8BpD,GAC1BnlD,UAAY,aACfA,gBAAkBmlD,GAAUzoE,SAC5BmG,YAAYmH,GACL0jB,MAAM1jB,GACLrI,KAAK6mE,OAAS,GACd7mE,KAAK8mE,aAAUt6E,EACfwT,KAAK+mE,iBAAcv6E,CACxB,CACH+3E,cACO,MAAMnB,EAAapjE,KAAKgnE,yBAClBjB,EAAQ/lE,KAAK6mE,OAAS7mE,KAAKinE,iBAAiB7D,GAClDpjE,KAAK8mE,QAAUljB,GAAYmiB,EAAO/lE,KAAK7Q,KACvC6Q,KAAK+mE,YAAcnjB,GAAYmiB,EAAO/lE,KAAK9Q,KAAO8Q,KAAK8mE,QACvD/6C,MAAMw4C,YAAYnB,EACtB,CACH6D,iBAAiB7D,GACV,MAAM,IAAEj0E,EAAI,IAAED,GAAS8Q,KACjBuW,EAAQ,GACRwvD,EAAQ,GACd,IAAIx4E,EAAGquB,EAAM4G,EAAMmG,EAAMwK,EACzB,IAAI5lC,EAAI,EAAGquB,EAAOwnD,EAAW51E,OAAQD,EAAIquB,IAAQruB,EAC7Co7B,EAAOy6C,EAAW71E,GACdo7B,GAAQx5B,GAAOw5B,GAAQz5B,GACvBqnB,EAAMpoB,KAAKw6B,GAGnB,GAAIpS,EAAM/oB,OAAS,EACf,MAAO,CACH,CACIoE,KAAMzC,EACNwpC,IAAK,GAET,CACI/mC,KAAM1C,EACNypC,IAAK,IAIjB,IAAIprC,EAAI,EAAGquB,EAAOrF,EAAM/oB,OAAQD,EAAIquB,IAAQruB,EACxC4lC,EAAO5c,EAAMhpB,EAAI,GACjBi1B,EAAOjM,EAAMhpB,EAAI,GACjBo7B,EAAOpS,EAAMhpB,GACTiC,KAAKqB,OAAOsiC,EAAO3Q,GAAQ,KAAOmG,GAClCo9C,EAAM53E,KAAK,CACPyD,KAAM+2B,EACNgQ,IAAKprC,GAAKquB,EAAO,KAI7B,OAAOmqD,CACX,CACHiB,yBACO,IAAI5D,EAAapjE,KAAKsoB,OAAOrd,KAAO,GACpC,GAAIm4D,EAAW51E,OACX,OAAO41E,EAEX,MAAMpvD,EAAOhU,KAAK6kE,oBACZtgD,EAAQvkB,KAAKikE,qBAOnB,OALIb,EADApvD,EAAKxmB,QAAU+2B,EAAM/2B,OACRwS,KAAK8lE,UAAU9xD,EAAK3I,OAAOkZ,IAE3BvQ,EAAKxmB,OAASwmB,EAAOuQ,EAEtC6+C,EAAapjE,KAAKsoB,OAAOrd,IAAMm4D,EACxBA,CACX,CACHqB,mBAAmBr2D,GACZ,OAAQw1C,GAAY5jD,KAAK6mE,OAAQz4D,GAASpO,KAAK8mE,SAAW9mE,KAAK+mE,WACnE,CACHt3E,iBAAiBq7C,GACV,MAAMu6B,EAAUrlE,KAAK4jE,SACf74B,EAAU/qC,KAAKgrC,mBAAmBF,GAASu6B,EAAQztD,OAASytD,EAAQn+D,IAC1E,OAAO08C,GAAY5jD,KAAK6mE,OAAQ97B,EAAU/qC,KAAK+mE,YAAc/mE,KAAK8mE,SAAS,EAC/E,KAaJ,MAAMI,GAAgB,CAClBt2C,EACA,GACAxF,GACAj+B,ICzpWJsrD,GAAMnI,YAAY42B,IAGlB,wCCCA,SAASr2E,EAAMZ,GACb,OAAOA,EAAI,GAAM,CACnB,w+BACA,MAAMk3E,EAAM,CAACl3E,EAAGwxB,EAAGqY,IAAMtqC,KAAKN,IAAIM,KAAKL,IAAIc,EAAG6pC,GAAIrY,GAClD,SAAS2lD,EAAIn3E,GACX,OAAOk3E,EAAIt2E,EAAU,KAAJZ,GAAW,EAAG,IACjC,CAIA,SAASo3E,EAAIp3E,GACX,OAAOk3E,EAAIt2E,EAAU,IAAJZ,GAAU,EAAG,IAChC,CACA,SAASq3E,EAAIr3E,GACX,OAAOk3E,EAAIt2E,EAAMZ,EAAI,MAAQ,IAAK,EAAG,EACvC,CACA,SAASs3E,EAAIt3E,GACX,OAAOk3E,EAAIt2E,EAAU,IAAJZ,GAAU,EAAG,IAChC,CAEA,MAAMu3E,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIhlE,EAAG,GAAIC,EAAG,GAAIgV,EAAG,GAAIqC,EAAG,GAAInhB,EAAG,GAAI8uE,EAAG,IACrJC,EAAM,IAAI,oBACVC,EAAKllE,GAAKilE,EAAQ,GAAJjlE,GACdmlE,EAAKnlE,GAAKilE,GAAS,IAAJjlE,IAAa,GAAKilE,EAAQ,GAAJjlE,GACrColE,EAAKplE,IAAW,IAAJA,IAAa,IAAY,GAAJA,GAgCvC,MAAMqlE,EAAS,+GACf,SAASC,EAASvuC,EAAG3kC,EAAGssB,GACtB,MAAM3e,EAAI3N,EAAI3F,KAAKL,IAAIsyB,EAAG,EAAIA,GACxBsmD,EAAI,CAACO,EAAG9gB,GAAK8gB,EAAIxuC,EAAI,IAAM,KAAOrY,EAAI3e,EAAItT,KAAKN,IAAIM,KAAKL,IAAIq4D,EAAI,EAAG,EAAIA,EAAG,IAAK,GACrF,MAAO,CAACugB,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASQ,EAASzuC,EAAG3kC,EAAGlF,GACtB,MAAM83E,EAAI,CAACO,EAAG9gB,GAAK8gB,EAAIxuC,EAAI,IAAM,IAAM7pC,EAAIA,EAAIkF,EAAI3F,KAAKN,IAAIM,KAAKL,IAAIq4D,EAAG,EAAIA,EAAG,GAAI,GACnF,MAAO,CAACugB,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASS,EAAS1uC,EAAGF,EAAG72B,GACtB,MAAM0lE,EAAMJ,EAASvuC,EAAG,EAAG,IAC3B,IAAIvsC,EAMJ,IALIqsC,EAAI72B,EAAI,IACVxV,EAAI,GAAKqsC,EAAI72B,GACb62B,GAAKrsC,EACLwV,GAAKxV,GAEFA,EAAI,EAAGA,EAAI,EAAGA,IACjBk7E,EAAIl7E,IAAM,EAAIqsC,EAAI72B,EAClB0lE,EAAIl7E,IAAMqsC,EAEZ,OAAO6uC,CACT,CAUA,SAASC,EAAQz4E,GACf,MACMkmB,EAAIlmB,EAAEkmB,EADE,IAERwyD,EAAI14E,EAAE04E,EAFE,IAGR5lE,EAAI9S,EAAE8S,EAHE,IAIR7T,EAAMM,KAAKN,IAAIinB,EAAGwyD,EAAG5lE,GACrB5T,EAAMK,KAAKL,IAAIgnB,EAAGwyD,EAAG5lE,GACrB0e,GAAKvyB,EAAMC,GAAO,EACxB,IAAI2qC,EAAG3kC,EAAGilB,EAOV,OANIlrB,IAAQC,IACVirB,EAAIlrB,EAAMC,EACVgG,EAAIssB,EAAI,GAAMrH,GAAK,EAAIlrB,EAAMC,GAAOirB,GAAKlrB,EAAMC,GAC/C2qC,EArBJ,SAAkB3jB,EAAGwyD,EAAG5lE,EAAGqX,EAAGlrB,GAC5B,OAAIinB,IAAMjnB,GACCy5E,EAAI5lE,GAAKqX,GAAMuuD,EAAI5lE,EAAI,EAAI,GAElC4lE,IAAMz5E,GACA6T,EAAIoT,GAAKiE,EAAI,GAEfjE,EAAIwyD,GAAKvuD,EAAI,CACvB,CAaQwuD,CAASzyD,EAAGwyD,EAAG5lE,EAAGqX,EAAGlrB,GACzB4qC,EAAQ,GAAJA,EAAS,IAER,CAAK,EAAJA,EAAO3kC,GAAK,EAAGssB,EACzB,CACA,SAASonD,EAAMd,EAAGjlE,EAAGC,EAAGgV,GACtB,OACE9Y,MAAMC,QAAQ4D,GACVilE,EAAEjlE,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChBilE,EAAEjlE,EAAGC,EAAGgV,IACZyT,IAAI67C,EACR,CACA,SAASyB,EAAQhvC,EAAG3kC,EAAGssB,GACrB,OAAOonD,EAAMR,EAAUvuC,EAAG3kC,EAAGssB,EAC/B,CAOA,SAASsnD,EAAIjvC,GACX,OAAQA,EAAI,IAAM,KAAO,GAC3B,CAiDA,MAAMtO,EAAM,CACV7+B,EAAG,OACHq8E,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACH5B,EAAG,KACHj7C,EAAG,KACH88C,EAAG,KACH5B,EAAG,KACHC,EAAG,QACHC,EAAG,QACH2B,EAAG,KACHC,EAAG,WACH3B,EAAG,KACH75C,EAAG,KACHy7C,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACH9B,EAAG,KACH+B,EAAG,KACHC,EAAG,OACHh8C,EAAG,KACHi8C,EAAG,QACHC,EAAG,MAECC,EAAU,CACdC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAmBT,IAAIttD,EAeJ,MAAMutD,EAAS,uGAiCT7gF,EAAKxC,GAAKA,GAAK,SAAgB,MAAJA,EAAqC,MAAzBT,KAAKmoC,IAAI1nC,EAAG,EAAM,KAAe,KACxEuC,EAAOvC,GAAKA,GAAK,OAAUA,EAAI,MAAQT,KAAKmoC,KAAK1nC,EAAI,MAAS,MAAO,KAa3E,SAASsjF,EAAOtjF,EAAG1C,EAAGg9B,GACpB,GAAIt6B,EAAG,CACL,IAAIujF,EAAM9K,EAAQz4E,GAClBujF,EAAIjmF,GAAKiC,KAAKN,IAAI,EAAGM,KAAKL,IAAIqkF,EAAIjmF,GAAKimF,EAAIjmF,GAAKg9B,EAAa,IAANh9B,EAAU,IAAM,IACvEimF,EAAM1K,EAAQ0K,GACdvjF,EAAEkmB,EAAIq9D,EAAI,GACVvjF,EAAE04E,EAAI6K,EAAI,GACVvjF,EAAE8S,EAAIywE,EAAI,EACZ,CACF,CACA,SAASC,EAAMxjF,EAAGsgD,GAChB,OAAOtgD,EAAI5C,OAAOgR,OAAOkyC,GAAS,CAAC,EAAGtgD,GAAKA,CAC7C,CACA,SAASyjF,EAAW/tE,GAClB,IAAI1V,EAAI,CAACkmB,EAAG,EAAGwyD,EAAG,EAAG5lE,EAAG,EAAGD,EAAG,KAY9B,OAXI7D,MAAMC,QAAQyG,GACZA,EAAMnY,QAAU,IAClByC,EAAI,CAACkmB,EAAGxQ,EAAM,GAAIgjE,EAAGhjE,EAAM,GAAI5C,EAAG4C,EAAM,GAAI7C,EAAG,KAC3C6C,EAAMnY,OAAS,IACjByC,EAAE6S,EAAIukE,EAAI1hE,EAAM,OAIpB1V,EAAIwjF,EAAM9tE,EAAO,CAACwQ,EAAG,EAAGwyD,EAAG,EAAG5lE,EAAG,EAAGD,EAAG,KACrCA,EAAIukE,EAAIp3E,EAAE6S,GAEP7S,CACT,CACA,SAAS0jF,EAAczxE,GACrB,MAAsB,MAAlBA,EAAIiZ,OAAO,GA3EjB,SAAkBjZ,GAChB,MAAMk8D,EAAIkV,EAAOM,KAAK1xE,GACtB,IACIiU,EAAGwyD,EAAG5lE,EADND,EAAI,IAER,GAAKs7D,EAAL,CAGA,GAAIA,EAAE,KAAOjoD,EAAG,CACd,MAAMlmB,GAAKmuE,EAAE,GACbt7D,EAAIs7D,EAAE,GAAKgJ,EAAIn3E,GAAKk3E,EAAQ,IAAJl3E,EAAS,EAAG,IACtC,CAOA,OANAkmB,GAAKioD,EAAE,GACPuK,GAAKvK,EAAE,GACPr7D,GAAKq7D,EAAE,GACPjoD,EAAI,KAAOioD,EAAE,GAAKgJ,EAAIjxD,GAAKgxD,EAAIhxD,EAAG,EAAG,MACrCwyD,EAAI,KAAOvK,EAAE,GAAKgJ,EAAIuB,GAAKxB,EAAIwB,EAAG,EAAG,MACrC5lE,EAAI,KAAOq7D,EAAE,GAAKgJ,EAAIrkE,GAAKokE,EAAIpkE,EAAG,EAAG,MAC9B,CACLoT,EAAGA,EACHwyD,EAAGA,EACH5lE,EAAGA,EACHD,EAAGA,EAfL,CAiBF,CAqDW+wE,CAAS3xE,GAhVpB,SAAkBA,GAChB,MAAMk8D,EAAIgK,EAAOwL,KAAK1xE,GACtB,IACIjS,EADA6S,EAAI,IAER,IAAKs7D,EACH,OAEEA,EAAE,KAAOnuE,IACX6S,EAAIs7D,EAAE,GAAKgJ,GAAKhJ,EAAE,IAAMiJ,GAAKjJ,EAAE,KAEjC,MAAMtkC,EAAIivC,GAAK3K,EAAE,IACXppE,GAAMopE,EAAE,GAAK,IACbh2D,GAAMg2D,EAAE,GAAK,IAQnB,OANEnuE,EADW,QAATmuE,EAAE,GAtBR,SAAiBtkC,EAAGF,EAAG72B,GACrB,OAAO8lE,EAAML,EAAU1uC,EAAGF,EAAG72B,EAC/B,CAqBQ+wE,CAAQh6C,EAAG9kC,EAAIoT,GACD,QAATg2D,EAAE,GArBf,SAAiBtkC,EAAG3kC,EAAGlF,GACrB,OAAO44E,EAAMN,EAAUzuC,EAAG3kC,EAAGlF,EAC/B,CAoBQ8jF,CAAQj6C,EAAG9kC,EAAIoT,GAEf0gE,EAAQhvC,EAAG9kC,EAAIoT,GAEd,CACL+N,EAAGlmB,EAAE,GACL04E,EAAG14E,EAAE,GACL8S,EAAG9S,EAAE,GACL6S,EAAGA,EAEP,CAwTSkxE,CAAS9xE,EAClB,CACA,MAAM+xE,EACJ/yE,YAAYyE,GACV,GAAIA,aAAiBsuE,EACnB,OAAOtuE,EAET,MAAMzR,SAAcyR,EACpB,IAAI1V,EA7bR,IAAkBiS,EAEZo/B,EADAa,EA6bW,WAATjuC,EACFjE,EAAIyjF,EAAW/tE,GACG,WAATzR,IA/bTiuC,GADYjgC,EAicCyD,GAhcHnY,OAEC,MAAX0U,EAAI,KACM,IAARigC,GAAqB,IAARA,EACfb,EAAM,CACJnrB,EAAG,IAAsB,GAAhBqxD,EAAMtlE,EAAI,IACnBymE,EAAG,IAAsB,GAAhBnB,EAAMtlE,EAAI,IACnBa,EAAG,IAAsB,GAAhBykE,EAAMtlE,EAAI,IACnBY,EAAW,IAARq/B,EAA4B,GAAhBqlC,EAAMtlE,EAAI,IAAW,KAErB,IAARigC,GAAqB,IAARA,IACtBb,EAAM,CACJnrB,EAAGqxD,EAAMtlE,EAAI,KAAO,EAAIslE,EAAMtlE,EAAI,IAClCymE,EAAGnB,EAAMtlE,EAAI,KAAO,EAAIslE,EAAMtlE,EAAI,IAClCa,EAAGykE,EAAMtlE,EAAI,KAAO,EAAIslE,EAAMtlE,EAAI,IAClCY,EAAW,IAARq/B,EAAaqlC,EAAMtlE,EAAI,KAAO,EAAIslE,EAAMtlE,EAAI,IAAO,OAibxDjS,EA7aGqxC,GAoUT,SAAmBp/B,GACZ6jB,IACHA,EApBJ,WACE,MAAMmuD,EAAW,CAAC,EACZ5mF,EAAOD,OAAOC,KAAK28E,GACnBkK,EAAQ9mF,OAAOC,KAAKk+B,GAC1B,IAAIj+B,EAAGwpC,EAAGywB,EAAG4sB,EAAIC,EACjB,IAAK9mF,EAAI,EAAGA,EAAID,EAAKE,OAAQD,IAAK,CAEhC,IADA6mF,EAAKC,EAAK/mF,EAAKC,GACVwpC,EAAI,EAAGA,EAAIo9C,EAAM3mF,OAAQupC,IAC5BywB,EAAI2sB,EAAMp9C,GACVs9C,EAAKA,EAAGx0E,QAAQ2nD,EAAGh8B,EAAIg8B,IAEzBA,EAAI8sB,SAASrK,EAAQmK,GAAK,IAC1BF,EAASG,GAAM,CAAC7sB,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EACjD,CACA,OAAO0sB,CACT,CAKYK,GACRxuD,EAAMtO,YAAc,CAAC,EAAG,EAAG,EAAG,IAEhC,MAAM3U,EAAIijB,EAAM7jB,EAAIkI,eACpB,OAAOtH,GAAK,CACVqT,EAAGrT,EAAE,GACL6lE,EAAG7lE,EAAE,GACLC,EAAGD,EAAE,GACLA,EAAgB,IAAbA,EAAEtV,OAAesV,EAAE,GAAK,IAE/B,CA6F6B0xE,CAAU7uE,IAAUguE,EAAchuE,IAE3D3F,KAAKy0E,KAAOxkF,EACZ+P,KAAK00E,SAAWzkF,CAClB,CACIgoB,YACF,OAAOjY,KAAK00E,MACd,CACIjM,UACF,IAAIx4E,EAAIwjF,EAAMzzE,KAAKy0E,MAInB,OAHIxkF,IACFA,EAAE6S,EAAIwkE,EAAIr3E,EAAE6S,IAEP7S,CACT,CACIw4E,QAAIrpE,GACNY,KAAKy0E,KAAOf,EAAWt0E,EACzB,CACAu1E,YACE,OAAO30E,KAAK00E,QArFGzkF,EAqFgB+P,KAAKy0E,QAnFpCxkF,EAAE6S,EAAI,IACF,QAAQ7S,EAAEkmB,MAAMlmB,EAAE04E,MAAM14E,EAAE8S,MAAMukE,EAAIr3E,EAAE6S,MACtC,OAAO7S,EAAEkmB,MAAMlmB,EAAE04E,MAAM14E,EAAE8S,WAiFevW,EArFhD,IAAmByD,CAsFjB,CACAkoB,YACE,OAAOnY,KAAK00E,QAhcGzkF,EAgcgB+P,KAAKy0E,KA/blC1M,EAzBU93E,IAAKk4E,EAAGl4E,EAAEkmB,IAAMgyD,EAAGl4E,EAAE04E,IAAMR,EAAGl4E,EAAE8S,IAAMolE,EAAGl4E,EAAE6S,GAyBjD8xE,CAAQ3kF,GAAKg4E,EAAKC,EACnBj4E,EACH,IAAM83E,EAAE93E,EAAEkmB,GAAK4xD,EAAE93E,EAAE04E,GAAKZ,EAAE93E,EAAE8S,GAJpB,EAACD,EAAGilE,IAAMjlE,EAAI,IAAMilE,EAAEjlE,GAAK,GAIF28C,CAAMxvD,EAAE6S,EAAGilE,QAC5Cv7E,QA4b0CA,EAhchD,IAAmByD,EACb83E,CAgcJ,CACA8M,YACE,OAAO70E,KAAK00E,OApVhB,SAAmBzkF,GACjB,IAAKA,EACH,OAEF,MAAM6S,EAAI4lE,EAAQz4E,GACZ6pC,EAAIh3B,EAAE,GACN3N,EAAIoyE,EAAIzkE,EAAE,IACV2e,EAAI8lD,EAAIzkE,EAAE,IAChB,OAAO7S,EAAE6S,EAAI,IACT,QAAQg3B,MAAM3kC,OAAOssB,OAAO6lD,EAAIr3E,EAAE6S,MAClC,OAAOg3B,MAAM3kC,OAAOssB,KAC1B,CAyUyBozD,CAAU70E,KAAKy0E,WAAQjoF,CAC9C,CACA0rB,IAAIL,EAAO0X,GACT,GAAI1X,EAAO,CACT,MAAMG,EAAKhY,KAAKyoE,IACVqM,EAAKj9D,EAAM4wD,IACjB,IAAIsM,EACJ,MAAMx7E,EAAIg2B,IAAWwlD,EAAK,GAAMxlD,EAC1BqK,EAAI,EAAIrgC,EAAI,EACZuJ,EAAIkV,EAAGlV,EAAIgyE,EAAGhyE,EACdkyE,IAAOp7C,EAAI92B,IAAO,EAAI82B,GAAKA,EAAI92B,IAAM,EAAI82B,EAAI92B,IAAM,GAAK,EAC9DiyE,EAAK,EAAIC,EACTh9D,EAAG7B,EAAI,IAAO6+D,EAAKh9D,EAAG7B,EAAI4+D,EAAKD,EAAG3+D,EAAI,GACtC6B,EAAG2wD,EAAI,IAAOqM,EAAKh9D,EAAG2wD,EAAIoM,EAAKD,EAAGnM,EAAI,GACtC3wD,EAAGjV,EAAI,IAAOiyE,EAAKh9D,EAAGjV,EAAIgyE,EAAKD,EAAG/xE,EAAI,GACtCiV,EAAGlV,EAAIvJ,EAAIye,EAAGlV,GAAK,EAAIvJ,GAAKu7E,EAAGhyE,EAC/B9C,KAAKyoE,IAAMzwD,CACb,CACA,OAAOhY,IACT,CACA4jD,YAAY/rC,EAAOjL,GAIjB,OAHIiL,IACF7X,KAAKy0E,KAvGX,SAAqBQ,EAAMC,EAAMtoE,GAC/B,MAAMuJ,EAAI3jB,EAAK80E,EAAI2N,EAAK9+D,IAClBwyD,EAAIn2E,EAAK80E,EAAI2N,EAAKtM,IAClB5lE,EAAIvQ,EAAK80E,EAAI2N,EAAKlyE,IACxB,MAAO,CACLoT,EAAGkxD,EAAI50E,EAAG0jB,EAAIvJ,GAAKpa,EAAK80E,EAAI4N,EAAK/+D,IAAMA,KACvCwyD,EAAGtB,EAAI50E,EAAGk2E,EAAI/7D,GAAKpa,EAAK80E,EAAI4N,EAAKvM,IAAMA,KACvC5lE,EAAGskE,EAAI50E,EAAGsQ,EAAI6J,GAAKpa,EAAK80E,EAAI4N,EAAKnyE,IAAMA,KACvCD,EAAGmyE,EAAKnyE,EAAI8J,GAAKsoE,EAAKpyE,EAAImyE,EAAKnyE,GAEnC,CA6FkB8gD,CAAY5jD,KAAKy0E,KAAM58D,EAAM48D,KAAM7nE,IAE1C5M,IACT,CACAyzE,QACE,OAAO,IAAIQ,EAAMj0E,KAAKyoE,IACxB,CACAhpB,MAAM38C,GAEJ,OADA9C,KAAKy0E,KAAK3xE,EAAIukE,EAAIvkE,GACX9C,IACT,CACAm1E,QAAQ5qD,GAGN,OAFYvqB,KAAKy0E,KACb3xE,GAAK,EAAIynB,EACNvqB,IACT,CACAo1E,YACE,MAAM3M,EAAMzoE,KAAKy0E,KACXpzE,EAAMxQ,EAAc,GAAR43E,EAAItyD,EAAkB,IAARsyD,EAAIE,EAAmB,IAARF,EAAI1lE,GAEnD,OADA0lE,EAAItyD,EAAIsyD,EAAIE,EAAIF,EAAI1lE,EAAI1B,EACjBrB,IACT,CACAq1E,QAAQ9qD,GAGN,OAFYvqB,KAAKy0E,KACb3xE,GAAK,EAAIynB,EACNvqB,IACT,CACAs1E,SACE,MAAMrlF,EAAI+P,KAAKy0E,KAIf,OAHAxkF,EAAEkmB,EAAI,IAAMlmB,EAAEkmB,EACdlmB,EAAE04E,EAAI,IAAM14E,EAAE04E,EACd14E,EAAE8S,EAAI,IAAM9S,EAAE8S,EACP/C,IACT,CACAu1E,QAAQhrD,GAEN,OADAgpD,EAAOvzE,KAAKy0E,KAAM,EAAGlqD,GACdvqB,IACT,CACAw1E,OAAOjrD,GAEL,OADAgpD,EAAOvzE,KAAKy0E,KAAM,GAAIlqD,GACfvqB,IACT,CACAy1E,SAASlrD,GAEP,OADAgpD,EAAOvzE,KAAKy0E,KAAM,EAAGlqD,GACdvqB,IACT,CACA01E,WAAWnrD,GAET,OADAgpD,EAAOvzE,KAAKy0E,KAAM,GAAIlqD,GACfvqB,IACT,CACAoiE,OAAOuT,GAEL,OAtaJ,SAAgB1lF,EAAG0lF,GACjB,IAAI77C,EAAI4uC,EAAQz4E,GAChB6pC,EAAE,GAAKivC,EAAIjvC,EAAE,GAAK67C,GAClB77C,EAAIgvC,EAAQhvC,GACZ7pC,EAAEkmB,EAAI2jB,EAAE,GACR7pC,EAAE04E,EAAI7uC,EAAE,GACR7pC,EAAE8S,EAAI+2B,EAAE,EACV,CA8ZIsoC,CAAOpiE,KAAKy0E,KAAMkB,GACX31E,IACT,ECzjBE,SAAS41E,IACF,CAGP,MAAMC,EAAM,MACZ,IAAI7lF,EAAK,EACT,MAAO,IAAIA,GACd,EAHe,GAQZ,SAAS8lF,EAAc1nE,GACvB,OAAOA,OACX,CAKI,SAASlP,EAAQkP,GACjB,GAAInP,MAAMC,SAAWD,MAAMC,QAAQkP,GAC/B,OAAO,EAEX,MAAMla,EAAO7G,OAAO6N,UAAU66E,SAAS36E,KAAKgT,GAC5C,MAAyB,YAArBla,EAAKuO,MAAM,EAAG,IAAuC,WAAnBvO,EAAKuO,OAAO,EAItD,CAKI,SAASuzE,EAAS5nE,GAClB,OAAiB,OAAVA,GAA4D,oBAA1C/gB,OAAO6N,UAAU66E,SAAS36E,KAAKgT,EAC5D,CAII,SAAS6nE,EAAe7nE,GACxB,OAAyB,iBAAVA,GAAsBA,aAAiBuV,SAAW24C,UAAUluD,EAC/E,CAKI,SAAS8nE,EAAgB9nE,EAAO+nE,GAChC,OAAOF,EAAe7nE,GAASA,EAAQ+nE,CAC3C,CAKI,SAASC,EAAehoE,EAAO+nE,GAC/B,YAAwB,IAAV/nE,EAAwB+nE,EAAe/nE,CACzD,CACA,MAAMioE,EAAe,CAACjoE,EAAOkoE,IAA6B,iBAAVloE,GAAsBA,EAAMmoE,SAAS,KAAOnrB,WAAWh9C,GAAS,KAAOA,EAAQkoE,EACzHE,EAAc,CAACpoE,EAAOkoE,IAA6B,iBAAVloE,GAAsBA,EAAMmoE,SAAS,KAAOnrB,WAAWh9C,GAAS,IAAMkoE,GAAaloE,EAO9H,SAASjJ,EAASlR,EAAImI,EAAMq6E,GAC5B,GAAIxiF,GAAyB,mBAAZA,EAAGmH,KAChB,OAAOnH,EAAG8L,MAAM02E,EAASr6E,EAEjC,CACA,SAAS+C,EAAKu3E,EAAUziF,EAAIwiF,EAASl7D,GACjC,IAAIhuB,EAAG40C,EAAK70C,EACZ,GAAI4R,EAAQw3E,GAER,GADAv0C,EAAMu0C,EAASlpF,OACX+tB,EACA,IAAIhuB,EAAI40C,EAAM,EAAG50C,GAAK,EAAGA,IACrB0G,EAAGmH,KAAKq7E,EAASC,EAASnpF,GAAIA,QAGlC,IAAIA,EAAI,EAAGA,EAAI40C,EAAK50C,IAChB0G,EAAGmH,KAAKq7E,EAASC,EAASnpF,GAAIA,QAGnC,GAAIyoF,EAASU,GAGhB,IAFAppF,EAAOD,OAAOC,KAAKopF,GACnBv0C,EAAM70C,EAAKE,OACPD,EAAI,EAAGA,EAAI40C,EAAK50C,IAChB0G,EAAGmH,KAAKq7E,EAASC,EAASppF,EAAKC,IAAKD,EAAKC,GAGrD,CAMI,SAASopF,EAAeC,EAAIC,GAC5B,IAAItpF,EAAGquB,EAAMhpB,EAAIC,EACjB,IAAK+jF,IAAOC,GAAMD,EAAGppF,SAAWqpF,EAAGrpF,OAC/B,OAAO,EAEX,IAAID,EAAI,EAAGquB,EAAOg7D,EAAGppF,OAAQD,EAAIquB,IAAQruB,EAGrC,GAFAqF,EAAKgkF,EAAGrpF,GACRsF,EAAKgkF,EAAGtpF,GACJqF,EAAGopB,eAAiBnpB,EAAGmpB,cAAgBppB,EAAGwN,QAAUvN,EAAGuN,MACvD,OAAO,EAGf,OAAO,CACX,CAII,SAAS,EAAMC,GACf,GAAInB,EAAQmB,GACR,OAAOA,EAAOmrB,IAAI,GAEtB,GAAIwqD,EAAS31E,GAAS,CAClB,MAAMzK,EAASvI,OAAO4T,OAAO,MACvB3T,EAAOD,OAAOC,KAAK+S,GACnBy2E,EAAOxpF,EAAKE,OAClB,IAAIg6D,EAAI,EACR,KAAMA,EAAIsvB,IAAQtvB,EACd5xD,EAAOtI,EAAKk6D,IAAM,EAAMnnD,EAAO/S,EAAKk6D,KAExC,OAAO5xD,CACX,CACA,OAAOyK,CACX,CACA,SAAS02E,EAAW9qF,GAChB,OAIoB,IAJb,CACH,YACA,YACA,eACFQ,QAAQR,EACd,CAKI,SAAS+qF,EAAQ/qF,EAAK2J,EAAQyK,EAAQvT,GACtC,IAAKiqF,EAAW9qF,GACZ,OAEJ,MAAMgrF,EAAOrhF,EAAO3J,GACdirF,EAAO72E,EAAOpU,GAChB+pF,EAASiB,IAASjB,EAASkB,GAE3Bx2E,EAAMu2E,EAAMC,EAAMpqF,GAElB8I,EAAO3J,GAAO,EAAMirF,EAE5B,CACA,SAASx2E,EAAM9K,EAAQyK,EAAQvT,GAC3B,MAAMg+D,EAAU5rD,EAAQmB,GAAUA,EAAS,CACvCA,GAEEub,EAAOkvC,EAAQt9D,OACrB,IAAKwoF,EAASpgF,GACV,OAAOA,EAGX,MAAMuhF,GADNrqF,EAAUA,GAAW,CAAC,GACCqqF,QAAUH,EACjC,IAAII,EACJ,IAAI,IAAI7pF,EAAI,EAAGA,EAAIquB,IAAQruB,EAAE,CAEzB,GADA6pF,EAAUtsB,EAAQv9D,IACbyoF,EAASoB,GACV,SAEJ,MAAM9pF,EAAOD,OAAOC,KAAK8pF,GACzB,IAAI,IAAI5vB,EAAI,EAAGsvB,EAAOxpF,EAAKE,OAAQg6D,EAAIsvB,IAAQtvB,EAC3C2vB,EAAO7pF,EAAKk6D,GAAI5xD,EAAQwhF,EAAStqF,EAEzC,CACA,OAAO8I,CACX,CACA,SAASyhF,EAAQzhF,EAAQyK,GAErB,OAAOK,EAAM9K,EAAQyK,EAAQ,CACzB82E,OAAQG,GAEhB,CAII,SAASA,EAAUrrF,EAAK2J,EAAQyK,GAChC,IAAK02E,EAAW9qF,GACZ,OAEJ,MAAMgrF,EAAOrhF,EAAO3J,GACdirF,EAAO72E,EAAOpU,GAChB+pF,EAASiB,IAASjB,EAASkB,GAC3BG,EAAQJ,EAAMC,GACN7pF,OAAO6N,UAAUC,eAAeC,KAAKxF,EAAQ3J,KACrD2J,EAAO3J,GAAO,EAAMirF,GAE5B,CASA,MAAMK,EAAe,CAEjB,GAAKtnF,GAAIA,EAETtD,EAAIszD,GAAIA,EAAEtzD,EACVC,EAAIqzD,GAAIA,EAAErzD,GA+Bd,SAAS4qF,EAAiBp4E,EAAKnT,GAC3B,MAAM+qD,EAAWugC,EAAatrF,KAASsrF,EAAatrF,GAbxD,SAAyBA,GACrB,MAAMqB,EAhBN,SAAmBrB,GACnB,MAAMglD,EAAQhlD,EAAIoW,MAAM,KAClB/U,EAAO,GACb,IAAIkmF,EAAM,GACV,IAAK,MAAMiE,KAAQxmC,EACfuiC,GAAOiE,EACHjE,EAAI+C,SAAS,MACb/C,EAAMA,EAAI/wE,MAAM,GAAI,GAAK,KAEzBnV,EAAKa,KAAKqlF,GACVA,EAAM,IAGd,OAAOlmF,CACX,CAEiBoqF,CAAUzrF,GACvB,OAAQmT,IACJ,IAAK,MAAMooD,KAAKl6D,EAAK,CACjB,GAAU,KAANk6D,EACA,MAEJpoD,EAAMA,GAAOA,EAAIooD,EACrB,CACA,OAAOpoD,CAAG,CAElB,CAE+Du4E,CAAgB1rF,IAC3E,OAAO+qD,EAAS53C,EACpB,CAGI,SAASw4E,GAAY11E,GACrB,OAAOA,EAAIiZ,OAAO,GAAG/X,cAAgBlB,EAAIO,MAAM,EACnD,CACA,MAAMo1E,GAAWzpE,QAAyB,IAAVA,EAC1B0pE,GAAc1pE,GAAyB,mBAAVA,EAE7B2pE,GAAY,CAACj1E,EAAGC,KAClB,GAAID,EAAEsY,OAASrY,EAAEqY,KACb,OAAO,EAEX,IAAK,MAAMlK,KAAQpO,EACf,IAAKC,EAAEmU,IAAIhG,GACP,OAAO,EAGf,OAAO,CAAI,EAKX,SAAS8mE,GAAc/+E,GACvB,MAAkB,YAAXA,EAAE/E,MAAiC,UAAX+E,EAAE/E,MAA+B,gBAAX+E,EAAE/E,IAC3D,CAKI,MAAMqU,GAAK/Y,KAAK+Y,GACd0vE,GAAM,EAAI1vE,GACV2vE,GAAQD,GAAM1vE,GACd4vE,GAAWx0D,OAAOC,kBAClBw0D,GAAc7vE,GAAK,IACnB8vE,GAAU9vE,GAAK,EACf+vE,GAAa/vE,GAAK,EAClBgwE,GAAqB,EAALhwE,GAAS,EACzBiwE,GAAQhpF,KAAKgpF,MACbC,GAAOjpF,KAAKipF,KAClB,SAASC,GAAa/rF,EAAGC,EAAG21C,GACxB,OAAO/yC,KAAK8D,IAAI3G,EAAIC,GAAK21C,CAC7B,CAGI,SAASo2C,GAAQ1pF,GACjB,MAAM2pF,EAAeppF,KAAKqB,MAAM5B,GAChCA,EAAQypF,GAAazpF,EAAO2pF,EAAc3pF,EAAQ,KAAQ2pF,EAAe3pF,EACzE,MAAM4pF,EAAYrpF,KAAKmoC,IAAI,GAAInoC,KAAKqpB,MAAM2/D,GAAMvpF,KAC1C6pF,EAAW7pF,EAAQ4pF,EAEzB,OADqBC,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,IAC3DD,CAC1B,CAII,SAASE,GAAW3qE,GACpB,MAAM6zB,EAAS,GACTlqC,EAAOvI,KAAKuI,KAAKqW,GACvB,IAAI7gB,EACJ,IAAIA,EAAI,EAAGA,EAAIwK,EAAMxK,IACb6gB,EAAQ7gB,GAAM,IACd00C,EAAO9zC,KAAKZ,GACZ00C,EAAO9zC,KAAKigB,EAAQ7gB,IAO5B,OAJIwK,KAAiB,EAAPA,IACVkqC,EAAO9zC,KAAK4J,GAEhBkqC,EAAOt/B,MAAK,CAACG,EAAGC,IAAID,EAAIC,IAAG4T,MACpBsrB,CACX,CACA,SAAS+2C,GAAS1Q,GACd,OAAQ13E,MAAMw6D,WAAWkd,KAAOhM,SAASgM,EAC7C,CACA,SAAS2Q,GAAYtsF,EAAG41C,GACpB,MAAM22C,EAAU1pF,KAAKqB,MAAMlE,GAC3B,OAAOusF,EAAU32C,GAAW51C,GAAKusF,EAAU32C,GAAW51C,CAC1D,CAGI,SAASwsF,GAAmBzgD,EAAO9iC,EAAQqN,GAC3C,IAAI1V,EAAGquB,EAAMxN,EACb,IAAI7gB,EAAI,EAAGquB,EAAO8c,EAAMlrC,OAAQD,EAAIquB,EAAMruB,IACtC6gB,EAAQsqB,EAAMnrC,GAAG0V,GACZrS,MAAMwd,KACPxY,EAAOzG,IAAMK,KAAKL,IAAIyG,EAAOzG,IAAKif,GAClCxY,EAAO1G,IAAMM,KAAKN,IAAI0G,EAAO1G,IAAKkf,GAG9C,CACA,SAASgrE,GAAUC,GACf,OAAOA,GAAW9wE,GAAK,IAC3B,CACA,SAAS+wE,GAAUC,GACf,OAAOA,GAAW,IAAMhxE,GAC5B,CAOI,SAASixE,GAAe7sF,GACxB,IAAKspF,EAAetpF,GAChB,OAEJ,IAAIsM,EAAI,EACJM,EAAI,EACR,KAAM/J,KAAKqB,MAAMlE,EAAIsM,GAAKA,IAAMtM,GAC5BsM,GAAK,GACLM,IAEJ,OAAOA,CACX,CAEA,SAASkgF,GAAkBC,EAAaC,GACpC,MAAMC,EAAsBD,EAAWhtF,EAAI+sF,EAAY/sF,EACjDktF,EAAsBF,EAAW/sF,EAAI8sF,EAAY9sF,EACjDktF,EAA2BtqF,KAAKuI,KAAK6hF,EAAsBA,EAAsBC,EAAsBA,GAC7G,IAAIpzE,EAAQjX,KAAK8Y,MAAMuxE,EAAqBD,GAI5C,OAHInzE,GAAS,GAAM8B,KACf9B,GAASwxE,IAEN,CACHxxE,QACA3O,SAAUgiF,EAElB,CACA,SAASC,GAAsBtiD,EAAKC,GAChC,OAAOloC,KAAKuI,KAAKvI,KAAKmoC,IAAID,EAAI/qC,EAAI8qC,EAAI9qC,EAAG,GAAK6C,KAAKmoC,IAAID,EAAI9qC,EAAI6qC,EAAI7qC,EAAG,GAC1E,CAII,SAASotF,GAAWl3E,EAAGC,GACvB,OAAQD,EAAIC,EAAIm1E,IAASD,GAAM1vE,EACnC,CAII,SAAS0xE,GAAgBn3E,GACzB,OAAQA,EAAIm1E,GAAMA,IAAOA,EAC7B,CAGI,SAASiC,GAAczzE,EAAOzL,EAAOkM,EAAKizE,GAC1C,MAAMr3E,EAAIm3E,GAAgBxzE,GACpBtR,EAAI8kF,GAAgBj/E,GACpB/B,EAAIghF,GAAgB/yE,GACpBkzE,EAAeH,GAAgB9kF,EAAI2N,GACnCu3E,EAAaJ,GAAgBhhF,EAAI6J,GACjCw3E,EAAeL,GAAgBn3E,EAAI3N,GACnColF,EAAaN,GAAgBn3E,EAAI7J,GACvC,OAAO6J,IAAM3N,GAAK2N,IAAM7J,GAAKkhF,GAAyBhlF,IAAM8D,GAAKmhF,EAAeC,GAAcC,EAAeC,CACjH,CAOI,SAASC,GAAYpsE,EAAOjf,EAAKD,GACjC,OAAOM,KAAKN,IAAIC,EAAKK,KAAKL,IAAID,EAAKkf,GACvC,CAII,SAASqsE,GAAYrsE,GACrB,OAAOosE,GAAYpsE,GAAQ,MAAO,MACtC,CAOI,SAASssE,GAAWtsE,EAAOpT,EAAOkM,EAAKq7B,EAAU,MACjD,OAAOn0B,GAAS5e,KAAKL,IAAI6L,EAAOkM,GAAOq7B,GAAWn0B,GAAS5e,KAAKN,IAAI8L,EAAOkM,GAAOq7B,CACtF,CAEA,SAASo4C,GAAQ5U,EAAO33D,EAAOwsE,GAC3BA,EAAMA,GAAO,CAAEx6E,GAAQ2lE,EAAM3lE,GAASgO,GACtC,IAEIysE,EAFAlkD,EAAKovC,EAAMv4E,OAAS,EACpBkpC,EAAK,EAET,KAAMC,EAAKD,EAAK,GACZmkD,EAAMnkD,EAAKC,GAAM,EACbikD,EAAIC,GACJnkD,EAAKmkD,EAELlkD,EAAKkkD,EAGb,MAAO,CACHnkD,KACAC,KAER,CAQI,MAAMmkD,GAAe,CAAC/U,EAAO95E,EAAKmiB,EAAOtG,IAAO6yE,GAAQ5U,EAAO33D,EAAOtG,EAAQ1H,IAC1E,MAAM26E,EAAKhV,EAAM3lE,GAAOnU,GACxB,OAAO8uF,EAAK3sE,GAAS2sE,IAAO3sE,GAAS23D,EAAM3lE,EAAQ,GAAGnU,KAASmiB,CAAK,EACnEhO,GAAQ2lE,EAAM3lE,GAAOnU,GAAOmiB,GAO3B4sE,GAAgB,CAACjV,EAAO95E,EAAKmiB,IAAQusE,GAAQ5U,EAAO33D,GAAQhO,GAAQ2lE,EAAM3lE,GAAOnU,IAAQmiB,IAO/F,SAAS6sE,GAAep4E,EAAQ1T,EAAKD,GACrC,IAAI8L,EAAQ,EACRkM,EAAMrE,EAAOrV,OACjB,KAAMwN,EAAQkM,GAAOrE,EAAO7H,GAAS7L,GACjC6L,IAEJ,KAAMkM,EAAMlM,GAAS6H,EAAOqE,EAAM,GAAKhY,GACnCgY,IAEJ,OAAOlM,EAAQ,GAAKkM,EAAMrE,EAAOrV,OAASqV,EAAOJ,MAAMzH,EAAOkM,GAAOrE,CACzE,CACA,MAAMq4E,GAAc,CAChB,OACA,MACA,QACA,SACA,WAEJ,SAASC,GAAkBziD,EAAOwE,GAC1BxE,EAAM0iD,SACN1iD,EAAM0iD,SAASvlE,UAAU1nB,KAAK+uC,IAGlC7vC,OAAO66D,eAAexvB,EAAO,WAAY,CACrCyvB,cAAc,EACdC,YAAY,EACZh6C,MAAO,CACHyH,UAAW,CACPqnB,MAIZg+C,GAAY57E,SAASrT,IACjB,MAAMuT,EAAS,UAAYo4E,GAAY3rF,GACjC4U,EAAO63B,EAAMzsC,GACnBoB,OAAO66D,eAAexvB,EAAOzsC,EAAK,CAC9Bk8D,cAAc,EACdC,YAAY,EACZh6C,SAAUhS,GACN,MAAMud,EAAM9Y,EAAKd,MAAMC,KAAM5D,GAM7B,OALAs8B,EAAM0iD,SAASvlE,UAAUvW,SAAS+7E,IACA,mBAAnBA,EAAO77E,IACd67E,EAAO77E,MAAWpD,EACtB,IAEGud,CACX,GACF,IAEV,CACA,SAAS2hE,GAAoB5iD,EAAOwE,GAChC,MAAMq+C,EAAO7iD,EAAM0iD,SACnB,IAAKG,EACD,OAEJ,MAAM1lE,EAAY0lE,EAAK1lE,UACjBzV,EAAQyV,EAAUppB,QAAQywC,IACjB,IAAX98B,GACAyV,EAAUrL,OAAOpK,EAAO,GAExByV,EAAUroB,OAAS,IAGvB0tF,GAAY57E,SAASrT,WACVysC,EAAMzsC,EAAI,WAEdysC,EAAM0iD,SACjB,CAGI,SAASI,GAAajlE,GACtB,MAAM1nB,EAAM,IAAIgnD,IAAIt/B,GACpB,OAAI1nB,EAAIusB,OAAS7E,EAAM/oB,OACZ+oB,EAEJtX,MAAMzM,KAAK3D,EACtB,CAOG,MAAM4sF,GACiB,oBAAX5kF,OACA,SAASsO,GACZ,OAAOA,GACX,EAEGtO,OAAO6kF,sBAKd,SAASC,GAAU1nF,EAAIwiF,GACvB,IAAImF,EAAY,GACZC,GAAU,EACd,OAAO,YAAYz/E,GAEfw/E,EAAYx/E,EACPy/E,IACDA,GAAU,EACVJ,GAAiBrgF,KAAKvE,QAAQ,KAC1BglF,GAAU,EACV5nF,EAAG8L,MAAM02E,EAASmF,EAAU,IAGxC,CACJ,CAGI,SAASv+E,GAASpJ,EAAIkJ,GACtB,IAAIC,EACJ,OAAO,YAAYhB,GAOf,OANIe,GACArB,aAAasB,GACbA,EAAUpF,WAAW/D,EAAIkJ,EAAOf,IAEhCnI,EAAG8L,MAAMC,KAAM5D,GAEZe,CACX,CACJ,CAII,MAAM2+E,GAAsB94C,GAAkB,UAAVA,EAAoB,OAAmB,QAAVA,EAAkB,QAAU,SAIvF+4C,GAAiB,CAAC/4C,EAAOhoC,EAAOkM,IAAgB,UAAV87B,EAAoBhoC,EAAkB,QAAVgoC,EAAkB97B,GAAOlM,EAAQkM,GAAO,EAI1G80E,GAAS,CAACh5C,EAAOr1C,EAAMC,EAAO2iE,IAE7BvtB,KADOutB,EAAM,OAAS,SACJ3iE,EAAkB,WAAVo1C,GAAsBr1C,EAAOC,GAAS,EAAID,EAK3E,SAASsuF,GAAiC9/D,EAAMyX,EAAQS,GACxD,MAAMu0B,EAAah1B,EAAOpmC,OAC1B,IAAIwN,EAAQ,EACR2V,EAAQi4C,EACZ,GAAIzsC,EAAKoG,QAAS,CACd,MAAM,OAAEpF,EAAO,QAAEY,GAAa5B,EACxBnuB,EAAOmvB,EAAOnvB,MACd,IAAEmB,EAAI,IAAED,EAAI,WAAE80B,EAAW,WAAEC,GAAgB9G,EAAO+G,gBACpDF,IACAhpB,EAAQw/E,GAAYhrF,KAAKL,IACzB2rF,GAAa/8D,EAASZ,EAAOnvB,KAAMmB,GAAKunC,GACxCrC,EAAqBu0B,EAAakyB,GAAalnD,EAAQ5lC,EAAMmvB,EAAOrrB,iBAAiB3C,IAAMunC,IAAK,EAAGkyB,EAAa,IAGhHj4C,EADAsT,EACQu2D,GAAYhrF,KAAKN,IACzB4rF,GAAa/8D,EAASZ,EAAOnvB,KAAMkB,GAAK,GAAMynC,GAAK,EACnDtC,EAAqB,EAAIymD,GAAalnD,EAAQ5lC,EAAMmvB,EAAOrrB,iBAAiB5C,IAAM,GAAMynC,GAAK,GAAI37B,EAAO4tD,GAAc5tD,EAE9G4tD,EAAa5tD,CAE7B,CACA,MAAO,CACHA,QACA2V,QAER,CAMI,SAASurE,GAAoB//D,GAC7B,MAAM,OAAEwE,EAAO,OAAEE,EAAO,aAAEs7D,GAAkBhgE,EACtCigE,EAAY,CACdC,KAAM17D,EAAOxxB,IACbmtF,KAAM37D,EAAOzxB,IACbqtF,KAAM17D,EAAO1xB,IACbqtF,KAAM37D,EAAO3xB,KAEjB,IAAKitF,EAED,OADAhgE,EAAKggE,aAAeC,GACb,EAEX,MAAMjxE,EAAUgxE,EAAaE,OAAS17D,EAAOxxB,KAAOgtF,EAAaG,OAAS37D,EAAOzxB,KAAOitF,EAAaI,OAAS17D,EAAO1xB,KAAOgtF,EAAaK,OAAS37D,EAAO3xB,IAEzJ,OADA7B,OAAOgR,OAAO89E,EAAcC,GACrBjxE,CACX,CAEA,MAAMsxE,GAAU7vE,GAAU,IAANA,GAAiB,IAANA,EACzB8vE,GAAY,CAAC9vE,EAAGzX,EAAGoE,KAAM/J,KAAKmoC,IAAI,EAAG,IAAM/qB,GAAK,IAAMpd,KAAK+9B,KAAK3gB,EAAIzX,GAAK8iF,GAAM1+E,GAC/EojF,GAAa,CAAC/vE,EAAGzX,EAAGoE,IAAI/J,KAAKmoC,IAAI,GAAI,GAAK/qB,GAAKpd,KAAK+9B,KAAK3gB,EAAIzX,GAAK8iF,GAAM1+E,GAAK,EAKzEqjF,GAAU,CAChBjkE,OAAS/L,GAAIA,EACbiwE,WAAajwE,GAAIA,EAAIA,EACrBkwE,YAAclwE,IAAKA,GAAKA,EAAI,GAC5BmwE,cAAgBnwE,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,GAAK,MAASA,GAAKA,EAAI,GAAK,GAC3EowE,YAAcpwE,GAAIA,EAAIA,EAAIA,EAC1BqwE,aAAerwE,IAAKA,GAAK,GAAKA,EAAIA,EAAI,EACtCswE,eAAiBtwE,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAI,KAAQA,GAAK,GAAKA,EAAIA,EAAI,GAClFuwE,YAAcvwE,GAAIA,EAAIA,EAAIA,EAAIA,EAC9BwwE,aAAexwE,MAAOA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC5CywE,eAAiBzwE,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAIA,GAAK,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC3F0wE,YAAc1wE,GAAIA,EAAIA,EAAIA,EAAIA,EAAIA,EAClC2wE,aAAe3wE,IAAKA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAC9C4wE,eAAiB5wE,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAClG6wE,WAAa7wE,GAA6B,EAAxBpd,KAAK69B,IAAIzgB,EAAIyrE,IAC/BqF,YAAc9wE,GAAIpd,KAAK+9B,IAAI3gB,EAAIyrE,IAC/BsF,cAAgB/wE,IAAK,IAAOpd,KAAK69B,IAAI9kB,GAAKqE,GAAK,GAC/CgxE,WAAahxE,GAAU,IAANA,EAAU,EAAIpd,KAAKmoC,IAAI,EAAG,IAAM/qB,EAAI,IACrDixE,YAAcjxE,GAAU,IAANA,EAAU,EAA4B,EAAvBpd,KAAKmoC,IAAI,GAAI,GAAK/qB,GACnDkxE,cAAgBlxE,GAAI6vE,GAAO7vE,GAAKA,EAAIA,EAAI,GAAM,GAAMpd,KAAKmoC,IAAI,EAAG,IAAU,EAAJ/qB,EAAQ,IAAM,IAAyC,EAAjCpd,KAAKmoC,IAAI,GAAI,IAAU,EAAJ/qB,EAAQ,KACvHmxE,WAAanxE,GAAIA,GAAK,EAAIA,IAAMpd,KAAKuI,KAAK,EAAI6U,EAAIA,GAAK,GACvDoxE,YAAcpxE,GAAIpd,KAAKuI,KAAK,GAAK6U,GAAK,GAAKA,GAC3CqxE,cAAgBrxE,IAAKA,GAAK,IAAO,GAAK,IAAOpd,KAAKuI,KAAK,EAAI6U,EAAIA,GAAK,GAAK,IAAOpd,KAAKuI,KAAK,GAAK6U,GAAK,GAAKA,GAAK,GAC9GsxE,cAAgBtxE,GAAI6vE,GAAO7vE,GAAKA,EAAI8vE,GAAU9vE,EAAG,KAAO,IACxDuxE,eAAiBvxE,GAAI6vE,GAAO7vE,GAAKA,EAAI+vE,GAAW/vE,EAAG,KAAO,IAC1DwxE,iBAAkBxxE,GACd,MAAMzX,EAAI,MAEV,OAAOsnF,GAAO7vE,GAAKA,EAAIA,EAAI,GAAM,GAAM8vE,GAAc,EAAJ9vE,EAAOzX,EAD9C,KACsD,GAAM,GAAMwnF,GAAe,EAAJ/vE,EAAQ,EAAGzX,EADxF,IAEd,EACAkpF,WAAYzxE,GACR,MAAMzX,EAAI,QACV,OAAOyX,EAAIA,IAAMzX,EAAI,GAAKyX,EAAIzX,EAClC,EACAmpF,YAAa1xE,GACT,MAAMzX,EAAI,QACV,OAAQyX,GAAK,GAAKA,IAAMzX,EAAI,GAAKyX,EAAIzX,GAAK,CAC9C,EACAopF,cAAe3xE,GACX,IAAIzX,EAAI,QACR,OAAKyX,GAAK,IAAO,EACCA,EAAIA,IAAqB,GAAdzX,GAAK,QAAcyX,EAAIzX,GAAzC,GAEJ,KAAQyX,GAAK,GAAKA,IAAqB,GAAdzX,GAAK,QAAcyX,EAAIzX,GAAK,EAChE,EACAqpF,aAAe5xE,GAAI,EAAIgwE,GAAQ6B,cAAc,EAAI7xE,GACjD6xE,cAAe7xE,GACX,MAAMwxD,EAAI,OACJhkD,EAAI,KACV,OAAIxN,EAAI,EAAIwN,EACDgkD,EAAIxxD,EAAIA,EAEfA,EAAI,EAAIwN,EACDgkD,GAAKxxD,GAAK,IAAMwN,GAAKxN,EAAI,IAEhCA,EAAI,IAAMwN,EACHgkD,GAAKxxD,GAAK,KAAOwN,GAAKxN,EAAI,MAE9BwxD,GAAKxxD,GAAK,MAAQwN,GAAKxN,EAAI,OACtC,EACA8xE,gBAAkB9xE,GAAIA,EAAI,GAAoC,GAA9BgwE,GAAQ4B,aAAiB,EAAJ5xE,GAAkD,GAAnCgwE,GAAQ6B,cAAkB,EAAJ7xE,EAAQ,GAAW,IAGjH,SAAS+xE,GAAoBvwE,GACzB,GAAIA,GAA0B,iBAAVA,EAAoB,CACpC,MAAMla,EAAOka,EAAM2nE,WACnB,MAAgB,2BAAT7hF,GAA8C,4BAATA,CAChD,CACA,OAAO,CACX,CACA,SAAS2jB,GAAMzJ,GACX,OAAOuwE,GAAoBvwE,GAASA,EAAQ,IAAI6lE,EAAM7lE,EAC1D,CACA,SAASwwE,GAAcxwE,GACnB,OAAOuwE,GAAoBvwE,GAASA,EAAQ,IAAI6lE,EAAM7lE,GAAOqnE,SAAS,IAAKD,OAAO,IAAKr9D,WAC3F,CAEA,MAAMwS,GAAU,CACZ,IACA,IACA,cACA,SACA,WAEEk0D,GAAS,CACX,QACA,cACA,mBAgFEC,GAAY,IAAIxpE,IAWtB,SAASypE,GAAaC,EAAK9vD,EAAQpiC,GAC/B,OAXJ,SAAyBoiC,EAAQpiC,GAC7BA,EAAUA,GAAW,CAAC,EACtB,MAAM64B,EAAWuJ,EAAS+vD,KAAKC,UAAUpyF,GACzC,IAAIo4E,EAAY4Z,GAAUtwF,IAAIm3B,GAK9B,OAJKu/C,IACDA,EAAY,IAAIia,KAAKC,aAAalwD,EAAQpiC,GAC1CgyF,GAAUjwF,IAAI82B,EAAUu/C,IAErBA,CACX,CAEWma,CAAgBnwD,EAAQpiC,GAASipC,OAAOipD,EACnD,CAEA,MAAMhhB,GAAa,CAClBn7D,OAAQuL,GACMlP,EAAQkP,GAAUA,EAAQ,GAAKA,EAE7C6vD,QAASJ,EAAWz9D,EAAO0oB,GACpB,GAAkB,IAAd+0C,EACA,MAAO,IAEX,MAAM3uC,EAASlvB,KAAKzT,MAAMO,QAAQoiC,OAClC,IAAIowD,EACA9tF,EAAQqsE,EACZ,GAAI/0C,EAAMt7B,OAAS,EAAG,CAClB,MAAM+xF,EAAU/vF,KAAKN,IAAIM,KAAK8D,IAAIw1B,EAAM,GAAG1a,OAAQ5e,KAAK8D,IAAIw1B,EAAMA,EAAMt7B,OAAS,GAAG4gB,SAChFmxE,EAAU,MAAQA,EAAU,QAC5BD,EAAW,cAEf9tF,EA8BZ,SAAwBqsE,EAAW/0C,GAC/B,IAAIt3B,EAAQs3B,EAAMt7B,OAAS,EAAIs7B,EAAM,GAAG1a,MAAQ0a,EAAM,GAAG1a,MAAQ0a,EAAM,GAAG1a,MAAQ0a,EAAM,GAAG1a,MAI3F,OAHI5e,KAAK8D,IAAI9B,IAAU,GAAKqsE,IAAcruE,KAAKqpB,MAAMglD,KACjDrsE,EAAQqsE,EAAYruE,KAAKqpB,MAAMglD,IAE5BrsE,CACX,CApCoBguF,CAAe3hB,EAAW/0C,EACtC,CACA,MAAM22D,EAAWjH,GAAMhpF,KAAK8D,IAAI9B,IAC1BkuF,EAAa9uF,MAAM6uF,GAAY,EAAIjwF,KAAKN,IAAIM,KAAKL,KAAK,EAAIK,KAAKqpB,MAAM4mE,GAAW,IAAK,GACrF3yF,EAAU,CACZwyF,WACAK,sBAAuBD,EACvBE,sBAAuBF,GAG3B,OADAryF,OAAOgR,OAAOvR,EAASkT,KAAKlT,QAAQg8B,MAAMiN,QACnCgpD,GAAalhB,EAAW3uC,EAAQpiC,EAC3C,EACH0G,YAAaqqE,EAAWz9D,EAAO0oB,GACxB,GAAkB,IAAd+0C,EACA,MAAO,IAEX,MAAMtkD,EAASuP,EAAM1oB,GAAO2+D,aAAelB,EAAYruE,KAAKmoC,IAAI,GAAInoC,KAAKqpB,MAAM2/D,GAAM3a,KACrF,MAAI,CACA,EACA,EACA,EACA,EACA,GACA,IACFrhC,SAASjjB,IAAWnZ,EAAQ,GAAM0oB,EAAMt7B,OAC/BwwE,GAAWC,QAAQ7iE,KAAK4E,KAAM69D,EAAWz9D,EAAO0oB,GAEpD,EACX,GASH,IAAI+2D,GAAQ,CACT7hB,eA0EJ,MAAMvsB,GAAYpkD,OAAO4T,OAAO,MAC1BqwC,GAAcjkD,OAAO4T,OAAO,MACjC,SAAS6+E,GAAWh+E,EAAM7V,GACvB,IAAKA,EACD,OAAO6V,EAEX,MAAMxU,EAAOrB,EAAIoW,MAAM,KACvB,IAAI,IAAI9U,EAAI,EAAG+6E,EAAIh7E,EAAKE,OAAQD,EAAI+6E,IAAK/6E,EAAE,CACvC,MAAMi6D,EAAIl6D,EAAKC,GACfuU,EAAOA,EAAK0lD,KAAO1lD,EAAK0lD,GAAKn6D,OAAO4T,OAAO,MAC/C,CACA,OAAOa,CACX,CACA,SAASjT,GAAIkxF,EAAM7vC,EAAOrtC,GACtB,MAAqB,iBAAVqtC,EACAxvC,EAAMo/E,GAAWC,EAAM7vC,GAAQrtC,GAEnCnC,EAAMo/E,GAAWC,EAAM,IAAK7vC,EACvC,CACC,MAAM8vC,GACH9+E,YAAYmyC,EAAc4sC,GACtBjgF,KAAKqa,eAAY7tB,EACjBwT,KAAK3F,gBAAkB,kBACvB2F,KAAKtF,YAAc,kBACnBsF,KAAK6X,MAAQ,OACb7X,KAAK+gB,SAAW,CAAC,EACjB/gB,KAAKk/B,iBAAoBrgC,GAAUA,EAAQtS,MAAM+pD,SAASnZ,sBAC1Dn9B,KAAK8kB,SAAW,CAAC,EACjB9kB,KAAK8T,OAAS,CACV,YACA,WACA,QACA,aACA,aAEJ9T,KAAK6iC,KAAO,CACRq9C,OAAQ,qDACR9kE,KAAM,GACN/N,MAAO,SACPy1B,WAAY,IACZvT,OAAQ,MAEZvvB,KAAKw+C,MAAQ,CAAC,EACdx+C,KAAKmgF,qBAAuB,CAAClmF,EAAKnN,IAAU8xF,GAAc9xF,EAAQuN,iBAClE2F,KAAKogF,iBAAmB,CAACnmF,EAAKnN,IAAU8xF,GAAc9xF,EAAQ4N,aAC9DsF,KAAKqgF,WAAa,CAACpmF,EAAKnN,IAAU8xF,GAAc9xF,EAAQ+qB,OACxD7X,KAAKsgB,UAAY,IACjBtgB,KAAKy1B,YAAc,CACfppC,KAAM,UACNiqC,WAAW,EACXY,kBAAkB,GAEtBl3B,KAAK65C,qBAAsB,EAC3B75C,KAAKk/C,QAAU,KACfl/C,KAAK4rB,QAAU,KACf5rB,KAAKqiB,SAAU,EACfriB,KAAKorB,QAAU,CAAC,EAChBprB,KAAK85C,YAAa,EAClB95C,KAAK9S,WAAQV,EACbwT,KAAK7S,OAAS,CAAC,EACf6S,KAAKi0B,UAAW,EAChBj0B,KAAKglB,yBAA0B,EAC/BhlB,KAAKuxC,SAAS8B,GACdrzC,KAAKD,MAAMkgF,EACf,CACHpxF,IAAIqhD,EAAOrtC,GACJ,OAAOhU,GAAImR,KAAMkwC,EAAOrtC,EAC5B,CACHrU,IAAI0hD,GACG,OAAO4vC,GAAW9/E,KAAMkwC,EAC5B,CACHqB,SAASrB,EAAOrtC,GACT,OAAOhU,GAAIyiD,GAAapB,EAAOrtC,EACnC,CACAstC,SAASD,EAAOrtC,GACZ,OAAOhU,GAAI4iD,GAAWvB,EAAOrtC,EACjC,CACHuuC,MAAMlB,EAAOhzC,EAAMi0C,EAAaD,GACzB,MAAMovC,EAAcR,GAAW9/E,KAAMkwC,GAC/BqwC,EAAoBT,GAAW9/E,KAAMmxC,GACrCqvC,EAAc,IAAMtjF,EAC1B7P,OAAOozF,iBAAiBH,EAAa,CACjC,CAACE,GAAc,CACXpyE,MAAOkyE,EAAYpjF,GACnBmrD,UAAU,GAEd,CAACnrD,GAAO,CACJkrD,YAAY,EACZ55D,MACI,MAAMmlD,EAAQ3zC,KAAKwgF,GACb5qF,EAAS2qF,EAAkBrvC,GACjC,OAAI8kC,EAASriC,GACFtmD,OAAOgR,OAAO,CAAC,EAAGzI,EAAQ+9C,GAE9ByiC,EAAeziC,EAAO/9C,EACjC,EACA/G,IAAKuf,GACDpO,KAAKwgF,GAAepyE,CACxB,IAGZ,CACArO,MAAM2gF,GACFA,EAASphF,SAASS,GAAQA,EAAMC,OACpC,EAEJ,IAAIjF,GAA2B,IAAIilF,GAAS,CACxCh1D,YAAc9tB,IAAQA,EAAKguB,WAAW,MACtCD,WAAa/tB,GAAgB,WAATA,EACpBshD,MAAO,CACHid,UAAW,eAEfhmC,YAAa,CACTzK,aAAa,EACbC,YAAY,IAEjB,CAjVH,SAAiClwB,GAC7BA,EAASlM,IAAI,YAAa,CACtBsO,WAAO3Q,EACPupB,SAAU,IACV2C,OAAQ,eACRzkB,QAAIzH,EACJgG,UAAMhG,EACNusB,UAAMvsB,EACNiG,QAAIjG,EACJ0H,UAAM1H,IAEVuO,EAASw2C,SAAS,YAAa,CAC3BkqB,WAAW,EACXxwC,YAAY,EACZD,YAAc9tB,GAAgB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAE3EnC,EAASlM,IAAI,aAAc,CACvBgwF,OAAQ,CACJ3qF,KAAM,QACN4M,WAAY+9E,IAEhBl0D,QAAS,CACLz2B,KAAM,SACN4M,WAAY6pB,MAGpB5vB,EAASw2C,SAAS,aAAc,CAC5BkqB,UAAW,cAEf1gE,EAASlM,IAAI,cAAe,CACxBwqB,OAAQ,CACJgB,UAAW,CACPtE,SAAU,MAGlBopB,OAAQ,CACJ9kB,UAAW,CACPtE,SAAU,IAGlBwnC,KAAM,CACFziC,WAAY,CACR+jE,OAAQ,CACJrsF,KAAM,eAEV8oD,QAAS,CACLpnD,KAAM,UACN6hB,SAAU,KAItBunC,KAAM,CACFxiC,WAAY,CACR+jE,OAAQ,CACJpsF,GAAI,eAER6oD,QAAS,CACLpnD,KAAM,UACNwkB,OAAQ,SACRzkB,GAAKhE,GAAQ,EAAJA,MAK7B,EAEA,SAA8B8K,GAC1BA,EAASlM,IAAI,SAAU,CACnBitD,aAAa,EACbjhB,QAAS,CACLptC,IAAK,EACLG,MAAO,EACPF,OAAQ,EACRC,KAAM,IAGlB,EA0EA,SAA4BoN,GACxBA,EAASlM,IAAI,QAAS,CAClB6gC,SAAS,EACTj/B,QAAQ,EACR8qB,SAAS,EACToU,aAAa,EACpBi1B,OAAQ,QACR5f,MAAO,EACApV,KAAM,CACFF,SAAS,EACTl1B,UAAW,EACX00C,iBAAiB,EACjBxM,WAAW,EACXC,WAAY,EACZwF,UAAW,CAAC7pB,EAAMxxB,IAAUA,EAAQ0N,UACpCuyC,UAAW,CAACzuB,EAAMxxB,IAAUA,EAAQ+qB,MACpCpnB,QAAQ,GAEZskC,OAAQ,CACJrF,SAAS,EACTkd,KAAM,GACNE,WAAY,EACZ55C,MAAO,GAEX01C,MAAO,CACHlZ,SAAS,EACTjE,KAAM,GACNoP,QAAS,CACLptC,IAAK,EACLC,OAAQ,IAGhBo7B,MAAO,CACHmf,YAAa,EACbC,YAAa,GACbkB,QAAQ,EACR4E,gBAAiB,EACjBF,gBAAiB,GACjBjT,QAAS,EACTnL,SAAS,EACTuW,UAAU,EACVoF,gBAAiB,EACjBsC,YAAa,EACbxoC,SAAU06E,GAAM7hB,WAAWn7D,OAC3B6hE,MAAO,CAAC,EACRj+B,MAAO,CAAC,EACRzD,MAAO,SACPkK,WAAY,OACZiB,mBAAmB,EACnBG,cAAe,4BACfD,gBAAiB,KAGzBtzC,EAASq2C,MAAM,cAAe,QAAS,GAAI,SAC3Cr2C,EAASq2C,MAAM,aAAc,QAAS,GAAI,eAC1Cr2C,EAASq2C,MAAM,eAAgB,QAAS,GAAI,eAC5Cr2C,EAASq2C,MAAM,cAAe,QAAS,GAAI,SAC3Cr2C,EAASw2C,SAAS,QAAS,CACvBkqB,WAAW,EACXzwC,YAAc9tB,IAAQA,EAAKguB,WAAW,YAAchuB,EAAKguB,WAAW,UAAqB,aAAThuB,GAAgC,WAATA,EACvG+tB,WAAa/tB,GAAgB,eAATA,GAAkC,mBAATA,GAAsC,SAATA,IAE9EnC,EAASw2C,SAAS,SAAU,CACxBkqB,UAAW,UAEf1gE,EAASw2C,SAAS,cAAe,CAC7BvmB,YAAc9tB,GAAgB,oBAATA,GAAuC,aAATA,EACnD+tB,WAAa/tB,GAAgB,oBAATA,GAE5B,IAyII,SAASyjF,GAAa1mF,EAAK+Z,EAAMy2B,EAAIm2C,EAASp2C,GAC9C,IAAIwmB,EAAYh9C,EAAKw2B,GAQrB,OAPKwmB,IACDA,EAAYh9C,EAAKw2B,GAAUvwC,EAAIw1D,YAAYjlB,GAAQt3C,MACnDu3C,EAAGt8C,KAAKq8C,IAERwmB,EAAY4vB,IACZA,EAAU5vB,GAEP4vB,CACX,CAIA,SAASC,GAAa5mF,EAAK4oC,EAAMi+C,EAAep7D,GAE5C,IAAI1R,GADJ0R,EAAQA,GAAS,CAAC,GACD1R,KAAO0R,EAAM1R,MAAQ,CAAC,EACnCy2B,EAAK/kB,EAAMilB,eAAiBjlB,EAAMilB,gBAAkB,GACpDjlB,EAAMmd,OAASA,IACf7uB,EAAO0R,EAAM1R,KAAO,CAAC,EACrBy2B,EAAK/kB,EAAMilB,eAAiB,GAC5BjlB,EAAMmd,KAAOA,GAEjB5oC,EAAIC,OACJD,EAAI4oC,KAAOA,EACX,IAAI+9C,EAAU,EACd,MAAMhlE,EAAOklE,EAActzF,OAC3B,IAAID,EAAGwpC,EAAGkT,EAAM82C,EAAOC,EACvB,IAAIzzF,EAAI,EAAGA,EAAIquB,EAAMruB,IAGjB,GAFAwzF,EAAQD,EAAcvzF,GAElBwzF,SAA0C7hF,EAAQ6hF,IAE/C,GAAI7hF,EAAQ6hF,GAGf,IAAIhqD,EAAI,EAAGkT,EAAO82C,EAAMvzF,OAAQupC,EAAIkT,EAAMlT,IACtCiqD,EAAcD,EAAMhqD,GAEhBiqD,SAAsD9hF,EAAQ8hF,KAC9DJ,EAAUD,GAAa1mF,EAAK+Z,EAAMy2B,EAAIm2C,EAASI,SARvDJ,EAAUD,GAAa1mF,EAAK+Z,EAAMy2B,EAAIm2C,EAASG,GAavD9mF,EAAIW,UACJ,MAAM8vC,EAAQD,EAAGj9C,OAAS,EAC1B,GAAIk9C,EAAQo2C,EAActzF,OAAQ,CAC9B,IAAID,EAAI,EAAGA,EAAIm9C,EAAOn9C,WACXymB,EAAKy2B,EAAGl9C,IAEnBk9C,EAAGjgC,OAAO,EAAGkgC,EACjB,CACA,OAAOk2C,CACX,CAQI,SAASK,GAAY10F,EAAOu+C,EAAO53C,GACnC,MAAMgsC,EAAmB3yC,EAAM6yC,wBACzB8hD,EAAsB,IAAVhuF,EAAc1D,KAAKN,IAAIgE,EAAQ,EAAG,IAAO,EAC3D,OAAO1D,KAAKqB,OAAOi6C,EAAQo2C,GAAahiD,GAAoBA,EAAmBgiD,CACnF,CAGI,SAASC,GAAYvqF,EAAQqD,IAC7BA,EAAMA,GAAOrD,EAAOwrB,WAAW,OAC3BloB,OAGJD,EAAImnF,iBACJnnF,EAAIonF,UAAU,EAAG,EAAGzqF,EAAO1D,MAAO0D,EAAOzD,QACzC8G,EAAIW,SACR,CACA,SAAS0mF,GAAUrnF,EAAKnN,EAASH,EAAGC,GAEhC20F,GAAgBtnF,EAAKnN,EAASH,EAAGC,EAAG,KACxC,CAEA,SAAS20F,GAAgBtnF,EAAKnN,EAASH,EAAGC,EAAGgtC,GACzC,IAAI1lC,EAAMstF,EAASC,EAASrmE,EAAM86C,EAAchjE,EAAOwuF,EAAUC,EACjE,MAAMt0E,EAAQvgB,EAAQy+B,WAChBhkB,EAAWza,EAAQya,SACnBujB,EAASh+B,EAAQg+B,OACvB,IAAImxC,GAAO10D,GAAY,GAAK6wE,GAC5B,GAAI/qE,GAA0B,iBAAVA,IAChBnZ,EAAOmZ,EAAM0oE,WACA,8BAAT7hF,GAAiD,+BAATA,GAMxC,OALA+F,EAAIC,OACJD,EAAIwrD,UAAU94D,EAAGC,GACjBqN,EAAImoE,OAAOnG,GACXhiE,EAAI2nF,UAAUv0E,GAAQA,EAAMna,MAAQ,GAAIma,EAAMla,OAAS,EAAGka,EAAMna,MAAOma,EAAMla,aAC7E8G,EAAIW,UAIZ,KAAIhK,MAAMk6B,IAAWA,GAAU,GAA/B,CAIA,OADA7wB,EAAIE,YACGkT,GAEH,QACQusB,EACA3/B,EAAI4nF,QAAQl1F,EAAGC,EAAGgtC,EAAI,EAAG9O,EAAQ,EAAG,EAAGmtD,IAEvCh+E,EAAI+0B,IAAIriC,EAAGC,EAAGk+B,EAAQ,EAAGmtD,IAE7Bh+E,EAAIunD,YACJ,MACJ,IAAK,WACDtuD,EAAQ0mC,EAAIA,EAAI,EAAI9O,EACpB7wB,EAAI80C,OAAOpiD,EAAI6C,KAAK+9B,IAAI0uC,GAAO/oE,EAAOtG,EAAI4C,KAAK69B,IAAI4uC,GAAOnxC,GAC1DmxC,GAAOsc,GACPt+E,EAAI+0C,OAAOriD,EAAI6C,KAAK+9B,IAAI0uC,GAAO/oE,EAAOtG,EAAI4C,KAAK69B,IAAI4uC,GAAOnxC,GAC1DmxC,GAAOsc,GACPt+E,EAAI+0C,OAAOriD,EAAI6C,KAAK+9B,IAAI0uC,GAAO/oE,EAAOtG,EAAI4C,KAAK69B,IAAI4uC,GAAOnxC,GAC1D7wB,EAAIunD,YACJ,MACJ,IAAK,cAQD0U,EAAwB,KAATprC,EACf1P,EAAO0P,EAASorC,EAChBsrB,EAAUhyF,KAAK69B,IAAI4uC,EAAMqc,IAAcl9D,EACvCsmE,EAAWlyF,KAAK69B,IAAI4uC,EAAMqc,KAAe1+C,EAAIA,EAAI,EAAIs8B,EAAe96C,GACpEqmE,EAAUjyF,KAAK+9B,IAAI0uC,EAAMqc,IAAcl9D,EACvCumE,EAAWnyF,KAAK+9B,IAAI0uC,EAAMqc,KAAe1+C,EAAIA,EAAI,EAAIs8B,EAAe96C,GACpEnhB,EAAI+0B,IAAIriC,EAAI+0F,EAAU90F,EAAI60F,EAASvrB,EAAc+F,EAAM1zD,GAAI0zD,EAAMoc,IACjEp+E,EAAI+0B,IAAIriC,EAAIg1F,EAAU/0F,EAAI40F,EAAStrB,EAAc+F,EAAMoc,GAASpc,GAChEhiE,EAAI+0B,IAAIriC,EAAI+0F,EAAU90F,EAAI60F,EAASvrB,EAAc+F,EAAKA,EAAMoc,IAC5Dp+E,EAAI+0B,IAAIriC,EAAIg1F,EAAU/0F,EAAI40F,EAAStrB,EAAc+F,EAAMoc,GAASpc,EAAM1zD,IACtEtO,EAAIunD,YACJ,MACJ,IAAK,OACD,IAAKj6C,EAAU,CACX6T,EAAO5rB,KAAKsyF,QAAUh3D,EACtB53B,EAAQ0mC,EAAIA,EAAI,EAAIxe,EACpBnhB,EAAItC,KAAKhL,EAAIuG,EAAOtG,EAAIwuB,EAAM,EAAIloB,EAAO,EAAIkoB,GAC7C,KACJ,CACA6gD,GAAOqc,GACS,IAAK,UACrBoJ,EAAWlyF,KAAK69B,IAAI4uC,IAAQriC,EAAIA,EAAI,EAAI9O,GACxC02D,EAAUhyF,KAAK69B,IAAI4uC,GAAOnxC,EAC1B22D,EAAUjyF,KAAK+9B,IAAI0uC,GAAOnxC,EAC1B62D,EAAWnyF,KAAK+9B,IAAI0uC,IAAQriC,EAAIA,EAAI,EAAI9O,GACxC7wB,EAAI80C,OAAOpiD,EAAI+0F,EAAU90F,EAAI60F,GAC7BxnF,EAAI+0C,OAAOriD,EAAIg1F,EAAU/0F,EAAI40F,GAC7BvnF,EAAI+0C,OAAOriD,EAAI+0F,EAAU90F,EAAI60F,GAC7BxnF,EAAI+0C,OAAOriD,EAAIg1F,EAAU/0F,EAAI40F,GAC7BvnF,EAAIunD,YACJ,MACJ,IAAK,WACDya,GAAOqc,GACS,IAAK,QACrBoJ,EAAWlyF,KAAK69B,IAAI4uC,IAAQriC,EAAIA,EAAI,EAAI9O,GACxC02D,EAAUhyF,KAAK69B,IAAI4uC,GAAOnxC,EAC1B22D,EAAUjyF,KAAK+9B,IAAI0uC,GAAOnxC,EAC1B62D,EAAWnyF,KAAK+9B,IAAI0uC,IAAQriC,EAAIA,EAAI,EAAI9O,GACxC7wB,EAAI80C,OAAOpiD,EAAI+0F,EAAU90F,EAAI60F,GAC7BxnF,EAAI+0C,OAAOriD,EAAI+0F,EAAU90F,EAAI60F,GAC7BxnF,EAAI80C,OAAOpiD,EAAIg1F,EAAU/0F,EAAI40F,GAC7BvnF,EAAI+0C,OAAOriD,EAAIg1F,EAAU/0F,EAAI40F,GAC7B,MACJ,IAAK,OACDE,EAAWlyF,KAAK69B,IAAI4uC,IAAQriC,EAAIA,EAAI,EAAI9O,GACxC02D,EAAUhyF,KAAK69B,IAAI4uC,GAAOnxC,EAC1B22D,EAAUjyF,KAAK+9B,IAAI0uC,GAAOnxC,EAC1B62D,EAAWnyF,KAAK+9B,IAAI0uC,IAAQriC,EAAIA,EAAI,EAAI9O,GACxC7wB,EAAI80C,OAAOpiD,EAAI+0F,EAAU90F,EAAI60F,GAC7BxnF,EAAI+0C,OAAOriD,EAAI+0F,EAAU90F,EAAI60F,GAC7BxnF,EAAI80C,OAAOpiD,EAAIg1F,EAAU/0F,EAAI40F,GAC7BvnF,EAAI+0C,OAAOriD,EAAIg1F,EAAU/0F,EAAI40F,GAC7BvlB,GAAOqc,GACPoJ,EAAWlyF,KAAK69B,IAAI4uC,IAAQriC,EAAIA,EAAI,EAAI9O,GACxC02D,EAAUhyF,KAAK69B,IAAI4uC,GAAOnxC,EAC1B22D,EAAUjyF,KAAK+9B,IAAI0uC,GAAOnxC,EAC1B62D,EAAWnyF,KAAK+9B,IAAI0uC,IAAQriC,EAAIA,EAAI,EAAI9O,GACxC7wB,EAAI80C,OAAOpiD,EAAI+0F,EAAU90F,EAAI60F,GAC7BxnF,EAAI+0C,OAAOriD,EAAI+0F,EAAU90F,EAAI60F,GAC7BxnF,EAAI80C,OAAOpiD,EAAIg1F,EAAU/0F,EAAI40F,GAC7BvnF,EAAI+0C,OAAOriD,EAAIg1F,EAAU/0F,EAAI40F,GAC7B,MACJ,IAAK,OACDA,EAAU5nD,EAAIA,EAAI,EAAIpqC,KAAK69B,IAAI4uC,GAAOnxC,EACtC22D,EAAUjyF,KAAK+9B,IAAI0uC,GAAOnxC,EAC1B7wB,EAAI80C,OAAOpiD,EAAI60F,EAAS50F,EAAI60F,GAC5BxnF,EAAI+0C,OAAOriD,EAAI60F,EAAS50F,EAAI60F,GAC5B,MACJ,IAAK,OACDxnF,EAAI80C,OAAOpiD,EAAGC,GACdqN,EAAI+0C,OAAOriD,EAAI6C,KAAK69B,IAAI4uC,IAAQriC,EAAIA,EAAI,EAAI9O,GAASl+B,EAAI4C,KAAK+9B,IAAI0uC,GAAOnxC,GACzE,MACJ,KAAK,EACD7wB,EAAIunD,YAGZvnD,EAAIylB,OACA5yB,EAAQyN,YAAc,GACtBN,EAAIg1C,QA3GR,CA6GJ,CAOI,SAAS8yC,GAAeh1F,EAAOg4B,EAAMoV,GAErC,OADAA,EAASA,GAAU,IACXpV,GAAQh4B,GAASA,EAAMJ,EAAIo4B,EAAKp3B,KAAOwsC,GAAUptC,EAAMJ,EAAIo4B,EAAKn3B,MAAQusC,GAAUptC,EAAMH,EAAIm4B,EAAKt3B,IAAM0sC,GAAUptC,EAAMH,EAAIm4B,EAAKr3B,OAASysC,CACrJ,CACA,SAAS6nD,GAAS/nF,EAAK8qB,GACnB9qB,EAAIC,OACJD,EAAIE,YACJF,EAAItC,KAAKotB,EAAKp3B,KAAMo3B,EAAKt3B,IAAKs3B,EAAKn3B,MAAQm3B,EAAKp3B,KAAMo3B,EAAKr3B,OAASq3B,EAAKt3B,KACzEwM,EAAI2qB,MACR,CACA,SAASq9D,GAAWhoF,GAChBA,EAAIW,SACR,CAGI,SAASsnF,GAAejoF,EAAKpG,EAAU+B,EAAQusF,EAAM91F,GACrD,IAAKwH,EACD,OAAOoG,EAAI+0C,OAAOp5C,EAAOjJ,EAAGiJ,EAAOhJ,GAEvC,GAAa,WAATP,EAAmB,CACnB,MAAM+1F,GAAYvuF,EAASlH,EAAIiJ,EAAOjJ,GAAK,EAC3CsN,EAAI+0C,OAAOozC,EAAUvuF,EAASjH,GAC9BqN,EAAI+0C,OAAOozC,EAAUxsF,EAAOhJ,EAChC,KAAoB,UAATP,KAAuB81F,EAC9BloF,EAAI+0C,OAAOn7C,EAASlH,EAAGiJ,EAAOhJ,GAE9BqN,EAAI+0C,OAAOp5C,EAAOjJ,EAAGkH,EAASjH,GAElCqN,EAAI+0C,OAAOp5C,EAAOjJ,EAAGiJ,EAAOhJ,EAChC,CAGI,SAASy1F,GAAepoF,EAAKpG,EAAU+B,EAAQusF,GAC/C,IAAKtuF,EACD,OAAOoG,EAAI+0C,OAAOp5C,EAAOjJ,EAAGiJ,EAAOhJ,GAEvCqN,EAAIqoF,cAAcH,EAAOtuF,EAAS0uF,KAAO1uF,EAAS2uF,KAAML,EAAOtuF,EAAS4uF,KAAO5uF,EAAS6uF,KAAMP,EAAOvsF,EAAO4sF,KAAO5sF,EAAO2sF,KAAMJ,EAAOvsF,EAAO8sF,KAAO9sF,EAAO6sF,KAAM7sF,EAAOjJ,EAAGiJ,EAAOhJ,EACvL,CAkBA,SAAS+1F,GAAa1oF,EAAKtN,EAAGC,EAAGunC,EAAMtoC,GACnC,GAAIA,EAAK4lE,eAAiB5lE,EAAK+2F,UAAW,CAOtC,MAAMC,EAAU5oF,EAAIw1D,YAAYt7B,GAC1BxmC,EAAOhB,EAAIk2F,EAAQC,sBACnBl1F,EAAQjB,EAAIk2F,EAAQE,uBACpBt1F,EAAMb,EAAIi2F,EAAQG,wBAClBt1F,EAASd,EAAIi2F,EAAQI,yBACrBC,EAAcr3F,EAAK4lE,eAAiBhkE,EAAMC,GAAU,EAAIA,EAC9DuM,EAAIQ,YAAcR,EAAIG,UACtBH,EAAIE,YACJF,EAAIO,UAAY3O,EAAKs3F,iBAAmB,EACxClpF,EAAI80C,OAAOphD,EAAMu1F,GACjBjpF,EAAI+0C,OAAOphD,EAAOs1F,GAClBjpF,EAAIg1C,QACR,CACJ,CACA,SAASm0C,GAAanpF,EAAKpO,GACvB,MAAMw3F,EAAWppF,EAAIG,UACrBH,EAAIG,UAAYvO,EAAKgsB,MACrB5d,EAAIK,SAASzO,EAAK8B,KAAM9B,EAAK4B,IAAK5B,EAAKqH,MAAOrH,EAAKsH,QACnD8G,EAAIG,UAAYipF,CACpB,CAGI,SAASC,GAAWrpF,EAAKwxB,EAAM9+B,EAAGC,EAAGi2C,EAAMh3C,EAAO,CAAC,GACnD,MAAM8oE,EAAQz1D,EAAQusB,GAAQA,EAAO,CACjCA,GAEEwjB,EAASpjD,EAAKkiD,YAAc,GAA0B,KAArBliD,EAAKgiD,YAC5C,IAAItgD,EAAG4mC,EAIP,IAHAl6B,EAAIC,OACJD,EAAI4oC,KAAOA,EAAK2H,OAtDpB,SAAuBvwC,EAAKpO,GACpBA,EAAK0iD,aACLt0C,EAAIwrD,UAAU55D,EAAK0iD,YAAY,GAAI1iD,EAAK0iD,YAAY,IAEnDunC,EAAcjqF,EAAK0b,WACpBtN,EAAImoE,OAAOv2E,EAAK0b,UAEhB1b,EAAKgsB,QACL5d,EAAIG,UAAYvO,EAAKgsB,OAErBhsB,EAAKwhD,YACLpzC,EAAIozC,UAAYxhD,EAAKwhD,WAErBxhD,EAAK2hD,eACLvzC,EAAIuzC,aAAe3hD,EAAK2hD,aAEhC,CAuCI+1C,CAActpF,EAAKpO,GACf0B,EAAI,EAAGA,EAAIonE,EAAMnnE,SAAUD,EAC3B4mC,EAAOwgC,EAAMpnE,GACT1B,EAAKoiD,UACLm1C,GAAanpF,EAAKpO,EAAKoiD,UAEvBgB,IACIpjD,EAAKgiD,cACL5zC,EAAIQ,YAAc5O,EAAKgiD,aAEtBioC,EAAcjqF,EAAKkiD,eACpB9zC,EAAIO,UAAY3O,EAAKkiD,aAEzB9zC,EAAIupF,WAAWrvD,EAAMxnC,EAAGC,EAAGf,EAAKsiC,WAEpCl0B,EAAIy3D,SAASv9B,EAAMxnC,EAAGC,EAAGf,EAAKsiC,UAC9Bw0D,GAAa1oF,EAAKtN,EAAGC,EAAGunC,EAAMtoC,GAC9Be,GAAK+2B,OAAOkf,EAAKC,YAErB7oC,EAAIW,SACR,CAKI,SAAS6oF,GAAmBxpF,EAAKtC,GACjC,MAAM,EAAEhL,EAAE,EAAEC,EAAE,EAAEgtC,EAAE,EAAEE,EAAE,OAAEhP,GAAYnzB,EAEpCsC,EAAI+0B,IAAIriC,EAAIm+B,EAAOw7B,QAAS15D,EAAIk+B,EAAOw7B,QAASx7B,EAAOw7B,SAAU+xB,GAAS9vE,IAAI,GAE9EtO,EAAI+0C,OAAOriD,EAAGC,EAAIktC,EAAIhP,EAAO07B,YAE7BvsD,EAAI+0B,IAAIriC,EAAIm+B,EAAO07B,WAAY55D,EAAIktC,EAAIhP,EAAO07B,WAAY17B,EAAO07B,WAAYj+C,GAAI8vE,IAAS,GAE1Fp+E,EAAI+0C,OAAOriD,EAAIitC,EAAI9O,EAAO27B,YAAa75D,EAAIktC,GAE3C7/B,EAAI+0B,IAAIriC,EAAIitC,EAAI9O,EAAO27B,YAAa75D,EAAIktC,EAAIhP,EAAO27B,YAAa37B,EAAO27B,YAAa4xB,GAAS,GAAG,GAEhGp+E,EAAI+0C,OAAOriD,EAAIitC,EAAGhtC,EAAIk+B,EAAOy7B,UAE7BtsD,EAAI+0B,IAAIriC,EAAIitC,EAAI9O,EAAOy7B,SAAU35D,EAAIk+B,EAAOy7B,SAAUz7B,EAAOy7B,SAAU,GAAI8xB,IAAS,GAEpFp+E,EAAI+0C,OAAOriD,EAAIm+B,EAAOw7B,QAAS15D,EACnC,CAEA,MAAM82F,GAAc,uCACdC,GAAa,wEAWf,SAASC,GAAax1E,EAAOgN,GAC7B,MAAMyoE,GAAW,GAAKz1E,GAAO01E,MAAMJ,IACnC,IAAKG,GAA0B,WAAfA,EAAQ,GACpB,OAAc,IAAPzoE,EAGX,OADAhN,GAASy1E,EAAQ,GACVA,EAAQ,IACX,IAAK,KACD,OAAOz1E,EACX,IAAK,IACDA,GAAS,IAGjB,OAAOgN,EAAOhN,CAClB,CACA,MAAM21E,GAAgB9zF,IAAKA,GAAK,EAChC,SAAS+zF,GAAkB51E,EAAO/F,GAC9B,MAAMi5B,EAAM,CAAC,EACP2iD,EAAWjO,EAAS3tE,GACpB/a,EAAO22F,EAAW52F,OAAOC,KAAK+a,GAASA,EACvC67E,EAAOlO,EAAS5nE,GAAS61E,EAAYr0F,GAAOwmF,EAAehoE,EAAMxe,GAAOwe,EAAM/F,EAAMzY,KAAWA,GAAOwe,EAAMxe,GAAQ,IAAIwe,EAC9H,IAAK,MAAMxe,KAAQtC,EACfg0C,EAAI1xC,GAAQm0F,GAAaG,EAAKt0F,IAElC,OAAO0xC,CACX,CAQI,SAAS6iD,GAAO/1E,GAChB,OAAO41E,GAAkB51E,EAAO,CAC5B3gB,IAAK,IACLG,MAAO,IACPF,OAAQ,IACRC,KAAM,KAEd,CAOI,SAASy2F,GAAch2E,GACvB,OAAO41E,GAAkB51E,EAAO,CAC5B,UACA,WACA,aACA,eAER,CAQI,SAASi2E,GAAUj2E,GACnB,MAAMhP,EAAM+kF,GAAO/1E,GAGnB,OAFAhP,EAAIlM,MAAQkM,EAAIzR,KAAOyR,EAAIxR,MAC3BwR,EAAIjM,OAASiM,EAAI3R,IAAM2R,EAAI1R,OACpB0R,CACX,CAOI,SAASklF,GAAOx3F,EAAS+C,GACzB/C,EAAUA,GAAW,CAAC,EACtB+C,EAAWA,GAAYkL,GAAS8nC,KAChC,IAAIznB,EAAOg7D,EAAetpF,EAAQsuB,KAAMvrB,EAASurB,MAC7B,iBAATA,IACPA,EAAOk5D,SAASl5D,EAAM,KAE1B,IAAI/N,EAAQ+oE,EAAetpF,EAAQugB,MAAOxd,EAASwd,OAC/CA,KAAW,GAAKA,GAAOy2E,MAAMH,MAC7BtoF,QAAQC,KAAK,kCAAoC+R,EAAQ,KACzDA,OAAQ7gB,GAEZ,MAAMq2C,EAAO,CACTq9C,OAAQ9J,EAAetpF,EAAQozF,OAAQrwF,EAASqwF,QAChDp9C,WAAY8gD,GAAaxN,EAAetpF,EAAQg2C,WAAYjzC,EAASizC,YAAa1nB,GAClFA,OACA/N,QACAkiB,OAAQ6mD,EAAetpF,EAAQyiC,OAAQ1/B,EAAS0/B,QAChDib,OAAQ,IAGZ,OADA3H,EAAK2H,OAtdL,SAAsB3H,GACtB,OAAKA,GAAQizC,EAAcjzC,EAAKznB,OAAS06D,EAAcjzC,EAAKq9C,QACjD,MAEHr9C,EAAKx1B,MAAQw1B,EAAKx1B,MAAQ,IAAM,KAAOw1B,EAAKtT,OAASsT,EAAKtT,OAAS,IAAM,IAAMsT,EAAKznB,KAAO,MAAQynB,EAAKq9C,MACpH,CAidkBqE,CAAa1hD,GACpBA,CACX,CAWI,SAAS2hD,GAAQC,EAAQ5lF,EAASuB,EAAOskF,GACzC,IACIn3F,EAAGquB,EAAMxN,EADTu2E,GAAY,EAEhB,IAAIp3F,EAAI,EAAGquB,EAAO6oE,EAAOj3F,OAAQD,EAAIquB,IAAQruB,EAEzC,GADA6gB,EAAQq2E,EAAOl3F,QACDf,IAAV4hB,SAGY5hB,IAAZqS,GAA0C,mBAAVuP,IAChCA,EAAQA,EAAMvP,GACd8lF,GAAY,QAEFn4F,IAAV4T,GAAuBlB,EAAQkP,KAC/BA,EAAQA,EAAMhO,EAAQgO,EAAM5gB,QAC5Bm3F,GAAY,QAEFn4F,IAAV4hB,GAIA,OAHIs2E,IAASC,IACTD,EAAKC,WAAY,GAEdv2E,CAGnB,CAMI,SAASw2E,GAAUC,EAAQ7/C,EAAOrV,GAClC,MAAM,IAAExgC,EAAI,IAAED,GAAS21F,EACjBhoD,EAAS25C,EAAYxxC,GAAQ91C,EAAMC,GAAO,GAC1C21F,EAAW,CAAC12E,EAAO5S,IAAMm0B,GAAyB,IAAVvhB,EAAc,EAAIA,EAAQ5S,EACxE,MAAO,CACHrM,IAAK21F,EAAS31F,GAAMK,KAAK8D,IAAIupC,IAC7B3tC,IAAK41F,EAAS51F,EAAK2tC,GAE3B,CACA,SAASkoD,GAAcC,EAAenmF,GAClC,OAAOxR,OAAOgR,OAAOhR,OAAO4T,OAAO+jF,GAAgBnmF,EACvD,CAWI,SAASomF,GAAgBhjE,EAAQ6D,EAAW,CAC5C,IACDo/D,EAAYr1F,EAAUs1F,EAAY,KAAIljE,EAAO,KAC5C,MAAMmjE,EAAkBF,GAAcjjE,OACd,IAAbpyB,IACPA,EAAWw1F,GAAS,YAAapjE,IAErC,MAAMyD,EAAQ,CACV,CAAC4/D,OAAOC,aAAc,SACtBn/D,YAAY,EACZo/D,QAASvjE,EACTwjE,YAAaL,EACb3pB,UAAW5rE,EACX+8D,WAAYu4B,EACZh1C,SAAWD,GAAQ+0C,GAAgB,CAC3B/0C,KACGjuB,GACJ6D,EAAUs/D,EAAiBv1F,IAEtC,OAAO,IAAI61F,MAAMhgE,EAAO,CAGpBigE,eAAe,CAAC/vF,EAAQhG,YACbgG,EAAOhG,UACPgG,EAAOgwF,aACP3jE,EAAO,GAAGryB,IACV,GAIXpB,IAAI,CAACoH,EAAQhG,IACFi2F,GAAQjwF,EAAQhG,GAAM,IAyOzC,SAA8BA,EAAMk2B,EAAU7D,EAAQ8d,GAClD,IAAI3xB,EACJ,IAAK,MAAMlL,KAAU4iB,EAEjB,GADA1X,EAAQi3E,GAASS,GAAQ5iF,EAAQtT,GAAOqyB,QACnB,IAAV7T,EACP,OAAO23E,GAAiBn2F,EAAMwe,GAAS43E,GAAkB/jE,EAAQ8d,EAAOnwC,EAAMwe,GAASA,CAGnG,CAjP6C63E,CAAqBr2F,EAAMk2B,EAAU7D,EAAQrsB,KAKlFswF,yBAAyB,CAACtwF,EAAQhG,IACvBu2F,QAAQD,yBAAyBtwF,EAAO4vF,QAAQ,GAAI51F,GAI/D4gD,eAAe,IACJ21C,QAAQ31C,eAAevuB,EAAO,IAIzC/K,IAAI,CAACthB,EAAQhG,IACFw2F,GAAqBxwF,GAAQ4mC,SAAS5sC,GAIjDy2F,QAASzwF,GACEwwF,GAAqBxwF,GAIhC/G,IAAK+G,EAAQhG,EAAMwe,GACf,MAAMk4E,EAAU1wF,EAAO2wF,WAAa3wF,EAAO2wF,SAAWpB,KAGtD,OAFAvvF,EAAOhG,GAAQ02F,EAAQ12F,GAAQwe,SACxBxY,EAAOgwF,OACP,CACX,GAER,CAQI,SAASY,GAAezmD,EAAOlhC,EAAS4nF,EAAUjvC,GAClD,MAAM9xB,EAAQ,CACVU,YAAY,EACZ6uB,OAAQlV,EACR2mD,SAAU7nF,EACV8nF,UAAWF,EACXhqD,OAAQ,IAAIoZ,IACZxC,aAAcA,GAAatT,EAAOyX,GAClClT,WAAarqC,GAAMusF,GAAezmD,EAAO9lC,EAAKwsF,EAAUjvC,GACxDrH,SAAWD,GAAQs2C,GAAezmD,EAAMoQ,SAASD,GAAQrxC,EAAS4nF,EAAUjvC,IAEhF,OAAO,IAAIkuC,MAAMhgE,EAAO,CAGpBigE,eAAe,CAAC/vF,EAAQhG,YACbgG,EAAOhG,UACPmwC,EAAMnwC,IACN,GAIXpB,IAAI,CAACoH,EAAQhG,EAAMg3F,IACRf,GAAQjwF,EAAQhG,GAAM,IA6DzC,SAA6BgG,EAAQhG,EAAMg3F,GACvC,MAAM,OAAE3xC,EAAO,SAAEyxC,EAAS,UAAEC,EAAYtzC,aAAc/B,GAAiB17C,EACvE,IAAIwY,EAAQ6mC,EAAOrlD,GAYnB,OAVIkoF,GAAW1pE,IAAUkjC,EAAY6F,aAAavnD,KAC9Cwe,EAWR,SAA4Bxe,EAAMi3F,EAAUjxF,EAAQgxF,GAChD,MAAM,OAAE3xC,EAAO,SAAEyxC,EAAS,UAAEC,EAAU,OAAElqD,GAAY7mC,EACpD,GAAI6mC,EAAOvlB,IAAItnB,GACX,MAAM,IAAI+P,MAAM,uBAAyBV,MAAMzM,KAAKiqC,GAAQ5tB,KAAK,MAAQ,KAAOjf,GAEpF6sC,EAAOjhC,IAAI5L,GACX,IAAIwe,EAAQy4E,EAASH,EAAUC,GAAaC,GAM5C,OALAnqD,EAAOx+B,OAAOrO,GACVm2F,GAAiBn2F,EAAMwe,KAEvBA,EAAQ43E,GAAkB/wC,EAAOuwC,QAASvwC,EAAQrlD,EAAMwe,IAErDA,CACX,CAxBgB04E,CAAmBl3F,EAAMwe,EAAOxY,EAAQgxF,IAEhD1nF,EAAQkP,IAAUA,EAAM5gB,SACxB4gB,EAsBR,SAAuBxe,EAAMwe,EAAOxY,EAAQwhD,GACxC,MAAM,OAAEnC,EAAO,SAAEyxC,EAAS,UAAEC,EAAYtzC,aAAc/B,GAAiB17C,EACvE,QAA8B,IAAnB8wF,EAAStmF,OAAyBg3C,EAAYxnD,GACrD,OAAOwe,EAAMs4E,EAAStmF,MAAQgO,EAAM5gB,QACjC,GAAIwoF,EAAS5nE,EAAM,IAAK,CAE3B,MAAMsZ,EAAMtZ,EACN6T,EAASgzB,EAAOuwC,QAAQz5E,QAAQ5W,GAAIA,IAAMuyB,IAChDtZ,EAAQ,GACR,IAAK,MAAM8C,KAAQwW,EAAI,CACnB,MAAMsvB,EAAWgvC,GAAkB/jE,EAAQgzB,EAAQrlD,EAAMshB,GACzD9C,EAAMjgB,KAAKq4F,GAAexvC,EAAU0vC,EAAUC,GAAaA,EAAU/2F,GAAO0hD,GAChF,CACJ,CACA,OAAOljC,CACX,CArCgB24E,CAAcn3F,EAAMwe,EAAOxY,EAAQ07C,EAAY8F,cAEvD2uC,GAAiBn2F,EAAMwe,KAEvBA,EAAQo4E,GAAep4E,EAAOs4E,EAAUC,GAAaA,EAAU/2F,GAAO0hD,IAEnEljC,CACX,CA5E6C44E,CAAoBpxF,EAAQhG,EAAMg3F,KAKvEV,yBAAyB,CAACtwF,EAAQhG,IACvBgG,EAAOy9C,aAAagB,QAAU8xC,QAAQjvE,IAAI6oB,EAAOnwC,GAAQ,CAC5Dw4D,YAAY,EACZD,cAAc,QACd37D,EAAY25F,QAAQD,yBAAyBnmD,EAAOnwC,GAI5D4gD,eAAe,IACJ21C,QAAQ31C,eAAezQ,GAIlC7oB,IAAI,CAACthB,EAAQhG,IACFu2F,QAAQjvE,IAAI6oB,EAAOnwC,GAI9By2F,QAAQ,IACGF,QAAQE,QAAQtmD,GAI3BlxC,IAAI,CAAC+G,EAAQhG,EAAMwe,KACf2xB,EAAMnwC,GAAQwe,SACPxY,EAAOhG,IACP,IAGnB,CAGI,SAASyjD,GAAatT,EAAOhlC,EAAW,CACxCo5C,YAAY,EACZC,WAAW,IAEX,MAAM,YAAEppB,EAAajwB,EAASo5C,WAAW,WAAElpB,EAAYlwB,EAASq5C,UAAU,SAAE6yC,EAAUlsF,EAASs5C,SAAatU,EAC5G,MAAO,CACHsU,QAAS4yC,EACT9yC,WAAYnpB,EACZopB,UAAWnpB,EACXksB,aAAc2gC,GAAW9sD,GAAeA,EAAc,IAAIA,EAC1DosB,YAAa0gC,GAAW7sD,GAAcA,EAAa,IAAIA,EAE/D,CACA,MAAM66D,GAAU,CAAC5iF,EAAQhG,IAAOgG,EAASA,EAAS00E,GAAY16E,GAAQA,EAChE6oF,GAAmB,CAACn2F,EAAMwe,IAAQ4nE,EAAS5nE,IAAmB,aAATxe,IAAyD,OAAjCvC,OAAOmjD,eAAepiC,IAAmBA,EAAMlN,cAAgB7T,QAClJ,SAASw4F,GAAQjwF,EAAQhG,EAAM40F,GAC3B,GAAIn3F,OAAO6N,UAAUC,eAAeC,KAAKxF,EAAQhG,GAC7C,OAAOgG,EAAOhG,GAElB,MAAMwe,EAAQo2E,IAGd,OADA5uF,EAAOhG,GAAQwe,EACRA,CACX,CA+CA,SAAS84E,GAAgBr3F,EAAUD,EAAMwe,GACrC,OAAO0pE,GAAWjoF,GAAYA,EAASD,EAAMwe,GAASve,CAC1D,CACA,MAAMs3F,GAAW,CAACl7F,EAAK8V,KAAiB,IAAR9V,EAAe8V,EAAwB,iBAAR9V,EAAmBurF,EAAiBz1E,EAAQ9V,QAAOO,EAClH,SAAS46F,GAAUv4F,EAAKw4F,EAAcp7F,EAAKq7F,EAAgBl5E,GACvD,IAAK,MAAMrM,KAAUslF,EAAa,CAC9B,MAAMn3C,EAAQi3C,GAASl7F,EAAK8V,GAC5B,GAAImuC,EAAO,CACPrhD,EAAI2M,IAAI00C,GACR,MAAMrgD,EAAWq3F,GAAgBh3C,EAAMurB,UAAWxvE,EAAKmiB,GACvD,QAAwB,IAAbve,GAA4BA,IAAa5D,GAAO4D,IAAay3F,EAGpE,OAAOz3F,CAEf,MAAO,IAAc,IAAVqgD,QAA6C,IAAnBo3C,GAAkCr7F,IAAQq7F,EAG3E,OAAO,IAEf,CACA,OAAO,CACX,CACA,SAAStB,GAAkBqB,EAAcrwC,EAAUpnD,EAAMwe,GACrD,MAAM82E,EAAaluC,EAASyuC,YACtB51F,EAAWq3F,GAAgBlwC,EAASykB,UAAW7rE,EAAMwe,GACrDm5E,EAAY,IACXF,KACAnC,GAEDr2F,EAAM,IAAIgnD,IAChBhnD,EAAI2M,IAAI4S,GACR,IAAIniB,EAAMu7F,GAAiB34F,EAAK04F,EAAW33F,EAAMC,GAAYD,EAAMwe,GACnE,OAAY,OAARniB,SAGoB,IAAb4D,GAA4BA,IAAaD,IAChD3D,EAAMu7F,GAAiB34F,EAAK04F,EAAW13F,EAAU5D,EAAKmiB,GAC1C,OAARniB,KAIDg5F,GAAgBhmF,MAAMzM,KAAK3D,GAAM,CACpC,IACDq2F,EAAYr1F,GAAU,IAQ7B,SAAsBmnD,EAAUpnD,EAAMwe,GAClC,MAAMrM,EAASi1C,EAAS4V,aAClBh9D,KAAQmS,IACVA,EAAOnS,GAAQ,CAAC,GAEpB,MAAMgG,EAASmM,EAAOnS,GACtB,OAAIsP,EAAQtJ,IAAWogF,EAAS5nE,GAErBA,EAEJxY,GAAU,CAAC,CACtB,CAnBiC6xF,CAAazwC,EAAUpnD,EAAMwe,IAC9D,CACA,SAASo5E,GAAiB34F,EAAK04F,EAAWt7F,EAAK4D,EAAUqhB,GACrD,KAAMjlB,GACFA,EAAMm7F,GAAUv4F,EAAK04F,EAAWt7F,EAAK4D,EAAUqhB,GAEnD,OAAOjlB,CACX,CAsBA,SAASo5F,GAASp5F,EAAKg2B,GACnB,IAAK,MAAMiuB,KAASjuB,EAAO,CACvB,IAAKiuB,EACD,SAEJ,MAAM9hC,EAAQ8hC,EAAMjkD,GACpB,QAAqB,IAAVmiB,EACP,OAAOA,CAEf,CACJ,CACA,SAASg4E,GAAqBxwF,GAC1B,IAAItI,EAAOsI,EAAOgwF,MAIlB,OAHKt4F,IACDA,EAAOsI,EAAOgwF,MAItB,SAAkC3jE,GAC9B,MAAMpzB,EAAM,IAAIgnD,IAChB,IAAK,MAAM3F,KAASjuB,EAChB,IAAK,MAAMh2B,KAAOoB,OAAOC,KAAK4iD,GAAOnkC,QAAQy7C,IAAKA,EAAEt8B,WAAW,OAC3Dr8B,EAAI2M,IAAIvP,GAGhB,OAAOgT,MAAMzM,KAAK3D,EACtB,CAZ8B64F,CAAyB9xF,EAAO4vF,UAEnDl4F,CACX,CAUA,SAASq6F,GAA4BxrE,EAAMnI,EAAMhZ,EAAO2V,GACpD,MAAM,OAAEwM,GAAYhB,GACd,IAAElwB,EAAK,KAAS+T,KAAK0e,SACrB1B,EAAS,IAAI/d,MAAM0R,GACzB,IAAIpjB,EAAGquB,EAAMxb,EAAO8Q,EACpB,IAAI3jB,EAAI,EAAGquB,EAAOjL,EAAOpjB,EAAIquB,IAAQruB,EACjC6S,EAAQ7S,EAAIyN,EACZkW,EAAO8C,EAAK5T,GACZ4c,EAAOzvB,GAAK,CACR4oB,EAAGgH,EAAOzsB,MAAM8mF,EAAiBtmE,EAAMjlB,GAAMmU,IAGrD,OAAO4c,CACX,CAEA,MAAM4qE,GAAUjkE,OAAOikE,SAAW,MAC5BC,GAAW,CAACj0D,EAAQrmC,IAAIA,EAAIqmC,EAAOpmC,SAAWomC,EAAOrmC,GAAGwmC,MAAQH,EAAOrmC,GACvEu6F,GAAgBxnE,GAA0B,MAAdA,EAAoB,IAAM,IAC5D,SAASynE,GAAY/yD,EAAYgzD,EAAaC,EAAYr7E,GAItD,MAAM/Y,EAAWmhC,EAAWjB,KAAOi0D,EAAchzD,EAC3CoiD,EAAU4Q,EACV70D,EAAO80D,EAAWl0D,KAAOi0D,EAAcC,EACvCC,EAAMnO,GAAsB3C,EAASvjF,GACrCs0F,EAAMpO,GAAsB5mD,EAAMikD,GACxC,IAAIgR,EAAMF,GAAOA,EAAMC,GACnBE,EAAMF,GAAOD,EAAMC,GAEvBC,EAAMx3F,MAAMw3F,GAAO,EAAIA,EACvBC,EAAMz3F,MAAMy3F,GAAO,EAAIA,EACvB,MAAMC,EAAK17E,EAAIw7E,EACTG,EAAK37E,EAAIy7E,EACf,MAAO,CACHx0F,SAAU,CACNlH,EAAGyqF,EAAQzqF,EAAI27F,GAAMn1D,EAAKxmC,EAAIkH,EAASlH,GACvCC,EAAGwqF,EAAQxqF,EAAI07F,GAAMn1D,EAAKvmC,EAAIiH,EAASjH,IAE3CumC,KAAM,CACFxmC,EAAGyqF,EAAQzqF,EAAI47F,GAAMp1D,EAAKxmC,EAAIkH,EAASlH,GACvCC,EAAGwqF,EAAQxqF,EAAI27F,GAAMp1D,EAAKvmC,EAAIiH,EAASjH,IAGnD,CAoFA,SAAS47F,GAAgBhvB,EAAIrqE,EAAKD,GAC9B,OAAOM,KAAKN,IAAIM,KAAKL,IAAIqqE,EAAItqE,GAAMC,EACvC,CAwBI,SAASs5F,GAA2B70D,EAAQ9mC,EAASi4B,EAAMhM,EAAMuH,GACjE,IAAI/yB,EAAGquB,EAAM7uB,EAAO27F,EAKpB,GAHI57F,EAAQonC,WACRN,EAASA,EAAO7nB,QAAQytD,IAAMA,EAAGzlC,QAEE,aAAnCjnC,EAAQ01D,wBAzDZ,SAA6B5uB,EAAQtT,EAAY,KACjD,MAAMqoE,EAAYb,GAAaxnE,GACzBsoE,EAAYh1D,EAAOpmC,OACnBq7F,EAAS5pF,MAAM2pF,GAAWlpE,KAAK,GAC/BopE,EAAK7pF,MAAM2pF,GAEjB,IAAIr7F,EAAGw7F,EAAaC,EAChBC,EAAapB,GAASj0D,EAAQ,GAClC,IAAIrmC,EAAI,EAAGA,EAAIq7F,IAAar7F,EAIxB,GAHAw7F,EAAcC,EACdA,EAAeC,EACfA,EAAapB,GAASj0D,EAAQrmC,EAAI,GAC7By7F,EAAL,CAGA,GAAIC,EAAY,CACZ,MAAMC,EAAaD,EAAW3oE,GAAa0oE,EAAa1oE,GAExDuoE,EAAOt7F,GAAoB,IAAf27F,GAAoBD,EAAWN,GAAaK,EAAaL,IAAcO,EAAa,CACpG,CACAJ,EAAGv7F,GAAMw7F,EAA2BE,EAA6BxQ,GAAKoQ,EAAOt7F,EAAI,MAAQkrF,GAAKoQ,EAAOt7F,IAAM,GAAKs7F,EAAOt7F,EAAI,GAAKs7F,EAAOt7F,IAAM,EAA5Fs7F,EAAOt7F,EAAI,GAArCs7F,EAAOt7F,EAN9B,EAtEJ,SAAwBqmC,EAAQi1D,EAAQC,GACxC,MAAMF,EAAYh1D,EAAOpmC,OACzB,IAAI27F,EAAQC,EAAOC,EAAMC,EAAkBN,EACvCC,EAAapB,GAASj0D,EAAQ,GAClC,IAAI,IAAIrmC,EAAI,EAAGA,EAAIq7F,EAAY,IAAKr7F,EAChCy7F,EAAeC,EACfA,EAAapB,GAASj0D,EAAQrmC,EAAI,GAC7By7F,GAAiBC,IAGlBvQ,GAAamQ,EAAOt7F,GAAI,EAAGq6F,IAC3BkB,EAAGv7F,GAAKu7F,EAAGv7F,EAAI,GAAK,GAGxB47F,EAASL,EAAGv7F,GAAKs7F,EAAOt7F,GACxB67F,EAAQN,EAAGv7F,EAAI,GAAKs7F,EAAOt7F,GAC3B+7F,EAAmB95F,KAAKmoC,IAAIwxD,EAAQ,GAAK35F,KAAKmoC,IAAIyxD,EAAO,GACrDE,GAAoB,IAGxBD,EAAO,EAAI75F,KAAKuI,KAAKuxF,GACrBR,EAAGv7F,GAAK47F,EAASE,EAAOR,EAAOt7F,GAC/Bu7F,EAAGv7F,EAAI,GAAK67F,EAAQC,EAAOR,EAAOt7F,KAE1C,CAsDIg8F,CAAe31D,EAAQi1D,EAAQC,GArDnC,SAAyBl1D,EAAQk1D,EAAIxoE,EAAY,KAC7C,MAAMqoE,EAAYb,GAAaxnE,GACzBsoE,EAAYh1D,EAAOpmC,OACzB,IAAIgE,EAAOu3F,EAAaC,EACpBC,EAAapB,GAASj0D,EAAQ,GAClC,IAAI,IAAIrmC,EAAI,EAAGA,EAAIq7F,IAAar7F,EAAE,CAI9B,GAHAw7F,EAAcC,EACdA,EAAeC,EACfA,EAAapB,GAASj0D,EAAQrmC,EAAI,IAC7By7F,EACD,SAEJ,MAAMn1D,EAASm1D,EAAa1oE,GACtBwT,EAASk1D,EAAaL,GACxBI,IACAv3F,GAASqiC,EAASk1D,EAAYzoE,IAAc,EAC5C0oE,EAAa,MAAM1oE,KAAeuT,EAASriC,EAC3Cw3F,EAAa,MAAML,KAAe70D,EAAStiC,EAAQs3F,EAAGv7F,IAEtD07F,IACAz3F,GAASy3F,EAAW3oE,GAAauT,GAAU,EAC3Cm1D,EAAa,MAAM1oE,KAAeuT,EAASriC,EAC3Cw3F,EAAa,MAAML,KAAe70D,EAAStiC,EAAQs3F,EAAGv7F,GAE9D,CACJ,CA6BIi8F,CAAgB51D,EAAQk1D,EAAIxoE,EAChC,CAkCQmpE,CAAoB71D,EAAQtT,OACzB,CACH,IAAIkC,EAAOzJ,EAAO6a,EAAOA,EAAOpmC,OAAS,GAAKomC,EAAO,GACrD,IAAIrmC,EAAI,EAAGquB,EAAOgY,EAAOpmC,OAAQD,EAAIquB,IAAQruB,EACzCR,EAAQ6mC,EAAOrmC,GACfm7F,EAAgBX,GAAYvlE,EAAMz1B,EAAO6mC,EAAOpkC,KAAKL,IAAI5B,EAAI,EAAGquB,GAAQ7C,EAAO,EAAI,IAAM6C,GAAO9uB,EAAQy1D,SACxGx1D,EAAMw1F,KAAOmG,EAAc70F,SAASlH,EACpCI,EAAM01F,KAAOiG,EAAc70F,SAASjH,EACpCG,EAAMy1F,KAAOkG,EAAcv1D,KAAKxmC,EAChCI,EAAM21F,KAAOgG,EAAcv1D,KAAKvmC,EAChC41B,EAAOz1B,CAEf,CACID,EAAQw2D,iBA3ChB,SAAyB1vB,EAAQ7O,GAC7B,IAAIx3B,EAAGquB,EAAM7uB,EAAO28F,EAAQC,EACxBC,EAAa7H,GAAenuD,EAAO,GAAI7O,GAC3C,IAAIx3B,EAAI,EAAGquB,EAAOgY,EAAOpmC,OAAQD,EAAIquB,IAAQruB,EACzCo8F,EAAaD,EACbA,EAASE,EACTA,EAAar8F,EAAIquB,EAAO,GAAKmmE,GAAenuD,EAAOrmC,EAAI,GAAIw3B,GACtD2kE,IAGL38F,EAAQ6mC,EAAOrmC,GACXo8F,IACA58F,EAAMw1F,KAAOiG,GAAgBz7F,EAAMw1F,KAAMx9D,EAAKp3B,KAAMo3B,EAAKn3B,OACzDb,EAAM01F,KAAO+F,GAAgBz7F,EAAM01F,KAAM19D,EAAKt3B,IAAKs3B,EAAKr3B,SAExDk8F,IACA78F,EAAMy1F,KAAOgG,GAAgBz7F,EAAMy1F,KAAMz9D,EAAKp3B,KAAMo3B,EAAKn3B,OACzDb,EAAM21F,KAAO8F,GAAgBz7F,EAAM21F,KAAM39D,EAAKt3B,IAAKs3B,EAAKr3B,SAGpE,CAwBQ41D,CAAgB1vB,EAAQ7O,EAEhC,CAUI,SAAS8kE,KACT,MAAyB,oBAAXhzF,QAA8C,oBAAbC,QACnD,CAGI,SAASgzF,GAAeC,GACxB,IAAIhoF,EAASgoF,EAAQ/nF,WAIrB,OAHID,GAAgC,wBAAtBA,EAAOg0E,aACjBh0E,EAASA,EAAOioF,MAEbjoF,CACX,CAII,SAASkoF,GAAcC,EAAYpoF,EAAMqoF,GACzC,IAAIC,EAUJ,MAT0B,iBAAfF,GACPE,EAAgB9V,SAAS4V,EAAY,KACJ,IAA7BA,EAAWz9F,QAAQ,OAEnB29F,EAAgBA,EAAgB,IAAMtoF,EAAKE,WAAWmoF,KAG1DC,EAAgBF,EAEbE,CACX,CACA,MAAMC,GAAoB9mF,GAAUA,EAAQhG,cAAckG,YAAY4mF,iBAAiB9mF,EAAS,MAI1F22B,GAAY,CACd,MACA,QACA,SACA,QAEJ,SAASowD,GAAmBC,EAAQl9E,EAAOm9E,GACvC,MAAMvoD,EAAS,CAAC,EAChBuoD,EAASA,EAAS,IAAMA,EAAS,GACjC,IAAI,IAAIj9F,EAAI,EAAGA,EAAI,EAAGA,IAAI,CACtB,MAAMorC,EAAMuB,GAAU3sC,GACtB00C,EAAOtJ,GAAOyyB,WAAWm/B,EAAOl9E,EAAQ,IAAMsrB,EAAM6xD,KAAY,CACpE,CAGA,OAFAvoD,EAAO/uC,MAAQ+uC,EAAOt0C,KAAOs0C,EAAOr0C,MACpCq0C,EAAO9uC,OAAS8uC,EAAOx0C,IAAMw0C,EAAOv0C,OAC7Bu0C,CACX,CACA,MAAMwoD,GAAe,CAAC99F,EAAGC,EAAGgJ,KAAUjJ,EAAI,GAAKC,EAAI,MAAQgJ,IAAWA,EAAO80F,YA+BzE,SAASC,GAAoBz+F,EAAOK,GACpC,GAAI,WAAYL,EACZ,OAAOA,EAEX,MAAM,OAAE0K,EAAO,wBAAEwoC,GAA6B7yC,EACxC8gB,EAAQg9E,GAAiBzzF,GACzBg0F,EAAgC,eAApBv9E,EAAMkzB,UAClBsqD,EAAWP,GAAmBj9E,EAAO,WACrCy9E,EAAUR,GAAmBj9E,EAAO,SAAU,UAC9C,EAAE1gB,EAAE,EAAEC,EAAE,IAAEisC,GAnChB,SAA2B5/B,EAAGrC,GAC9B,MAAMsU,EAAUjS,EAAEiS,QACZ7K,EAAS6K,GAAWA,EAAQ1d,OAAS0d,EAAQ,GAAKjS,GAClD,QAAEizB,EAAQ,QAAEC,GAAa9rB,EAC/B,IACI1T,EAAGC,EADHisC,GAAM,EAEV,GAAI4xD,GAAav+D,EAASC,EAASlzB,EAAErD,QACjCjJ,EAAIu/B,EACJt/B,EAAIu/B,MACD,CACH,MAAMx0B,EAAOf,EAAO0B,wBACpB3L,EAAI0T,EAAO7H,QAAUb,EAAKhK,KAC1Bf,EAAIyT,EAAO5H,QAAUd,EAAKlK,IAC1BorC,GAAM,CACV,CACA,MAAO,CACHlsC,IACAC,IACAisC,MAER,CAe6BkyD,CAAkB7+F,EAAO0K,GAC5C4qF,EAAUqJ,EAASl9F,MAAQkrC,GAAOiyD,EAAQn9F,MAC1C8zF,EAAUoJ,EAASp9F,KAAOorC,GAAOiyD,EAAQr9F,KAC/C,IAAI,MAAEyF,EAAM,OAAEC,GAAY5G,EAK1B,OAJIq+F,IACA13F,GAAS23F,EAAS33F,MAAQ43F,EAAQ53F,MAClCC,GAAU03F,EAAS13F,OAAS23F,EAAQ33F,QAEjC,CACHxG,EAAG6C,KAAKqB,OAAOlE,EAAI60F,GAAWtuF,EAAQ0D,EAAO1D,MAAQksC,GACrDxyC,EAAG4C,KAAKqB,OAAOjE,EAAI60F,GAAWtuF,EAASyD,EAAOzD,OAASisC,GAE/D,CA0BA,MAAM4rD,GAAU/6F,GAAIT,KAAKqB,MAAU,GAAJZ,GAAU,GAEzC,SAASmtC,GAAexmC,EAAQq0F,EAASC,EAAU//D,GAC/C,MAAM9d,EAAQg9E,GAAiBzzF,GACzBmuC,EAAUulD,GAAmBj9E,EAAO,UACpC8gB,EAAW87D,GAAc58E,EAAM8gB,SAAUv3B,EAAQ,gBAAkBuhF,GACnE/pD,EAAY67D,GAAc58E,EAAM+gB,UAAWx3B,EAAQ,iBAAmBuhF,GACtEgT,EAhCV,SAA0Bv0F,EAAQ1D,EAAOC,GACrC,IAAIg7B,EAAUC,EACd,QAAc5hC,IAAV0G,QAAkC1G,IAAX2G,EAAsB,CAC7C,MAAMmsC,EAAYwqD,GAAelzF,GACjC,GAAK0oC,EAGE,CACH,MAAM3nC,EAAO2nC,EAAUhnC,wBACjB8yF,EAAiBf,GAAiB/qD,GAClC+rD,EAAkBf,GAAmBc,EAAgB,SAAU,SAC/DE,EAAmBhB,GAAmBc,EAAgB,WAC5Dl4F,EAAQyE,EAAKzE,MAAQo4F,EAAiBp4F,MAAQm4F,EAAgBn4F,MAC9DC,EAASwE,EAAKxE,OAASm4F,EAAiBn4F,OAASk4F,EAAgBl4F,OACjEg7B,EAAW87D,GAAcmB,EAAej9D,SAAUmR,EAAW,eAC7DlR,EAAY67D,GAAcmB,EAAeh9D,UAAWkR,EAAW,eACnE,MAXIpsC,EAAQ0D,EAAO2oC,YACfpsC,EAASyD,EAAO20F,YAWxB,CACA,MAAO,CACHr4F,QACAC,SACAg7B,SAAUA,GAAYgqD,GACtB/pD,UAAWA,GAAa+pD,GAEhC,CAQ0BqT,CAAiB50F,EAAQq0F,EAASC,GACxD,IAAI,MAAEh4F,EAAM,OAAEC,GAAYg4F,EAC1B,GAAwB,gBAApB99E,EAAMkzB,UAA6B,CACnC,MAAMuqD,EAAUR,GAAmBj9E,EAAO,SAAU,SAC9Cw9E,EAAWP,GAAmBj9E,EAAO,WAC3Cna,GAAS23F,EAAS33F,MAAQ43F,EAAQ53F,MAClCC,GAAU03F,EAAS13F,OAAS23F,EAAQ33F,MACxC,CAeA,OAdAD,EAAQ1D,KAAKN,IAAI,EAAGgE,EAAQ6xC,EAAQ7xC,OACpCC,EAAS3D,KAAKN,IAAI,EAAGi8B,EAAcj4B,EAAQi4B,EAAch4B,EAAS4xC,EAAQ5xC,QAC1ED,EAAQ83F,GAAOx7F,KAAKL,IAAI+D,EAAOi7B,EAAUg9D,EAAch9D,WACvDh7B,EAAS63F,GAAOx7F,KAAKL,IAAIgE,EAAQi7B,EAAW+8D,EAAc/8D,YACtDl7B,IAAUC,IAGVA,EAAS63F,GAAO93F,EAAQ,UAEO1G,IAAZy+F,QAAsCz+F,IAAb0+F,IAC1B//D,GAAeggE,EAAch4F,QAAUA,EAASg4F,EAAch4F,SAChFA,EAASg4F,EAAch4F,OACvBD,EAAQ83F,GAAOx7F,KAAKqpB,MAAM1lB,EAASg4B,KAEhC,CACHj4B,QACAC,SAER,CAMI,SAASs4F,GAAYl/F,EAAOm/F,EAAYC,GACxC,MAAMC,EAAaF,GAAc,EAC3BG,EAAer8F,KAAKqpB,MAAMtsB,EAAM4G,OAASy4F,GACzCE,EAAct8F,KAAKqpB,MAAMtsB,EAAM2G,MAAQ04F,GAC7Cr/F,EAAM4G,OAAS3D,KAAKqpB,MAAMtsB,EAAM4G,QAChC5G,EAAM2G,MAAQ1D,KAAKqpB,MAAMtsB,EAAM2G,OAC/B,MAAM0D,EAASrK,EAAMqK,OAQrB,OAJIA,EAAOyW,QAAUs+E,IAAe/0F,EAAOyW,MAAMla,SAAWyD,EAAOyW,MAAMna,SACrE0D,EAAOyW,MAAMla,OAAS,GAAG5G,EAAM4G,WAC/ByD,EAAOyW,MAAMna,MAAQ,GAAG3G,EAAM2G,YAE9B3G,EAAM6yC,0BAA4BwsD,GAAch1F,EAAOzD,SAAW04F,GAAgBj1F,EAAO1D,QAAU44F,KACnGv/F,EAAM6yC,wBAA0BwsD,EAChCh1F,EAAOzD,OAAS04F,EAChBj1F,EAAO1D,MAAQ44F,EACfv/F,EAAM0N,IAAI8xF,aAAaH,EAAY,EAAG,EAAGA,EAAY,EAAG,IACjD,EAGf,CAKI,MAAMI,GAA+B,WACrC,IAAIC,GAAmB,EACvB,IACI,MAAMn/F,EAAU,CACRgxC,cAEA,OADAmuD,GAAmB,GACZ,CACX,GAEJp1F,OAAOb,iBAAiB,OAAQ,KAAMlJ,GACtC+J,OAAOhB,oBAAoB,OAAQ,KAAM/I,EAC7C,CAAE,MAAOmM,GAET,CACA,OAAOgzF,CACX,CAfyC,GAwBrC,SAASC,GAAa3oF,EAASN,GAC/B,MAAMmL,EA7LV,SAAkBqoB,EAAIxzB,GAClB,OAAOonF,GAAiB5zD,GAAI01D,iBAAiBlpF,EACjD,CA2LkBgiB,CAAS1hB,EAASN,GAC1B4gF,EAAUz1E,GAASA,EAAM01E,MAAM,qBACrC,OAAOD,GAAWA,EAAQ,QAAKr3F,CACnC,CAII,SAAS4/F,GAAap3F,EAAIoT,EAAIwE,EAAGvgB,GACjC,MAAO,CACHM,EAAGqI,EAAGrI,EAAIigB,GAAKxE,EAAGzb,EAAIqI,EAAGrI,GACzBC,EAAGoI,EAAGpI,EAAIggB,GAAKxE,EAAGxb,EAAIoI,EAAGpI,GAEjC,CAGI,SAASy/F,GAAsBr3F,EAAIoT,EAAIwE,EAAGvgB,GAC1C,MAAO,CACHM,EAAGqI,EAAGrI,EAAIigB,GAAKxE,EAAGzb,EAAIqI,EAAGrI,GACzBC,EAAY,WAATP,EAAoBugB,EAAI,GAAM5X,EAAGpI,EAAIwb,EAAGxb,EAAa,UAATP,EAAmBugB,EAAI,EAAI5X,EAAGpI,EAAIwb,EAAGxb,EAAIggB,EAAI,EAAIxE,EAAGxb,EAAIoI,EAAGpI,EAElH,CAGI,SAAS0/F,GAAqBt3F,EAAIoT,EAAIwE,EAAGvgB,GACzC,MAAMkgG,EAAM,CACR5/F,EAAGqI,EAAGwtF,KACN51F,EAAGoI,EAAG0tF,MAEJ8J,EAAM,CACR7/F,EAAGyb,EAAGm6E,KACN31F,EAAGwb,EAAGq6E,MAEJ3/E,EAAIspF,GAAap3F,EAAIu3F,EAAK3/E,GAC1B7J,EAAIqpF,GAAaG,EAAKC,EAAK5/E,GAC3BmL,EAAIq0E,GAAaI,EAAKpkF,EAAIwE,GAC1BwN,EAAIgyE,GAAatpF,EAAGC,EAAG6J,GACvB3T,EAAImzF,GAAarpF,EAAGgV,EAAGnL,GAC7B,OAAOw/E,GAAahyE,EAAGnhB,EAAG2T,EAC9B,CAEA,MAAM6/E,GAAwB,SAASC,EAAOx5F,GAC1C,MAAO,CACHvG,EAAGA,GACQ+/F,EAAQA,EAAQx5F,EAAQvG,EAEnCskE,SAAUr3B,GACN1mC,EAAQ0mC,CACZ,EACAyT,UAAWrK,GACO,WAAVA,EACOA,EAEM,UAAVA,EAAoB,OAAS,QAExCquB,MAAM,CAAC1kE,EAAGyhB,IACCzhB,EAAIyhB,EAEfsiD,WAAW,CAAC/jE,EAAG6iE,IACJ7iE,EAAI6iE,EAGvB,EACMm9B,GAAwB,WAC1B,MAAO,CACHhgG,EAAGA,GACQA,EAEXskE,SAAUr3B,GAAI,EACdyT,UAAWrK,GACAA,EAEXquB,MAAM,CAAC1kE,EAAGyhB,IACCzhB,EAAIyhB,EAEfsiD,WAAW,CAAC/jE,EAAGigG,IACJjgG,EAGnB,EACA,SAASkgG,GAAct8B,EAAKm8B,EAAOx5F,GAC/B,OAAOq9D,EAAMk8B,GAAsBC,EAAOx5F,GAASy5F,IACvD,CACA,SAASG,GAAsB7yF,EAAK4N,GAChC,IAAIwF,EAAOtd,EACO,QAAd8X,GAAqC,QAAdA,IACvBwF,EAAQpT,EAAIrD,OAAOyW,MACnBtd,EAAW,CACPsd,EAAM8+E,iBAAiB,aACvB9+E,EAAM0/E,oBAAoB,cAE9B1/E,EAAM2/E,YAAY,YAAanlF,EAAW,aAC1C5N,EAAIgzF,kBAAoBl9F,EAEhC,CACA,SAASm9F,GAAqBjzF,EAAKlK,QACdvD,IAAbuD,WACOkK,EAAIgzF,kBACXhzF,EAAIrD,OAAOyW,MAAM2/E,YAAY,YAAaj9F,EAAS,GAAIA,EAAS,IAExE,CAEA,SAASo9F,GAAWlqF,GAChB,MAAiB,UAAbA,EACO,CACHmqF,QAASlT,GACTmT,QAASrT,GACTlU,UAAWmU,IAGZ,CACHmT,QAAS1S,GACT2S,QAAS,CAACvqF,EAAGC,IAAID,EAAIC,EACrB+iE,UAAYn5E,GAAIA,EAExB,CACA,SAAS2gG,IAAiB,MAAEtyF,EAAM,IAAEkM,EAAI,MAAEyJ,EAAM,KAAEoI,EAAK,MAAE1L,IACrD,MAAO,CACHrS,MAAOA,EAAQ2V,EACfzJ,IAAKA,EAAMyJ,EACXoI,KAAMA,IAAS7R,EAAMlM,EAAQ,GAAK2V,GAAU,EAC5CtD,QAER,CA8BC,SAASkgF,GAAc/4D,EAASZ,EAAQgxB,GACrC,IAAKA,EACD,MAAO,CACHpwB,GAGR,MAAM,SAAEvxB,EAAWjI,MAAOwyF,EAAatmF,IAAKumF,GAAc7oC,EACpDj0C,EAAQijB,EAAOpmC,QACf,QAAE6/F,EAAQ,QAAED,EAAQ,UAAEtnB,GAAeqnB,GAAWlqF,IAChD,MAAEjI,EAAM,IAAEkM,EAAI,KAAE6R,EAAK,MAAE1L,GAtCjC,SAAoBmnB,EAASZ,EAAQgxB,GACjC,MAAM,SAAE3hD,EAAWjI,MAAOwyF,EAAatmF,IAAKumF,GAAc7oC,GACpD,QAAEwoC,EAAQ,UAAEtnB,GAAeqnB,GAAWlqF,GACtC0N,EAAQijB,EAAOpmC,OACrB,IACID,EAAGquB,GADH,MAAE5gB,EAAM,IAAEkM,EAAI,KAAE6R,GAAUyb,EAE9B,GAAIzb,EAAM,CAGN,IAFA/d,GAAS2V,EACTzJ,GAAOyJ,EACHpjB,EAAI,EAAGquB,EAAOjL,EAAOpjB,EAAIquB,GACpBwxE,EAAQtnB,EAAUlyC,EAAO54B,EAAQ2V,GAAO1N,IAAYuqF,EAAYC,KADpClgG,EAIjCyN,IACAkM,IAEJlM,GAAS2V,EACTzJ,GAAOyJ,CACX,CAIA,OAHIzJ,EAAMlM,IACNkM,GAAOyJ,GAEJ,CACH3V,QACAkM,MACA6R,OACA1L,MAAOmnB,EAAQnnB,MAEvB,CAU4CqgF,CAAWl5D,EAASZ,EAAQgxB,GAC9D3iB,EAAS,GACf,IAEI7zB,EAAOrhB,EAAO4gG,EAFdC,GAAS,EACTC,EAAW,KAMf,IAAI,IAAItgG,EAAIyN,EAAOwnB,EAAOxnB,EAAOzN,GAAK2Z,IAAO3Z,EACzCR,EAAQ6mC,EAAOrmC,EAAIojB,GACf5jB,EAAMgnC,OAGV3lB,EAAQ03D,EAAU/4E,EAAMkW,IACpBmL,IAAUu/E,IAGdC,EAASR,EAAQh/E,EAAOo/E,EAAYC,GACnB,OAAbI,IAZgBD,GAFER,EAAQI,EAAYG,EAAWv/E,IAA6C,IAAnCi/E,EAAQG,EAAYG,MAe/EE,EAA0C,IAA/BR,EAAQj/E,EAAOo/E,GAAoBjgG,EAAIi1B,GAErC,OAAbqrE,KAdgBD,GAF6B,IAA7BP,EAAQI,EAAUr/E,IAAgBg/E,EAAQK,EAAUE,EAAWv/E,MAiB/E6zB,EAAO9zC,KAAKm/F,GAAiB,CACzBtyF,MAAO6yF,EACP3mF,IAAK3Z,EACLwrB,OACApI,QACAtD,WAEJwgF,EAAW,MAEfrrE,EAAOj1B,EACPogG,EAAYv/E,IAWhB,OATiB,OAAby/E,GACA5rD,EAAO9zC,KAAKm/F,GAAiB,CACzBtyF,MAAO6yF,EACP3mF,MACA6R,OACApI,QACAtD,WAGD40B,CACX,CACC,SAAS6rD,GAAe35D,EAAMywB,GAC3B,MAAM3iB,EAAS,GACT0hB,EAAWxvB,EAAKwvB,SACtB,IAAI,IAAIp2D,EAAI,EAAGA,EAAIo2D,EAASn2D,OAAQD,IAAI,CACpC,MAAMwgG,EAAMR,GAAc5pC,EAASp2D,GAAI4mC,EAAKP,OAAQgxB,GAChDmpC,EAAIvgG,QACJy0C,EAAO9zC,QAAQ4/F,EAEvB,CACA,OAAO9rD,CACX,CA4DC,SAAS+rD,GAAiB75D,EAAM85D,GAC7B,MAAMr6D,EAASO,EAAKP,OACdM,EAAWC,EAAKrnC,QAAQonC,SACxBvjB,EAAQijB,EAAOpmC,OACrB,IAAKmjB,EACD,MAAO,GAEX,MAAMoI,IAASob,EAAKrb,OACd,MAAE9d,EAAM,IAAEkM,GAnEnB,SAAyB0sB,EAAQjjB,EAAOoI,EAAMmb,GAC3C,IAAIl5B,EAAQ,EACRkM,EAAMyJ,EAAQ,EAClB,GAAIoI,IAASmb,EACT,KAAMl5B,EAAQ2V,IAAUijB,EAAO54B,GAAO+4B,MAClC/4B,IAGR,KAAMA,EAAQ2V,GAASijB,EAAO54B,GAAO+4B,MACjC/4B,IAMJ,IAJAA,GAAS2V,EACLoI,IACA7R,GAAOlM,GAELkM,EAAMlM,GAAS44B,EAAO1sB,EAAMyJ,GAAOojB,MACrC7sB,IAGJ,OADAA,GAAOyJ,EACA,CACH3V,QACAkM,MAER,CA4C6BgnF,CAAgBt6D,EAAQjjB,EAAOoI,EAAMmb,GAC9D,OACWi6D,GAAch6D,GADR,IAAbD,EAC2B,CACvB,CACIl5B,QACAkM,MACA6R,SAjDf,SAAuB6a,EAAQ54B,EAAO9L,EAAK6pB,GACxC,MAAMpI,EAAQijB,EAAOpmC,OACfy0C,EAAS,GACf,IAEI/6B,EAFAY,EAAO9M,EACPwnB,EAAOoR,EAAO54B,GAElB,IAAIkM,EAAMlM,EAAQ,EAAGkM,GAAOhY,IAAOgY,EAAI,CACnC,MAAMmQ,EAAMuc,EAAO1sB,EAAMyJ,GACrB0G,EAAI0c,MAAQ1c,EAAIxZ,KACX2kB,EAAKuR,OACNhb,GAAO,EACPkpB,EAAO9zC,KAAK,CACR6M,MAAOA,EAAQ2V,EACfzJ,KAAMA,EAAM,GAAKyJ,EACjBoI,SAEJ/d,EAAQ8M,EAAOuP,EAAIxZ,KAAOqJ,EAAM,OAGpCY,EAAOZ,EACHsb,EAAKuR,OACL/4B,EAAQkM,IAGhBsb,EAAOnL,CACX,CAQA,OAPa,OAATvP,GACAm6B,EAAO9zC,KAAK,CACR6M,MAAOA,EAAQ2V,EACfzJ,IAAKY,EAAO6I,EACZoI,SAGDkpB,CACX,CAqB+BmsD,CAAcx6D,EAAQ54B,EAFrCkM,EAAMlM,EAAQkM,EAAMyJ,EAAQzJ,IACjBitB,EAAKkB,WAAuB,IAAVr6B,GAAekM,IAAQyJ,EAAQ,GAHjEijB,EAAQq6D,EAKnB,CACC,SAASE,GAAch6D,EAAMwvB,EAAU/vB,EAAQq6D,GAC5C,OAAKA,GAAmBA,EAAe3pD,YAAe1Q,EAKzD,SAAyBO,EAAMwvB,EAAU/vB,EAAQq6D,GAC9C,MAAMI,EAAel6D,EAAKna,OAAOoI,aAC3BksE,EAAYC,GAAUp6D,EAAKrnC,UACzBwnC,cAAetY,EAAelvB,SAAS,SAAEonC,IAAiBC,EAC5DxjB,EAAQijB,EAAOpmC,OACfy0C,EAAS,GACf,IAAIusD,EAAYF,EACZtzF,EAAQ2oD,EAAS,GAAG3oD,MACpBzN,EAAIyN,EACR,SAASyzF,EAASt5F,EAAG8D,EAAGwoB,EAAGitE,GACvB,MAAMpiG,EAAM4nC,GAAY,EAAI,EAC5B,GAAI/+B,IAAM8D,EAAV,CAIA,IADA9D,GAAKwb,EACCijB,EAAOz+B,EAAIwb,GAAOojB,MACpB5+B,GAAK7I,EAET,KAAMsnC,EAAO36B,EAAI0X,GAAOojB,MACpB96B,GAAK3M,EAEL6I,EAAIwb,GAAU1X,EAAI0X,IAClBsxB,EAAO9zC,KAAK,CACR6M,MAAO7F,EAAIwb,EACXzJ,IAAKjO,EAAI0X,EACToI,KAAM0I,EACNpU,MAAOqhF,IAEXF,EAAYE,EACZ1zF,EAAQ/B,EAAI0X,EAhBhB,CAkBJ,CACA,IAAK,MAAM6jB,KAAWmvB,EAAS,CAC3B3oD,EAAQk5B,EAAWl5B,EAAQw5B,EAAQx5B,MACnC,IACIqS,EADAmV,EAAOoR,EAAO54B,EAAQ2V,GAE1B,IAAIpjB,EAAIyN,EAAQ,EAAGzN,GAAKinC,EAAQttB,IAAK3Z,IAAI,CACrC,MAAMisE,EAAK5lC,EAAOrmC,EAAIojB,GACtBtD,EAAQkhF,GAAUN,EAAe3pD,WAAWygD,GAAcsJ,EAAc,CACpEn6F,KAAM,UACNa,GAAIytB,EACJxtB,GAAIwkE,EACJm1B,aAAcphG,EAAI,GAAKojB,EACvBi+E,YAAarhG,EAAIojB,EACjBqL,mBAEA6yE,GAAaxhF,EAAOmhF,IACpBC,EAASzzF,EAAOzN,EAAI,EAAGinC,EAAQzb,KAAMy1E,GAEzChsE,EAAOg3C,EACPg1B,EAAYnhF,CAChB,CACIrS,EAAQzN,EAAI,GACZkhG,EAASzzF,EAAOzN,EAAI,EAAGinC,EAAQzb,KAAMy1E,EAE7C,CACA,OAAOvsD,CACX,CA3DW6sD,CAAgB36D,EAAMwvB,EAAU/vB,EAAQq6D,GAFpCtqC,CAGf,CA2DA,SAAS4qC,GAAUzhG,GACf,MAAO,CACHuN,gBAAiBvN,EAAQuN,gBACzBsnD,eAAgB70D,EAAQ60D,eACxBhV,WAAY7/C,EAAQ6/C,WACpBE,iBAAkB//C,EAAQ+/C,iBAC1BgV,gBAAiB/0D,EAAQ+0D,gBACzBtnD,YAAazN,EAAQyN,YACrBG,YAAa5N,EAAQ4N,YAE7B,CACA,SAASm0F,GAAaxhF,EAAOmhF,GACzB,IAAKA,EACD,OAAO,EAEX,MAAM9oE,EAAQ,GACRqpE,EAAW,SAAS9iG,EAAKmiB,GAC3B,OAAKuwE,GAAoBvwE,IAGpBsX,EAAM8W,SAASpuB,IAChBsX,EAAMv3B,KAAKigB,GAERsX,EAAMj5B,QAAQ2hB,IALVA,CAMf,EACA,OAAO6wE,KAAKC,UAAU7xE,EAAO0hF,KAAc9P,KAAKC,UAAUsP,EAAWO,EACzE","sources":["webpack:///./node_modules/chartjs-plugin-zoom/dist/chartjs-plugin-zoom.esm.js","webpack:///./node_modules/hammerjs/hammer.js","webpack:///./node_modules/chart.js/dist/chart.js","webpack:///./node_modules/chart.js/auto/auto.js","webpack:///./node_modules/@kurkle/color/dist/color.esm.js","webpack:///./node_modules/chart.js/dist/chunks/helpers.segment.js"],"sourcesContent":["/*!\n* chartjs-plugin-zoom v2.0.1\n* undefined\n * (c) 2016-2023 chartjs-plugin-zoom Contributors\n * Released under the MIT License\n */\nimport Hammer from 'hammerjs';\nimport { each, valueOrDefault, callback, sign, getRelativePosition } from 'chart.js/helpers';\n\nconst getModifierKey = opts => opts && opts.enabled && opts.modifierKey;\nconst keyPressed = (key, event) => key && event[key + 'Key'];\nconst keyNotPressed = (key, event) => key && !event[key + 'Key'];\n\n/**\n * @param {string|function} mode can be 'x', 'y' or 'xy'\n * @param {string} dir can be 'x' or 'y'\n * @param {import('chart.js').Chart} chart instance of the chart in question\n * @returns {boolean}\n */\nfunction directionEnabled(mode, dir, chart) {\n  if (mode === undefined) {\n    return true;\n  } else if (typeof mode === 'string') {\n    return mode.indexOf(dir) !== -1;\n  } else if (typeof mode === 'function') {\n    return mode({chart}).indexOf(dir) !== -1;\n  }\n\n  return false;\n}\n\nfunction directionsEnabled(mode, chart) {\n  if (typeof mode === 'function') {\n    mode = mode({chart});\n  }\n  if (typeof mode === 'string') {\n    return {x: mode.indexOf('x') !== -1, y: mode.indexOf('y') !== -1};\n  }\n\n  return {x: false, y: false};\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n * @param {function} fn - Function to call. No arguments are passed.\n * @param {number} delay - Delay in ms. 0 = immediate invocation.\n * @returns {function}\n */\nfunction debounce(fn, delay) {\n  let timeout;\n  return function() {\n    clearTimeout(timeout);\n    timeout = setTimeout(fn, delay);\n    return delay;\n  };\n}\n\n/**\n * Checks which axis is under the mouse cursor.\n * @param {{x: number, y: number}} point - the mouse location\n * @param {import('chart.js').Chart} [chart] instance of the chart in question\n * @return {import('chart.js').Scale}\n */\nfunction getScaleUnderPoint({x, y}, chart) {\n  const scales = chart.scales;\n  const scaleIds = Object.keys(scales);\n  for (let i = 0; i < scaleIds.length; i++) {\n    const scale = scales[scaleIds[i]];\n    if (y >= scale.top && y <= scale.bottom && x >= scale.left && x <= scale.right) {\n      return scale;\n    }\n  }\n  return null;\n}\n\n/**\n * Evaluate the chart's mode, scaleMode, and overScaleMode properties to\n * determine which axes are eligible for scaling.\n * options.overScaleMode can be a function if user want zoom only one scale of many for example.\n * @param options - Zoom or pan options\n * @param {{x: number, y: number}} point - the mouse location\n * @param {import('chart.js').Chart} [chart] instance of the chart in question\n * @return {import('chart.js').Scale[]}\n */\nfunction getEnabledScalesByPoint(options, point, chart) {\n  const {mode = 'xy', scaleMode, overScaleMode} = options || {};\n  const scale = getScaleUnderPoint(point, chart);\n\n  const enabled = directionsEnabled(mode, chart);\n  const scaleEnabled = directionsEnabled(scaleMode, chart);\n\n  // Convert deprecated overScaleEnabled to new scaleEnabled.\n  if (overScaleMode) {\n    const overScaleEnabled = directionsEnabled(overScaleMode, chart);\n    for (const axis of ['x', 'y']) {\n      if (overScaleEnabled[axis]) {\n        scaleEnabled[axis] = enabled[axis];\n        enabled[axis] = false;\n      }\n    }\n  }\n\n  if (scale && scaleEnabled[scale.axis]) {\n    return [scale];\n  }\n\n  const enabledScales = [];\n  each(chart.scales, function(scaleItem) {\n    if (enabled[scaleItem.axis]) {\n      enabledScales.push(scaleItem);\n    }\n  });\n  return enabledScales;\n}\n\nconst chartStates = new WeakMap();\n\nfunction getState(chart) {\n  let state = chartStates.get(chart);\n  if (!state) {\n    state = {\n      originalScaleLimits: {},\n      updatedScaleLimits: {},\n      handlers: {},\n      panDelta: {}\n    };\n    chartStates.set(chart, state);\n  }\n  return state;\n}\n\nfunction removeState(chart) {\n  chartStates.delete(chart);\n}\n\nfunction zoomDelta(scale, zoom, center) {\n  const range = scale.max - scale.min;\n  const newRange = range * (zoom - 1);\n\n  const centerPoint = scale.isHorizontal() ? center.x : center.y;\n  // `scale.getValueForPixel()` can return a value less than the `scale.min` or\n  // greater than `scale.max` when `centerPoint` is outside chartArea.\n  const minPercent = Math.max(0, Math.min(1,\n    (scale.getValueForPixel(centerPoint) - scale.min) / range || 0\n  ));\n\n  const maxPercent = 1 - minPercent;\n\n  return {\n    min: newRange * minPercent,\n    max: newRange * maxPercent\n  };\n}\n\nfunction getLimit(state, scale, scaleLimits, prop, fallback) {\n  let limit = scaleLimits[prop];\n  if (limit === 'original') {\n    const original = state.originalScaleLimits[scale.id][prop];\n    limit = valueOrDefault(original.options, original.scale);\n  }\n  return valueOrDefault(limit, fallback);\n}\n\nfunction getRange(scale, pixel0, pixel1) {\n  const v0 = scale.getValueForPixel(pixel0);\n  const v1 = scale.getValueForPixel(pixel1);\n  return {\n    min: Math.min(v0, v1),\n    max: Math.max(v0, v1)\n  };\n}\n\nfunction updateRange(scale, {min, max}, limits, zoom = false) {\n  const state = getState(scale.chart);\n  const {id, axis, options: scaleOpts} = scale;\n\n  const scaleLimits = limits && (limits[id] || limits[axis]) || {};\n  const {minRange = 0} = scaleLimits;\n  const minLimit = getLimit(state, scale, scaleLimits, 'min', -Infinity);\n  const maxLimit = getLimit(state, scale, scaleLimits, 'max', Infinity);\n\n  const range = zoom ? Math.max(max - min, minRange) : scale.max - scale.min;\n  const offset = (range - max + min) / 2;\n  min -= offset;\n  max += offset;\n\n  if (min < minLimit) {\n    min = minLimit;\n    max = Math.min(minLimit + range, maxLimit);\n  } else if (max > maxLimit) {\n    max = maxLimit;\n    min = Math.max(maxLimit - range, minLimit);\n  }\n  scaleOpts.min = min;\n  scaleOpts.max = max;\n\n  state.updatedScaleLimits[scale.id] = {min, max};\n\n  // return true if the scale range is changed\n  return scale.parse(min) !== scale.min || scale.parse(max) !== scale.max;\n}\n\nfunction zoomNumericalScale(scale, zoom, center, limits) {\n  const delta = zoomDelta(scale, zoom, center);\n  const newRange = {min: scale.min + delta.min, max: scale.max - delta.max};\n  return updateRange(scale, newRange, limits, true);\n}\n\nfunction zoomRectNumericalScale(scale, from, to, limits) {\n  updateRange(scale, getRange(scale, from, to), limits, true);\n}\n\nconst integerChange = (v) => v === 0 || isNaN(v) ? 0 : v < 0 ? Math.min(Math.round(v), -1) : Math.max(Math.round(v), 1);\n\nfunction existCategoryFromMaxZoom(scale) {\n  const labels = scale.getLabels();\n  const maxIndex = labels.length - 1;\n\n  if (scale.min > 0) {\n    scale.min -= 1;\n  }\n  if (scale.max < maxIndex) {\n    scale.max += 1;\n  }\n}\n\nfunction zoomCategoryScale(scale, zoom, center, limits) {\n  const delta = zoomDelta(scale, zoom, center);\n  if (scale.min === scale.max && zoom < 1) {\n    existCategoryFromMaxZoom(scale);\n  }\n  const newRange = {min: scale.min + integerChange(delta.min), max: scale.max - integerChange(delta.max)};\n  return updateRange(scale, newRange, limits, true);\n}\n\nfunction scaleLength(scale) {\n  return scale.isHorizontal() ? scale.width : scale.height;\n}\n\nfunction panCategoryScale(scale, delta, limits) {\n  const labels = scale.getLabels();\n  const lastLabelIndex = labels.length - 1;\n  let {min, max} = scale;\n  // The visible range. Ticks can be skipped, and thus not reliable.\n  const range = Math.max(max - min, 1);\n  // How many pixels of delta is required before making a step. stepSize, but limited to max 1/10 of the scale length.\n  const stepDelta = Math.round(scaleLength(scale) / Math.max(range, 10));\n  const stepSize = Math.round(Math.abs(delta / stepDelta));\n  let applied;\n  if (delta < -stepDelta) {\n    max = Math.min(max + stepSize, lastLabelIndex);\n    min = range === 1 ? max : max - range;\n    applied = max === lastLabelIndex;\n  } else if (delta > stepDelta) {\n    min = Math.max(0, min - stepSize);\n    max = range === 1 ? min : min + range;\n    applied = min === 0;\n  }\n\n  return updateRange(scale, {min, max}, limits) || applied;\n}\n\nconst OFFSETS = {\n  second: 500, // 500 ms\n  minute: 30 * 1000, // 30 s\n  hour: 30 * 60 * 1000, // 30 m\n  day: 12 * 60 * 60 * 1000, // 12 h\n  week: 3.5 * 24 * 60 * 60 * 1000, // 3.5 d\n  month: 15 * 24 * 60 * 60 * 1000, // 15 d\n  quarter: 60 * 24 * 60 * 60 * 1000, // 60 d\n  year: 182 * 24 * 60 * 60 * 1000 // 182 d\n};\n\nfunction panNumericalScale(scale, delta, limits, canZoom = false) {\n  const {min: prevStart, max: prevEnd, options} = scale;\n  const round = options.time && options.time.round;\n  const offset = OFFSETS[round] || 0;\n  const newMin = scale.getValueForPixel(scale.getPixelForValue(prevStart + offset) - delta);\n  const newMax = scale.getValueForPixel(scale.getPixelForValue(prevEnd + offset) - delta);\n  const {min: minLimit = -Infinity, max: maxLimit = Infinity} = canZoom && limits && limits[scale.axis] || {};\n  if (isNaN(newMin) || isNaN(newMax) || newMin < minLimit || newMax > maxLimit) {\n    // At limit: No change but return true to indicate no need to store the delta.\n    // NaN can happen for 0-dimension scales (either because they were configured\n    // with min === max or because the chart has 0 plottable area).\n    return true;\n  }\n  return updateRange(scale, {min: newMin, max: newMax}, limits, canZoom);\n}\n\nfunction panNonLinearScale(scale, delta, limits) {\n  return panNumericalScale(scale, delta, limits, true);\n}\n\nconst zoomFunctions = {\n  category: zoomCategoryScale,\n  default: zoomNumericalScale,\n};\n\nconst zoomRectFunctions = {\n  default: zoomRectNumericalScale,\n};\n\nconst panFunctions = {\n  category: panCategoryScale,\n  default: panNumericalScale,\n  logarithmic: panNonLinearScale,\n  timeseries: panNonLinearScale,\n};\n\nfunction shouldUpdateScaleLimits(scale, originalScaleLimits, updatedScaleLimits) {\n  const {id, options: {min, max}} = scale;\n  if (!originalScaleLimits[id] || !updatedScaleLimits[id]) {\n    return true;\n  }\n  const previous = updatedScaleLimits[id];\n  return previous.min !== min || previous.max !== max;\n}\n\nfunction removeMissingScales(limits, scales) {\n  each(limits, (opt, key) => {\n    if (!scales[key]) {\n      delete limits[key];\n    }\n  });\n}\n\nfunction storeOriginalScaleLimits(chart, state) {\n  const {scales} = chart;\n  const {originalScaleLimits, updatedScaleLimits} = state;\n\n  each(scales, function(scale) {\n    if (shouldUpdateScaleLimits(scale, originalScaleLimits, updatedScaleLimits)) {\n      originalScaleLimits[scale.id] = {\n        min: {scale: scale.min, options: scale.options.min},\n        max: {scale: scale.max, options: scale.options.max},\n      };\n    }\n  });\n\n  removeMissingScales(originalScaleLimits, scales);\n  removeMissingScales(updatedScaleLimits, scales);\n  return originalScaleLimits;\n}\n\nfunction doZoom(scale, amount, center, limits) {\n  const fn = zoomFunctions[scale.type] || zoomFunctions.default;\n  callback(fn, [scale, amount, center, limits]);\n}\n\nfunction doZoomRect(scale, amount, from, to, limits) {\n  const fn = zoomRectFunctions[scale.type] || zoomRectFunctions.default;\n  callback(fn, [scale, amount, from, to, limits]);\n}\n\nfunction getCenter(chart) {\n  const ca = chart.chartArea;\n  return {\n    x: (ca.left + ca.right) / 2,\n    y: (ca.top + ca.bottom) / 2,\n  };\n}\n\n/**\n * @param chart The chart instance\n * @param {number | {x?: number, y?: number, focalPoint?: {x: number, y: number}}} amount The zoom percentage or percentages and focal point\n * @param {string} [transition] Which transition mode to use. Defaults to 'none'\n */\nfunction zoom(chart, amount, transition = 'none') {\n  const {x = 1, y = 1, focalPoint = getCenter(chart)} = typeof amount === 'number' ? {x: amount, y: amount} : amount;\n  const state = getState(chart);\n  const {options: {limits, zoom: zoomOptions}} = state;\n\n  storeOriginalScaleLimits(chart, state);\n\n  const xEnabled = x !== 1;\n  const yEnabled = y !== 1;\n  const enabledScales = getEnabledScalesByPoint(zoomOptions, focalPoint, chart);\n\n  each(enabledScales || chart.scales, function(scale) {\n    if (scale.isHorizontal() && xEnabled) {\n      doZoom(scale, x, focalPoint, limits);\n    } else if (!scale.isHorizontal() && yEnabled) {\n      doZoom(scale, y, focalPoint, limits);\n    }\n  });\n\n  chart.update(transition);\n\n  callback(zoomOptions.onZoom, [{chart}]);\n}\n\nfunction zoomRect(chart, p0, p1, transition = 'none') {\n  const state = getState(chart);\n  const {options: {limits, zoom: zoomOptions}} = state;\n  const {mode = 'xy'} = zoomOptions;\n\n  storeOriginalScaleLimits(chart, state);\n  const xEnabled = directionEnabled(mode, 'x', chart);\n  const yEnabled = directionEnabled(mode, 'y', chart);\n\n  each(chart.scales, function(scale) {\n    if (scale.isHorizontal() && xEnabled) {\n      doZoomRect(scale, p0.x, p1.x, limits);\n    } else if (!scale.isHorizontal() && yEnabled) {\n      doZoomRect(scale, p0.y, p1.y, limits);\n    }\n  });\n\n  chart.update(transition);\n\n  callback(zoomOptions.onZoom, [{chart}]);\n}\n\nfunction zoomScale(chart, scaleId, range, transition = 'none') {\n  storeOriginalScaleLimits(chart, getState(chart));\n  const scale = chart.scales[scaleId];\n  updateRange(scale, range, undefined, true);\n  chart.update(transition);\n}\n\nfunction resetZoom(chart, transition = 'default') {\n  const state = getState(chart);\n  const originalScaleLimits = storeOriginalScaleLimits(chart, state);\n\n  each(chart.scales, function(scale) {\n    const scaleOptions = scale.options;\n    if (originalScaleLimits[scale.id]) {\n      scaleOptions.min = originalScaleLimits[scale.id].min.options;\n      scaleOptions.max = originalScaleLimits[scale.id].max.options;\n    } else {\n      delete scaleOptions.min;\n      delete scaleOptions.max;\n    }\n  });\n  chart.update(transition);\n  callback(state.options.zoom.onZoomComplete, [{chart}]);\n}\n\nfunction getOriginalRange(state, scaleId) {\n  const original = state.originalScaleLimits[scaleId];\n  if (!original) {\n    return;\n  }\n  const {min, max} = original;\n  return valueOrDefault(max.options, max.scale) - valueOrDefault(min.options, min.scale);\n}\n\nfunction getZoomLevel(chart) {\n  const state = getState(chart);\n  let min = 1;\n  let max = 1;\n  each(chart.scales, function(scale) {\n    const origRange = getOriginalRange(state, scale.id);\n    if (origRange) {\n      const level = Math.round(origRange / (scale.max - scale.min) * 100) / 100;\n      min = Math.min(min, level);\n      max = Math.max(max, level);\n    }\n  });\n  return min < 1 ? min : max;\n}\n\nfunction panScale(scale, delta, limits, state) {\n  const {panDelta} = state;\n  // Add possible cumulative delta from previous pan attempts where scale did not change\n  const storedDelta = panDelta[scale.id] || 0;\n  if (sign(storedDelta) === sign(delta)) {\n    delta += storedDelta;\n  }\n  const fn = panFunctions[scale.type] || panFunctions.default;\n  if (callback(fn, [scale, delta, limits])) {\n    // The scale changed, reset cumulative delta\n    panDelta[scale.id] = 0;\n  } else {\n    // The scale did not change, store cumulative delta\n    panDelta[scale.id] = delta;\n  }\n}\n\nfunction pan(chart, delta, enabledScales, transition = 'none') {\n  const {x = 0, y = 0} = typeof delta === 'number' ? {x: delta, y: delta} : delta;\n  const state = getState(chart);\n  const {options: {pan: panOptions, limits}} = state;\n  const {onPan} = panOptions || {};\n\n  storeOriginalScaleLimits(chart, state);\n\n  const xEnabled = x !== 0;\n  const yEnabled = y !== 0;\n\n  each(enabledScales || chart.scales, function(scale) {\n    if (scale.isHorizontal() && xEnabled) {\n      panScale(scale, x, limits, state);\n    } else if (!scale.isHorizontal() && yEnabled) {\n      panScale(scale, y, limits, state);\n    }\n  });\n\n  chart.update(transition);\n\n  callback(onPan, [{chart}]);\n}\n\nfunction getInitialScaleBounds(chart) {\n  const state = getState(chart);\n  storeOriginalScaleLimits(chart, state);\n  const scaleBounds = {};\n  for (const scaleId of Object.keys(chart.scales)) {\n    const {min, max} = state.originalScaleLimits[scaleId] || {min: {}, max: {}};\n    scaleBounds[scaleId] = {min: min.scale, max: max.scale};\n  }\n\n  return scaleBounds;\n}\n\nfunction isZoomedOrPanned(chart) {\n  const scaleBounds = getInitialScaleBounds(chart);\n  for (const scaleId of Object.keys(chart.scales)) {\n    const {min: originalMin, max: originalMax} = scaleBounds[scaleId];\n\n    if (originalMin !== undefined && chart.scales[scaleId].min !== originalMin) {\n      return true;\n    }\n\n    if (originalMax !== undefined && chart.scales[scaleId].max !== originalMax) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction removeHandler(chart, type) {\n  const {handlers} = getState(chart);\n  const handler = handlers[type];\n  if (handler && handler.target) {\n    handler.target.removeEventListener(type, handler);\n    delete handlers[type];\n  }\n}\n\nfunction addHandler(chart, target, type, handler) {\n  const {handlers, options} = getState(chart);\n  const oldHandler = handlers[type];\n  if (oldHandler && oldHandler.target === target) {\n    // already attached\n    return;\n  }\n  removeHandler(chart, type);\n  handlers[type] = (event) => handler(chart, event, options);\n  handlers[type].target = target;\n  target.addEventListener(type, handlers[type]);\n}\n\nfunction mouseMove(chart, event) {\n  const state = getState(chart);\n  if (state.dragStart) {\n    state.dragging = true;\n    state.dragEnd = event;\n    chart.update('none');\n  }\n}\n\nfunction keyDown(chart, event) {\n  const state = getState(chart);\n  if (!state.dragStart || event.key !== 'Escape') {\n    return;\n  }\n\n  removeHandler(chart, 'keydown');\n  state.dragging = false;\n  state.dragStart = state.dragEnd = null;\n  chart.update('none');\n}\n\nfunction zoomStart(chart, event, zoomOptions) {\n  const {onZoomStart, onZoomRejected} = zoomOptions;\n  if (onZoomStart) {\n    const point = getRelativePosition(event, chart);\n    if (callback(onZoomStart, [{chart, event, point}]) === false) {\n      callback(onZoomRejected, [{chart, event}]);\n      return false;\n    }\n  }\n}\n\nfunction mouseDown(chart, event) {\n  const state = getState(chart);\n  const {pan: panOptions, zoom: zoomOptions = {}} = state.options;\n  if (\n    event.button !== 0 ||\n    keyPressed(getModifierKey(panOptions), event) ||\n    keyNotPressed(getModifierKey(zoomOptions.drag), event)\n  ) {\n    return callback(zoomOptions.onZoomRejected, [{chart, event}]);\n  }\n\n  if (zoomStart(chart, event, zoomOptions) === false) {\n    return;\n  }\n  state.dragStart = event;\n\n  addHandler(chart, chart.canvas, 'mousemove', mouseMove);\n  addHandler(chart, window.document, 'keydown', keyDown);\n}\n\nfunction computeDragRect(chart, mode, beginPointEvent, endPointEvent) {\n  const xEnabled = directionEnabled(mode, 'x', chart);\n  const yEnabled = directionEnabled(mode, 'y', chart);\n  let {top, left, right, bottom, width: chartWidth, height: chartHeight} = chart.chartArea;\n\n  const beginPoint = getRelativePosition(beginPointEvent, chart);\n  const endPoint = getRelativePosition(endPointEvent, chart);\n\n  if (xEnabled) {\n    left = Math.min(beginPoint.x, endPoint.x);\n    right = Math.max(beginPoint.x, endPoint.x);\n  }\n\n  if (yEnabled) {\n    top = Math.min(beginPoint.y, endPoint.y);\n    bottom = Math.max(beginPoint.y, endPoint.y);\n  }\n  const width = right - left;\n  const height = bottom - top;\n\n  return {\n    left,\n    top,\n    right,\n    bottom,\n    width,\n    height,\n    zoomX: xEnabled && width ? 1 + ((chartWidth - width) / chartWidth) : 1,\n    zoomY: yEnabled && height ? 1 + ((chartHeight - height) / chartHeight) : 1\n  };\n}\n\nfunction mouseUp(chart, event) {\n  const state = getState(chart);\n  if (!state.dragStart) {\n    return;\n  }\n\n  removeHandler(chart, 'mousemove');\n  const {mode, onZoomComplete, drag: {threshold = 0}} = state.options.zoom;\n  const rect = computeDragRect(chart, mode, state.dragStart, event);\n  const distanceX = directionEnabled(mode, 'x', chart) ? rect.width : 0;\n  const distanceY = directionEnabled(mode, 'y', chart) ? rect.height : 0;\n  const distance = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n\n  // Remove drag start and end before chart update to stop drawing selected area\n  state.dragStart = state.dragEnd = null;\n\n  if (distance <= threshold) {\n    state.dragging = false;\n    chart.update('none');\n    return;\n  }\n\n  zoomRect(chart, {x: rect.left, y: rect.top}, {x: rect.right, y: rect.bottom}, 'zoom');\n\n  setTimeout(() => (state.dragging = false), 500);\n  callback(onZoomComplete, [{chart}]);\n}\n\nfunction wheelPreconditions(chart, event, zoomOptions) {\n  // Before preventDefault, check if the modifier key required and pressed\n  if (keyNotPressed(getModifierKey(zoomOptions.wheel), event)) {\n    callback(zoomOptions.onZoomRejected, [{chart, event}]);\n    return;\n  }\n\n  if (zoomStart(chart, event, zoomOptions) === false) {\n    return;\n  }\n\n  // Prevent the event from triggering the default behavior (e.g. content scrolling).\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n\n  // Firefox always fires the wheel event twice:\n  // First without the delta and right after that once with the delta properties.\n  if (event.deltaY === undefined) {\n    return;\n  }\n  return true;\n}\n\nfunction wheel(chart, event) {\n  const {handlers: {onZoomComplete}, options: {zoom: zoomOptions}} = getState(chart);\n\n  if (!wheelPreconditions(chart, event, zoomOptions)) {\n    return;\n  }\n\n  const rect = event.target.getBoundingClientRect();\n  const speed = 1 + (event.deltaY >= 0 ? -zoomOptions.wheel.speed : zoomOptions.wheel.speed);\n  const amount = {\n    x: speed,\n    y: speed,\n    focalPoint: {\n      x: event.clientX - rect.left,\n      y: event.clientY - rect.top\n    }\n  };\n\n  zoom(chart, amount);\n\n  if (onZoomComplete) {\n    onZoomComplete();\n  }\n}\n\nfunction addDebouncedHandler(chart, name, handler, delay) {\n  if (handler) {\n    getState(chart).handlers[name] = debounce(() => callback(handler, [{chart}]), delay);\n  }\n}\n\nfunction addListeners(chart, options) {\n  const canvas = chart.canvas;\n  const {wheel: wheelOptions, drag: dragOptions, onZoomComplete} = options.zoom;\n\n  // Install listeners. Do this dynamically based on options so that we can turn zoom on and off\n  // We also want to make sure listeners aren't always on. E.g. if you're scrolling down a page\n  // and the mouse goes over a chart you don't want it intercepted unless the plugin is enabled\n  if (wheelOptions.enabled) {\n    addHandler(chart, canvas, 'wheel', wheel);\n    addDebouncedHandler(chart, 'onZoomComplete', onZoomComplete, 250);\n  } else {\n    removeHandler(chart, 'wheel');\n  }\n  if (dragOptions.enabled) {\n    addHandler(chart, canvas, 'mousedown', mouseDown);\n    addHandler(chart, canvas.ownerDocument, 'mouseup', mouseUp);\n  } else {\n    removeHandler(chart, 'mousedown');\n    removeHandler(chart, 'mousemove');\n    removeHandler(chart, 'mouseup');\n    removeHandler(chart, 'keydown');\n  }\n}\n\nfunction removeListeners(chart) {\n  removeHandler(chart, 'mousedown');\n  removeHandler(chart, 'mousemove');\n  removeHandler(chart, 'mouseup');\n  removeHandler(chart, 'wheel');\n  removeHandler(chart, 'click');\n  removeHandler(chart, 'keydown');\n}\n\nfunction createEnabler(chart, state) {\n  return function(recognizer, event) {\n    const {pan: panOptions, zoom: zoomOptions = {}} = state.options;\n    if (!panOptions || !panOptions.enabled) {\n      return false;\n    }\n    const srcEvent = event && event.srcEvent;\n    if (!srcEvent) { // Sometimes Hammer queries this with a null event.\n      return true;\n    }\n    if (!state.panning && event.pointerType === 'mouse' && (\n      keyNotPressed(getModifierKey(panOptions), srcEvent) || keyPressed(getModifierKey(zoomOptions.drag), srcEvent))\n    ) {\n      callback(panOptions.onPanRejected, [{chart, event}]);\n      return false;\n    }\n    return true;\n  };\n}\n\nfunction pinchAxes(p0, p1) {\n  // fingers position difference\n  const pinchX = Math.abs(p0.clientX - p1.clientX);\n  const pinchY = Math.abs(p0.clientY - p1.clientY);\n\n  // diagonal fingers will change both (xy) axes\n  const p = pinchX / pinchY;\n  let x, y;\n  if (p > 0.3 && p < 1.7) {\n    x = y = true;\n  } else if (pinchX > pinchY) {\n    x = true;\n  } else {\n    y = true;\n  }\n  return {x, y};\n}\n\nfunction handlePinch(chart, state, e) {\n  if (state.scale) {\n    const {center, pointers} = e;\n    // Hammer reports the total scaling. We need the incremental amount\n    const zoomPercent = 1 / state.scale * e.scale;\n    const rect = e.target.getBoundingClientRect();\n    const pinch = pinchAxes(pointers[0], pointers[1]);\n    const mode = state.options.zoom.mode;\n    const amount = {\n      x: pinch.x && directionEnabled(mode, 'x', chart) ? zoomPercent : 1,\n      y: pinch.y && directionEnabled(mode, 'y', chart) ? zoomPercent : 1,\n      focalPoint: {\n        x: center.x - rect.left,\n        y: center.y - rect.top\n      }\n    };\n\n    zoom(chart, amount);\n\n    // Keep track of overall scale\n    state.scale = e.scale;\n  }\n}\n\nfunction startPinch(chart, state) {\n  if (state.options.zoom.pinch.enabled) {\n    state.scale = 1;\n  }\n}\n\nfunction endPinch(chart, state, e) {\n  if (state.scale) {\n    handlePinch(chart, state, e);\n    state.scale = null; // reset\n    callback(state.options.zoom.onZoomComplete, [{chart}]);\n  }\n}\n\nfunction handlePan(chart, state, e) {\n  const delta = state.delta;\n  if (delta) {\n    state.panning = true;\n    pan(chart, {x: e.deltaX - delta.x, y: e.deltaY - delta.y}, state.panScales);\n    state.delta = {x: e.deltaX, y: e.deltaY};\n  }\n}\n\nfunction startPan(chart, state, event) {\n  const {enabled, onPanStart, onPanRejected} = state.options.pan;\n  if (!enabled) {\n    return;\n  }\n  const rect = event.target.getBoundingClientRect();\n  const point = {\n    x: event.center.x - rect.left,\n    y: event.center.y - rect.top\n  };\n\n  if (callback(onPanStart, [{chart, event, point}]) === false) {\n    return callback(onPanRejected, [{chart, event}]);\n  }\n\n  state.panScales = getEnabledScalesByPoint(state.options.pan, point, chart);\n  state.delta = {x: 0, y: 0};\n  clearTimeout(state.panEndTimeout);\n  handlePan(chart, state, event);\n}\n\nfunction endPan(chart, state) {\n  state.delta = null;\n  if (state.panning) {\n    state.panEndTimeout = setTimeout(() => (state.panning = false), 500);\n    callback(state.options.pan.onPanComplete, [{chart}]);\n  }\n}\n\nconst hammers = new WeakMap();\nfunction startHammer(chart, options) {\n  const state = getState(chart);\n  const canvas = chart.canvas;\n  const {pan: panOptions, zoom: zoomOptions} = options;\n\n  const mc = new Hammer.Manager(canvas);\n  if (zoomOptions && zoomOptions.pinch.enabled) {\n    mc.add(new Hammer.Pinch());\n    mc.on('pinchstart', () => startPinch(chart, state));\n    mc.on('pinch', (e) => handlePinch(chart, state, e));\n    mc.on('pinchend', (e) => endPinch(chart, state, e));\n  }\n\n  if (panOptions && panOptions.enabled) {\n    mc.add(new Hammer.Pan({\n      threshold: panOptions.threshold,\n      enable: createEnabler(chart, state)\n    }));\n    mc.on('panstart', (e) => startPan(chart, state, e));\n    mc.on('panmove', (e) => handlePan(chart, state, e));\n    mc.on('panend', () => endPan(chart, state));\n  }\n\n  hammers.set(chart, mc);\n}\n\nfunction stopHammer(chart) {\n  const mc = hammers.get(chart);\n  if (mc) {\n    mc.remove('pinchstart');\n    mc.remove('pinch');\n    mc.remove('pinchend');\n    mc.remove('panstart');\n    mc.remove('pan');\n    mc.remove('panend');\n    mc.destroy();\n    hammers.delete(chart);\n  }\n}\n\nvar version = \"2.0.1\";\n\nfunction draw(chart, caller, options) {\n  const dragOptions = options.zoom.drag;\n  const {dragStart, dragEnd} = getState(chart);\n\n  if (dragOptions.drawTime !== caller || !dragEnd) {\n    return;\n  }\n  const {left, top, width, height} = computeDragRect(chart, options.zoom.mode, dragStart, dragEnd);\n  const ctx = chart.ctx;\n\n  ctx.save();\n  ctx.beginPath();\n  ctx.fillStyle = dragOptions.backgroundColor || 'rgba(225,225,225,0.3)';\n  ctx.fillRect(left, top, width, height);\n\n  if (dragOptions.borderWidth > 0) {\n    ctx.lineWidth = dragOptions.borderWidth;\n    ctx.strokeStyle = dragOptions.borderColor || 'rgba(225,225,225)';\n    ctx.strokeRect(left, top, width, height);\n  }\n  ctx.restore();\n}\n\nvar plugin = {\n  id: 'zoom',\n\n  version,\n\n  defaults: {\n    pan: {\n      enabled: false,\n      mode: 'xy',\n      threshold: 10,\n      modifierKey: null,\n    },\n    zoom: {\n      wheel: {\n        enabled: false,\n        speed: 0.1,\n        modifierKey: null\n      },\n      drag: {\n        enabled: false,\n        drawTime: 'beforeDatasetsDraw',\n        modifierKey: null\n      },\n      pinch: {\n        enabled: false\n      },\n      mode: 'xy',\n    }\n  },\n\n  start: function(chart, _args, options) {\n    const state = getState(chart);\n    state.options = options;\n\n    if (Object.prototype.hasOwnProperty.call(options.zoom, 'enabled')) {\n      console.warn('The option `zoom.enabled` is no longer supported. Please use `zoom.wheel.enabled`, `zoom.drag.enabled`, or `zoom.pinch.enabled`.');\n    }\n    if (Object.prototype.hasOwnProperty.call(options.zoom, 'overScaleMode')\n      || Object.prototype.hasOwnProperty.call(options.pan, 'overScaleMode')) {\n      console.warn('The option `overScaleMode` is deprecated. Please use `scaleMode` instead (and update `mode` as desired).');\n    }\n\n    if (Hammer) {\n      startHammer(chart, options);\n    }\n\n    chart.pan = (delta, panScales, transition) => pan(chart, delta, panScales, transition);\n    chart.zoom = (args, transition) => zoom(chart, args, transition);\n    chart.zoomRect = (p0, p1, transition) => zoomRect(chart, p0, p1, transition);\n    chart.zoomScale = (id, range, transition) => zoomScale(chart, id, range, transition);\n    chart.resetZoom = (transition) => resetZoom(chart, transition);\n    chart.getZoomLevel = () => getZoomLevel(chart);\n    chart.getInitialScaleBounds = () => getInitialScaleBounds(chart);\n    chart.isZoomedOrPanned = () => isZoomedOrPanned(chart);\n  },\n\n  beforeEvent(chart) {\n    const state = getState(chart);\n    if (state.panning || state.dragging) {\n      // cancel any event handling while panning or dragging\n      return false;\n    }\n  },\n\n  beforeUpdate: function(chart, args, options) {\n    const state = getState(chart);\n    state.options = options;\n    addListeners(chart, options);\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    draw(chart, 'beforeDatasetsDraw', options);\n  },\n\n  afterDatasetsDraw(chart, _args, options) {\n    draw(chart, 'afterDatasetsDraw', options);\n  },\n\n  beforeDraw(chart, _args, options) {\n    draw(chart, 'beforeDraw', options);\n  },\n\n  afterDraw(chart, _args, options) {\n    draw(chart, 'afterDraw', options);\n  },\n\n  stop: function(chart) {\n    removeListeners(chart);\n\n    if (Hammer) {\n      stopHammer(chart);\n    }\n    removeState(chart);\n  },\n\n  panFunctions,\n  zoomFunctions,\n  zoomRectFunctions,\n};\n\nexport { plugin as default, pan, resetZoom, zoom, zoomRect, zoomScale };\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.3.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n"],"names":["getModifierKey","opts","enabled","modifierKey","keyPressed","key","event","keyNotPressed","directionEnabled","mode","dir","chart","undefined","indexOf","directionsEnabled","x","y","getEnabledScalesByPoint","options","point","scaleMode","overScaleMode","scale","scales","scaleIds","Object","keys","i","length","top","bottom","left","right","getScaleUnderPoint","scaleEnabled","overScaleEnabled","axis","enabledScales","scaleItem","push","chartStates","WeakMap","getState","state","get","originalScaleLimits","updatedScaleLimits","handlers","panDelta","set","zoomDelta","zoom","center","range","max","min","newRange","centerPoint","isHorizontal","minPercent","Math","getValueForPixel","getLimit","scaleLimits","prop","fallback","limit","original","id","v","updateRange","limits","scaleOpts","minRange","minLimit","maxLimit","Infinity","offset","parse","integerChange","isNaN","round","OFFSETS","second","minute","hour","day","week","month","quarter","year","panNumericalScale","delta","canZoom","prevStart","prevEnd","time","newMin","getPixelForValue","newMax","panNonLinearScale","zoomFunctions","category","maxIndex","getLabels","existCategoryFromMaxZoom","default","zoomRectFunctions","from","to","pixel0","pixel1","v0","v1","getRange","panFunctions","lastLabelIndex","stepDelta","width","height","scaleLength","stepSize","abs","applied","logarithmic","timeseries","removeMissingScales","opt","storeOriginalScaleLimits","previous","shouldUpdateScaleLimits","doZoom","amount","fn","type","doZoomRect","getCenter","ca","chartArea","transition","focalPoint","zoomOptions","xEnabled","yEnabled","update","onZoom","zoomRect","p0","p1","panScale","storedDelta","s","pan","panOptions","onPan","getInitialScaleBounds","scaleBounds","scaleId","removeHandler","handler","target","removeEventListener","addHandler","oldHandler","addEventListener","mouseMove","dragStart","dragging","dragEnd","keyDown","zoomStart","onZoomStart","onZoomRejected","mouseDown","button","drag","canvas","window","document","computeDragRect","beginPointEvent","endPointEvent","chartWidth","chartHeight","beginPoint","endPoint","zoomX","zoomY","mouseUp","onZoomComplete","threshold","rect","distanceX","distanceY","distance","sqrt","setTimeout","wheel","cancelable","preventDefault","deltaY","wheelPreconditions","getBoundingClientRect","speed","clientX","clientY","createEnabler","recognizer","srcEvent","panning","pointerType","onPanRejected","handlePinch","e","pointers","zoomPercent","pinch","pinchX","pinchY","p","pinchAxes","handlePan","deltaX","panScales","hammers","draw","caller","dragOptions","drawTime","ctx","save","beginPath","fillStyle","backgroundColor","fillRect","borderWidth","lineWidth","strokeStyle","borderColor","strokeRect","restore","plugin","version","defaults","start","_args","prototype","hasOwnProperty","call","console","warn","mc","add","on","startPinch","endPinch","enable","onPanStart","clearTimeout","panEndTimeout","startPan","onPanComplete","endPan","startHammer","args","zoomScale","resetZoom","scaleOptions","getZoomLevel","origRange","getOriginalRange","level","isZoomedOrPanned","originalMin","originalMax","beforeEvent","beforeUpdate","wheelOptions","name","delay","timeout","debounce","addDebouncedHandler","ownerDocument","addListeners","beforeDatasetsDraw","afterDatasetsDraw","beforeDraw","afterDraw","stop","removeListeners","remove","destroy","delete","stopHammer","removeState","exportName","assign","VENDOR_PREFIXES","TEST_ELEMENT","createElement","TYPE_FUNCTION","now","Date","setTimeoutContext","context","bindFn","invokeArrayArg","arg","Array","isArray","each","obj","iterator","forEach","deprecate","method","message","deprecationMessage","Error","stack","replace","log","apply","this","arguments","TypeError","output","index","source","nextKey","extend","dest","src","merge","inherit","child","base","properties","childP","baseP","create","constructor","_super","boolOrFn","val","ifUndefined","val1","val2","addEventListeners","types","splitStr","removeEventListeners","hasParent","node","parent","parentNode","inStr","str","find","trim","split","inArray","findByKey","toArray","slice","uniqueArray","sort","results","values","a","b","prefixed","property","prefix","camelProp","toUpperCase","_uniqueId","getWindowForElement","element","doc","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_MOUSE","COMPUTE_INTERVAL","INPUT_START","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","manager","callback","self","inputTarget","domHandler","ev","init","inputHandler","eventType","input","pointersLen","changedPointersLen","changedPointers","isFirst","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","timeStamp","deltaTime","angle","getAngle","getDistance","offsetDelta","prevDelta","prevInput","computeDeltaXY","offsetDirection","getDirection","end","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","direction","last","lastInterval","computeIntervalInputData","computeInputData","emit","recognize","p2","props","atan2","PI","evEl","evTarget","evWin","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","MouseInput","pressed","which","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SingleTouchInput","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","TouchInput","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","DEDUP_TIMEOUT","TouchMouseInput","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","isSyntheticEvent","t","dx","dy","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","getTouchActionProps","TouchAction","value","compute","actions","touchAction","recognizers","getTouchAction","hasPanX","hasPanY","cleanTouchActions","join","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_POSSIBLE","STATE_FAILED","Recognizer","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","preset","Manager","oldCssProps","inputClass","toggleCssProps","item","recognizeWith","requireFailure","cssProps","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","directionTest","hasMoved","inOut","validPointers","validMovement","validTime","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","force","stopped","curRecognizer","existing","events","off","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","INPUT_MOVE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","Tap","Pan","Swipe","Pinch","Rotate","Press","Animator","_request","_charts","Map","_running","_lastDate","_notify","anims","date","callbacks","listeners","numSteps","duration","initial","currentStep","_refresh","r","_update","remaining","running","items","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","has","reduce","acc","cur","_duration","cancel","animator","transparent","interpolators","boolean","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","currentValue","_fn","_easing","easing","linear","_start","floor","_loop","loop","_target","_prop","_from","_to","_promises","active","elapsed","remain","wait","promises","Promise","res","rej","resolved","Animations","config","_chart","_properties","configure","animationOptions","d","animation","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","animations","_createAnimations","anim","awaitAll","then","charAt","size","scaleClip","allowedOverflow","reverse","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","applyStack","dsIndex","singleMode","datasetIndex","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","_destroy","u","_dataCheck","adata","convertObjectDataToArray","isExtensible","l","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","clip","defaultClip","elements","area","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","_","getAllScaleValues","curr","_length","updateMinAndPrev","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","ratio","DoughnutController","animateRotate","animateScale","numbers","cutout","circumference","radius","spacing","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","text","fontColor","getDataVisibility","onClick","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","_getCircumference","_getRotationExtents","T","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","calcMin","maxX","maxY","H","minX","P","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","PolarAreaController","angleLines","display","beginAtZero","grid","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","points","iPixel","vPixel","skip","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_datasetIndex","_decimated","segment","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","DateAdapterBase","members","formats","format","diff","startOf","endOf","adapters","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","lo","hi","evaluateInteractionItems","position","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","positions","margin","marginForPositions","fitBoxes","boxes","refitBoxes","refit","fullSize","setBoxDims","placeBoxes","userPadding","padding","placed","stackWeight","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","includes","_stack","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","listener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","pointerenter","pointerleave","isNullOrEmpty","eventListenerOptions","passive","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","ret","newTicks","majorStart","majorEnd","ceil","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","result","increment","len","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","tickLength","getTitleHeight","font","lineHeight","titleAlign","align","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","margins","grace","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","autoSkip","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","majorIndices","major","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","title","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","getAxisFromDataset","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","hasFunction","needContext","subResolver","descriptorDefaults","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","onHover","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","setStyle","lineCap","borderCapStyle","lineJoin","borderJoinStyle","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","capBezierPoints","_path","_points","_segments","_pointsUpdated","segments","interpolate","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","skipX","skipY","bounds","addNormalRectPath","inflateRect","refRect","ArcElement","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","translate","radiusOffset","drawArc","inner","angleMargin","clipArc","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","boundingRects","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","k","plugin_colors","forceOverride","chartOptions","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","pointCount","getStartAndCountOfVisiblePointsSimplified","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","startIndex","xMin","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_getTarget","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","_fallback","Colors","Decimation","Filler","SubTitle","_getLabelForValue","relativeLabelSize","minSpacing","rad","LinearScaleBase","_startValue","_endValue","_valueRange","isFinite","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","tickValue","generateTicks$1","LinearScale","formatters","numeric","log10Floor","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","_zero","minExp","exp","startExp","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","hLimits","vLimits","createPointLabelItem","itemOpts","outerDistance","drawingArea","extra","additionalAngle","pointLabelPosition","getPointPosition","yForAngle","getTextAlignForAngle","isNotOverlapped","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","centerPointLabels","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","getPointLabelContext","plFont","setCenterPoint","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","INTERVALS","millisecond","common","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","MAX_SAFE_INTEGER","addTick","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","addedLabels","addIfString","lastIndexOf","findOrAddLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","lim","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","HUE_RE","hsl2rgbn","n","hsv2rgbn","hwb2rgbn","rgb","rgb2hsl","g","hueValue","calln","hsl2rgb","hue","Z","Y","X","W","V","U","S","R","Q","O","N","M","L","K","G","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","RGB_RE","modHSL","tmp","clone","fromObject","functionParse","exec","rgbParse","hwb2rgb","hsv2rgb","hueParse","Color","unpacked","tkeys","ok","nk","parseInt","unpack","nameParse","_rgb","_valid","rgbString","isShort","hslString","c2","w2","w1","rgb1","rgb2","clearer","greyscale","opaquer","negate","lighten","darken","saturate","desaturate","deg","noop","uid","isNullOrUndef","toString","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","toDimension","thisArg","loopable","_elementsEqual","a0","a1","klen","isValidKey","_merger","tval","sval","merger","current","mergeIf","_mergerIf","keyResolvers","resolveObjectKey","part","_splitKey","_getKeyResolver","_capitalize","defined","isFunction","setsEqual","_isClickEvent","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","niceNum","roundedRange","niceRange","fraction","_factorize","isNumber","almostWhole","rounded","_setMinAndMaxByKey","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","distanceBetweenPoints","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","cmp","mid","_lookupByKey","ti","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","_chartjs","object","unlistenArrayEvents","stub","_arrayUnique","requestAnimFrame","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","_alignStartEnd","_textX","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","effects","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","colors","intlCache","formatNumber","num","JSON","stringify","Intl","NumberFormat","getNumberFormat","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","Ticks","getScope$1","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","_measureText","longest","_longestText","arrayOfThings","thing","nestedThing","_alignPixel","halfWidth","clearCanvas","resetTransform","clearRect","drawPoint","drawPointLegend","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","_isPointInArea","clipArea","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","drawBackdrop","oldColor","renderText","setRenderOpts","strokeText","addRoundedRectPath","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","toFontString","resolve","inputs","info","cacheable","_addGrace","minmax","keepZero","createContext","parentContext","_createResolver","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","_context","_subProxy","receiver","getValue","_resolveScriptable","_resolveArray","_resolveWithContext","_allKeys","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","capControlPoint","_updateBezierControlPoints","controlPoints","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","monotoneCompute","splineCurveMonotone","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getRelativePosition","borderBox","paddings","borders","getCanvasPosition","round1","bbWidth","bbHeight","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","readUsedSize","getPropertyValue","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalizeSegment","_boundSegment","startBound","endBound","getSegment","prevValue","inside","subStart","_boundSegments","sub","_computeSegments","segmentOptions","findStartAndEnd","splitByStyles","solidSegments","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","replacer"],"sourceRoot":""}