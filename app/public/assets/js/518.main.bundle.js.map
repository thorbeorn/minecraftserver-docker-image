{"version":3,"file":"518.main.bundle.js","mappings":"sIAMAA,EAAAA,GAAMC,SAASC,EAAAA,IAGf,IAAMC,EAA4BC,SAASC,eAAe,yBAkBpDC,EAAsB,IAAIN,EAAAA,GAAMG,EAA2B,CAC7DI,KAAM,OACNC,KAjBuB,CACvBC,OAAQ,GACRC,SAAU,CACN,CACIC,MAAO,wBACPH,KAAM,GACNI,gBAAiB,yBACjBC,YAAa,uBACbC,YAAa,EACbC,KAAM,WASdC,QAAS,CACLC,QAAS,CACLf,KAAM,CACFgB,IAAK,CACDC,SAAS,EACTC,KAAM,MAEVlB,KAAM,CACFmB,MAAO,CACHF,SAAS,GAEbG,KAAM,CACFH,SAAS,GAEbI,MAAO,CACHJ,SAAS,GAEbC,KAAM,QAIlBI,YAAY,EACZC,OAAQ,CACJC,EAAG,CACCC,aAAa,EACbC,IAAK,MAGbC,SAAU,CACNC,KAAM,CACFC,QAAS,QAoBV,SAASC,IAEpBC,aAAY,WACR,IAhB2BC,EAEzBC,EACA1B,EAHyByB,EAgBR,CAAiB,IAAhBE,KAAKC,SAAgC,IAAhBD,KAAKC,SAAgC,IAAhBD,KAAKC,SAAgC,IAAhBD,KAAKC,UAdtFF,EAAc,IAAIG,KAClB7B,EAASyB,EAAQK,KAAI,kBAAMJ,EAAYK,oBAAoB,IAGjElC,EAAoBE,KAAKC,OAASA,EAClCH,EAAoBE,KAAKE,SAAS,GAAGF,KAAO0B,EAG5C5B,EAAoBmC,QAQpB,GAAG,IACP,C","sources":["webpack:///./public/src/ramChart.js"],"sourcesContent":["// Import de Chart.js et du plugin de zoom\r\n\r\nimport Chart from 'chart.js/auto';\r\nimport zoom from 'chartjs-plugin-zoom';\r\n\r\n// Enregistrez le plugin de zoom\r\nChart.register(zoom);\r\n\r\n// Sélectionner l'élément canvas du graphique de la RAM\r\nconst ramPerformanceChartCanvas = document.getElementById('ram-performance-chart');\r\n\r\n// Définir les données du graphique de la RAM\r\nconst ramPerformanceData = {\r\n    labels: [], // Labels des points de données (peut être vide ou adapté à vos besoins)\r\n    datasets: [\r\n        {\r\n            label: 'Utilisation de la RAM', // Nom de la courbe\r\n            data: [], // Données d'utilisation de la RAM (peut être vide ou adapté à vos besoins)\r\n            backgroundColor: 'rgba(76, 175, 80, 0.2)', // Couleur de remplissage de la courbe (vert avec transparence)\r\n            borderColor: 'rgba(76, 175, 80, 1)', // Couleur de la ligne de la courbe (vert)\r\n            borderWidth: 1, // Épaisseur de la ligne de la courbe\r\n            fill: 'start' // Remplir la courbe avec la couleur de fond définie\r\n        }\r\n    ]\r\n};\r\n\r\n// Créer le graphique de la RAM en utilisant Chart.js\r\nconst ramPerformanceChart = new Chart(ramPerformanceChartCanvas, {\r\n    type: 'line', // Type de graphique : ligne\r\n    data: ramPerformanceData, // Utiliser les données définies précédemment\r\n    options: {\r\n        plugins: {\r\n            zoom: {\r\n                pan: {\r\n                    enabled: true,\r\n                    mode: 'xy'\r\n                },\r\n                zoom: {\r\n                    wheel: {\r\n                        enabled: true,\r\n                    },\r\n                    drag: {\r\n                        enabled: true,\r\n                    },\r\n                    pinch: {\r\n                        enabled: true,\r\n                    },\r\n                    mode: 'xy'\r\n                }\r\n            }\r\n        },\r\n        responsive: true, // Rendre le graphique réactif pour s'adapter à la taille de l'élément contenant\r\n        scales: {\r\n            y: {\r\n                beginAtZero: true, // Débuter l'axe Y à zéro\r\n                max: 100 // Valeur maximale de l'axe Y (100%)\r\n            }\r\n        },\r\n        elements: {\r\n            line: {\r\n                tension: 0.3 // Contrôler la courbure de la ligne de la courbe\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n// Exemple de mise à jour du graphique avec de nouvelles données\r\nfunction updateRamPerformanceChart(newData) {\r\n    // Générer les labels correspondant à l'heure actuelle pour chaque point de données\r\n    const currentTime = new Date();\r\n    const labels = newData.map(() => currentTime.toLocaleTimeString());\r\n\r\n    // Mettre à jour les données du graphique de la RAM avec les nouvelles données fournies\r\n    ramPerformanceChart.data.labels = labels;\r\n    ramPerformanceChart.data.datasets[0].data = newData;\r\n\r\n    // Mettre à jour le graphique\r\n    ramPerformanceChart.update();\r\n}\r\n\r\nexport default function createRamChart() {\r\n    // Exemple d'utilisation : mettre à jour le graphique de la RAM avec de nouvelles données toutes les 5 secondes\r\n    setInterval(() => {\r\n        const randomData = [Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100];\r\n        updateRamPerformanceChart(randomData);\r\n    }, 5000);\r\n}\r\n\r\n"],"names":["Chart","register","zoom","ramPerformanceChartCanvas","document","getElementById","ramPerformanceChart","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","fill","options","plugins","pan","enabled","mode","wheel","drag","pinch","responsive","scales","y","beginAtZero","max","elements","line","tension","createRamChart","setInterval","newData","currentTime","Math","random","Date","map","toLocaleTimeString","update"],"sourceRoot":""}